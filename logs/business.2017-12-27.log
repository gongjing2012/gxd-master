2017/12/27 16:00:37,660 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:00:37,693 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14b58fc0: startup date [Wed Dec 27 16:00:37 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b8174f8
2017/12/27 16:00:40,810 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:00:41,610 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:00:42,473 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:00:42,572 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:00:43,002 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a891b0f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:00:43,250 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$dabe5734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:00:43,273 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c4abb3f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:00:44,170 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:00:44,185 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:00:44,188 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:00:44,337 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:00:44,337 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6644 ms
2017/12/27 16:00:44,862 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:00:44,874 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:00:44,875 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:00:44,875 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:00:44,876 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:00:44,876 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:00:44,876 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:00:44,876 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:00:48,543 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:00:48,545 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:00:48,551 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:00:48,552 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:00:48,554 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:00:48,568 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:00:48,572 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:00:48,574 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:00:48,576 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:00:48,578 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:00:48,601 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:00:48,606 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:00:48,608 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:00:48,627 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:00:48,629 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:00:50,082 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,083 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:00:50,084 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:00:50,085 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,086 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,089 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:00:50,090 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,091 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:00:50,092 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,093 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:00:50,094 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:00:50,095 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:00:50,098 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:00:50,099 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:00:50,100 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,100 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:00:50,101 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:00:50,102 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,103 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,104 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,106 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:00:50,107 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,107 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,108 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:00:50,533 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:00:51,344 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14b58fc0: startup date [Wed Dec 27 16:00:37 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b8174f8
2017/12/27 16:00:51,523 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:00:51,523 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:00:51,628 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:00:53,367 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:00:53,730 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:00:53,941 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:00:53,959 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:00:53,962 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:00:53,963 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:00:53,965 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:00:53,967 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:00:53,972 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:00:54,000 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:00:54,028 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:00:54,040 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:00:54,051 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14b58fc0,type=ConfigurationPropertiesRebinder]
2017/12/27 16:00:54,055 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:00:55,336 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:00:55,356 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:00:59,019 ERROR  restartedMain         com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267) [eureka-client-1.7.0.jar:1.7.0]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:261) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f.CGLIB$eurekaClient$0(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f$$FastClassBySpringCGLIB$$826270de.invoke(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:379) [spring-cloud-context-1.3.0.RELEASE.jar:1.3.0.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:181) [spring-cloud-context-1.3.0.RELEASE.jar:1.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) [spring-aop-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:166) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:155) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdProviderApplication.main(GxdProviderApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 73 more
2017/12/27 16:00:59,032 ERROR  restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943) - DiscoveryClient_GXD_PROVIDER/192.168.2.4:gxd_provider:2000 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:412) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:267) [eureka-client-1.7.0.jar:1.7.0]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:61) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:261) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f.CGLIB$eurekaClient$0(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f$$FastClassBySpringCGLIB$$826270de.invoke(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$cc14ad0f.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:379) [spring-cloud-context-1.3.0.RELEASE.jar:1.3.0.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:181) [spring-cloud-context-1.3.0.RELEASE.jar:1.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) [spring-aop-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:166) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:155) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) [spring-cloud-netflix-eureka-client-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) [spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdProviderApplication.main(GxdProviderApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:00:59,067 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_provider with eureka with status UP
2017/12/27 16:00:59,079 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:00:59,094 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:00:59,117 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:00:59,123 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:00:59,131 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:00:59,136 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:00:59,143 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:00:59,149 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:00:59,156 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:00:59,174 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:00:59,180 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:00:59,187 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:00:59,220 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:00:59,225 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:00:59,230 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:00:59,231 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:00:59,279 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:00:59,439 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:00:59,888 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:00:59,915 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:00:59,937 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:00:59,974 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:00:59,977 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:00:59,990 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 25.346 seconds (JVM running for 28.504)
2017/12/27 16:01:01,085 ERROR  DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:807) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 31 more
2017/12/27 16:01:31,045 ERROR  DiscoveryClient-CacheRefreshExecutor-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 31 more
2017/12/27 16:01:31,047 ERROR  DiscoveryClient-CacheRefreshExecutor-0 com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943) - DiscoveryClient_GXD_PROVIDER/192.168.2.4:gxd_provider:2000 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
2017/12/27 16:01:31,058 ERROR  DiscoveryClient-HeartbeatExecutor-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 28 more
2017/12/27 16:01:31,060 ERROR  DiscoveryClient-HeartbeatExecutor-0 com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:833) - DiscoveryClient_GXD_PROVIDER/192.168.2.4:gxd_provider:2000 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
2017/12/27 16:01:33,093 ERROR  DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:807) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 more
2017/12/27 16:02:03,057 ERROR  DiscoveryClient-CacheRefreshExecutor-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 31 more
2017/12/27 16:02:03,062 ERROR  DiscoveryClient-CacheRefreshExecutor-0 com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:943) - DiscoveryClient_GXD_PROVIDER/192.168.2.4:gxd_provider:2000 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1022) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
2017/12/27 16:02:03,064 ERROR  DiscoveryClient-HeartbeatExecutor-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 28 more
2017/12/27 16:02:03,070 ERROR  DiscoveryClient-HeartbeatExecutor-0 com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:833) - DiscoveryClient_GXD_PROVIDER/192.168.2.4:gxd_provider:2000 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
2017/12/27 16:02:05,101 ERROR  DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83) - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:807) [eureka-client-1.7.0.jar:1.7.0]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104) [eureka-client-1.7.0.jar:1.7.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [?:1.7.0_21]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) [?:1.7.0_21]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178) [?:1.7.0_21]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.7.0_21]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[?:1.7.0_21]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[?:1.7.0_21]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157) ~[?:1.7.0_21]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[?:1.7.0_21]
	at java.net.Socket.connect(Socket.java:579) ~[?:1.7.0_21]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.3.jar:4.5.3]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.3.jar:4.5.3]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 more
2017/12/27 16:02:23,201 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:02:23,230 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@28a3c35d: startup date [Wed Dec 27 16:02:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a7fde12
2017/12/27 16:02:26,235 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=eb9cf926-32a3-31b4-b173-0c3b24fa145c
2017/12/27 16:02:26,285 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:02:26,393 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ea974779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:02:26,425 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d484a435] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:02:27,091 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 16:02:27,109 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:02:27,112 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:02:27,396 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:02:27,397 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 4167 ms
2017/12/27 16:02:28,824 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:02:28,825 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:02:28,826 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:02:28,826 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:02:28,826 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:02:28,827 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 16:02:28,827 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 16:02:28,828 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:02:28,828 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:02:29,027 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 16:02:30,179 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 16:02:30,915 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@28a3c35d: startup date [Wed Dec 27 16:02:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a7fde12
2017/12/27 16:02:31,102 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:02:31,104 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:02:31,152 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:02:31,153 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:02:31,228 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:02:31,229 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:02:31,364 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:02:33,223 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,225 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:02:33,226 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:02:33,227 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:02:33,228 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,230 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,231 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:02:33,232 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:02:33,234 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:02:33,235 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,238 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,239 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,241 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:02:33,242 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,243 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:02:33,243 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:02:33,244 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,245 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,246 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,247 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:02:33,248 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,251 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:02:33,252 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:02:33,252 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:02:33,388 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@28a3c35d: startup date [Wed Dec 27 16:02:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a7fde12] and template loader path [classpath:/templates/]
2017/12/27 16:02:33,389 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:02:33,652 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:02:34,342 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 16:02:34,549 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:02:34,564 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:02:34,567 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:02:34,567 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:02:34,568 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:02:34,569 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:02:34,572 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:02:34,592 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:02:34,608 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:02:34,617 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:02:34,629 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=28a3c35d,type=ConfigurationPropertiesRebinder]
2017/12/27 16:02:34,633 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:02:34,841 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:02:34,842 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 16:02:34,848 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:02:34,858 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:02:34,876 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:02:34,884 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:02:34,888 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:02:34,894 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:02:34,900 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:02:34,907 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:02:34,913 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:02:34,923 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:02:34,930 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:02:34,935 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:02:34,941 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:02:34,946 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:02:34,953 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 16:02:34,954 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 16:02:34,954 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 16:02:34,971 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 16:02:34,973 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 16:02:34,995 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 16:02:35,000 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 16:02:35,012 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 16:02:35,031 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:02:35,059 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 16:02:35,061 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 16:02:35,069 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 16.05 seconds (JVM running for 17.678)
2017/12/27 16:02:58,662 INFO   http-nio-1111-exec-2  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:02:58,663 INFO   http-nio-1111-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:02:58,698 INFO   http-nio-1111-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2017/12/27 16:03:14,074 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:03:14,108 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46bd7e00: startup date [Wed Dec 27 16:03:14 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@412ff43d
2017/12/27 16:03:17,034 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:03:17,761 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:03:18,577 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:03:18,675 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:03:19,079 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3eaaa572] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:03:19,286 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$70d74bb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:03:19,304 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5ac4a86f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:03:20,216 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:03:20,230 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:03:20,232 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:03:20,370 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:03:20,371 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6263 ms
2017/12/27 16:03:20,889 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:03:20,895 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:03:20,896 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:03:20,896 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:03:20,896 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:03:20,897 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:03:20,897 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:03:20,898 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:03:24,068 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:03:24,070 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:03:24,077 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:03:24,078 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:03:24,080 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:03:24,089 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:03:24,091 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:03:24,094 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:03:24,096 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:03:24,097 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:03:24,110 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:03:24,112 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:03:24,114 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:03:24,129 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:03:24,130 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:03:25,503 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:03:25,506 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:03:25,507 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:03:25,507 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,509 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:03:25,511 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:03:25,512 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,513 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,513 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,514 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,515 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,516 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,517 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,518 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,519 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,520 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:03:25,521 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:03:25,521 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:03:25,522 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:03:25,522 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:03:25,523 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:03:25,524 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,524 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:03:25,525 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:03:25,918 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:03:26,732 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46bd7e00: startup date [Wed Dec 27 16:03:14 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@412ff43d
2017/12/27 16:03:26,940 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:03:26,941 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:03:27,083 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:03:28,723 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:03:29,047 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:03:29,194 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:03:29,213 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:03:29,218 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:03:29,219 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:03:29,221 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:03:29,222 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:03:29,226 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:03:29,247 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:03:29,280 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:03:29,306 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:03:29,328 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=46bd7e00,type=ConfigurationPropertiesRebinder]
2017/12/27 16:03:29,333 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:03:29,750 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:03:29,768 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:03:31,005 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_provider with eureka with status UP
2017/12/27 16:03:31,014 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:03:31,031 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:03:31,058 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:03:31,065 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:03:31,081 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:03:31,087 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:03:31,094 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:03:31,101 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:03:31,108 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:03:31,122 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:03:31,128 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:03:31,135 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:03:31,142 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:03:31,147 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:03:31,152 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:03:31,152 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:03:31,184 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:03:31,288 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:03:31,669 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:03:31,694 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:03:31,726 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:03:31,798 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:03:31,807 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:03:31,825 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 21.413 seconds (JVM running for 23.922)
2017/12/27 16:03:54,399 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:03:54,493 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@37098a4d: startup date [Wed Dec 27 16:03:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@784b1bcd
2017/12/27 16:03:57,096 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdConsumerFreemarkerApplication.main(GxdConsumerFreemarkerApplication.java:21) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:03:57,108 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@37098a4d: startup date [Wed Dec 27 16:03:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@784b1bcd
2017/12/27 16:04:20,265 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:04:20,306 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85b6234: startup date [Wed Dec 27 16:04:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37a35e48
2017/12/27 16:04:22,219 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdHystrixApplication.main(GxdHystrixApplication.java:25) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:04:22,230 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85b6234: startup date [Wed Dec 27 16:04:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37a35e48
2017/12/27 16:05:33,768 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:05:33,802 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31b76950: startup date [Wed Dec 27 16:05:33 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@245fea74
2017/12/27 16:05:37,062 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:05:37,839 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:05:38,706 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:05:38,801 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:05:39,221 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c46a7cda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:05:39,480 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f697231b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:05:39,496 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e0847fd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:05:40,366 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:05:40,382 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:05:40,385 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:05:40,537 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:05:40,537 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6735 ms
2017/12/27 16:05:41,060 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:05:41,068 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:05:41,069 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:05:41,070 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:05:41,070 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:05:41,070 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:05:41,071 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:05:41,071 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:05:44,665 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:05:44,667 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:05:44,674 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:05:44,675 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:05:44,676 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:05:44,682 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:05:44,682 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:05:44,683 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:05:44,684 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:05:44,685 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:05:44,693 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:05:44,695 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:05:44,699 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:05:44,719 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:05:44,721 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:05:46,057 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:05:46,059 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,060 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:05:46,061 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:05:46,063 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:05:46,064 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,069 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:05:46,070 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:05:46,070 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,072 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,073 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,075 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,077 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,079 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,080 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:05:46,081 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:05:46,083 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:05:46,083 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,084 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:05:46,085 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,086 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,088 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:05:46,089 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:05:46,090 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:05:46,410 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:05:47,203 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31b76950: startup date [Wed Dec 27 16:05:33 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@245fea74
2017/12/27 16:05:47,446 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:05:47,447 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:05:47,556 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:05:49,028 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:05:49,391 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:05:49,541 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:05:49,571 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:05:49,578 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:05:49,579 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:05:49,581 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:05:49,584 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:05:49,591 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:05:49,625 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:05:49,644 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:05:49,654 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:05:49,666 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=31b76950,type=ConfigurationPropertiesRebinder]
2017/12/27 16:05:49,669 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:05:50,074 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:05:50,090 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:05:51,550 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_provider with eureka with status UP
2017/12/27 16:05:51,564 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:05:51,582 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:05:51,611 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:05:51,622 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:05:51,631 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:05:51,638 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:05:51,644 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:05:51,651 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:05:51,660 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:05:51,673 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:05:51,680 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:05:51,687 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:05:51,692 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:05:51,698 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:05:51,702 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:05:51,703 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:05:51,739 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:05:51,884 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:05:52,373 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:05:52,399 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:05:52,427 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:05:52,471 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:05:52,475 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:05:52,489 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 23.923 seconds (JVM running for 26.637)
2017/12/27 16:07:24,156 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:07:24,179 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ef1ce33: startup date [Wed Dec 27 16:07:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3df4fa3d
2017/12/27 16:07:26,464 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=eb9cf926-32a3-31b4-b173-0c3b24fa145c
2017/12/27 16:07:26,508 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:07:26,625 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$37ffc437] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:07:26,649 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$21ed20f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:07:27,111 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 16:07:27,125 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:07:27,127 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:07:27,346 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:07:27,347 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 3168 ms
2017/12/27 16:07:28,376 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:07:28,377 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:07:28,377 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:07:28,378 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:07:28,379 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:07:28,379 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 16:07:28,380 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 16:07:28,380 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:07:28,381 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:07:28,504 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 16:07:29,569 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 16:07:30,129 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ef1ce33: startup date [Wed Dec 27 16:07:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3df4fa3d
2017/12/27 16:07:30,288 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:07:30,290 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:07:30,333 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:07:30,334 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:07:30,409 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:07:30,410 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:07:30,482 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:07:32,079 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:07:32,080 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,081 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,081 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,083 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:07:32,083 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:07:32,084 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,085 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,086 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:07:32,086 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:07:32,089 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,092 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:07:32,093 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:07:32,094 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,095 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,096 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:07:32,097 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:07:32,097 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,098 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,099 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,100 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:07:32,101 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:07:32,102 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:07:32,103 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:07:32,257 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ef1ce33: startup date [Wed Dec 27 16:07:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3df4fa3d] and template loader path [classpath:/templates/]
2017/12/27 16:07:32,258 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:07:32,506 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:07:33,053 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 16:07:33,219 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:07:33,230 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:07:33,233 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:07:33,233 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:07:33,234 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:07:33,235 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:07:33,238 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:07:33,254 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:07:33,267 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:07:33,275 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:07:33,285 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1ef1ce33,type=ConfigurationPropertiesRebinder]
2017/12/27 16:07:33,289 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:07:33,483 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:07:33,484 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 16:07:33,488 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:07:33,495 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:07:33,507 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:07:33,512 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:07:33,516 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:07:33,520 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:07:33,524 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:07:33,528 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:07:33,532 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:07:33,540 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:07:33,543 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:07:33,547 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:07:33,551 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:07:33,555 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:07:33,559 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 16:07:33,560 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 16:07:33,560 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 16:07:33,579 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 16:07:33,580 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 16:07:33,597 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 16:07:33,597 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 16:07:33,610 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 16:07:33,629 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:07:33,652 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 16:07:33,654 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 16:07:33,659 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 12.716 seconds (JVM running for 14.498)
2017/12/27 16:07:45,073 INFO   http-nio-1111-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:07:45,074 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:07:45,096 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2017/12/27 16:08:00,537 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:08:00,577 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bceb4df: startup date [Wed Dec 27 16:08:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1770008e
2017/12/27 16:08:05,097 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:08:07,226 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:08:08,211 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:08:08,303 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:08:08,658 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cb89bb0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:08:08,893 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fdb6614f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:08:08,908 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e7a3be0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:08:09,774 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:08:09,789 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:08:09,791 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:08:10,031 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:08:10,031 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 9454 ms
2017/12/27 16:08:10,600 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:08:10,610 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:08:10,611 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:08:10,612 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:08:10,612 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:08:10,613 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:08:10,613 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:08:10,613 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:08:14,290 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:08:14,292 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:08:14,298 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:08:14,299 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:08:14,300 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:08:14,307 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:08:14,308 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:08:14,309 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:08:14,311 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:08:14,313 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:08:14,329 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:08:14,332 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:08:14,335 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:08:14,360 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:08:14,362 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:08:16,003 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:08:16,003 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:08:16,004 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,005 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:08:16,006 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:08:16,007 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:08:16,008 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,009 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,009 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,011 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:08:16,011 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,012 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:08:16,013 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:08:16,014 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:08:16,015 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:08:16,016 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:08:16,017 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,018 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,018 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,019 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:08:16,020 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,021 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,022 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,023 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:08:16,431 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:08:17,181 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bceb4df: startup date [Wed Dec 27 16:08:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1770008e
2017/12/27 16:08:17,365 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:08:17,366 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:08:17,500 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:08:18,972 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:08:19,357 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:08:19,519 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:08:19,542 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:08:19,546 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:08:19,548 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:08:19,550 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:08:19,551 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:08:19,556 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:08:19,586 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:08:19,603 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:08:19,613 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:08:19,624 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2bceb4df,type=ConfigurationPropertiesRebinder]
2017/12/27 16:08:19,628 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:08:20,000 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:08:20,024 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:08:23,157 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_provider with eureka with status UP
2017/12/27 16:08:23,171 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:08:23,195 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:08:23,290 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:08:23,354 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:08:23,368 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:08:23,380 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:08:23,467 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:08:23,541 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:08:23,551 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:08:23,567 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:08:23,575 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:08:23,706 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:08:23,715 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:08:23,723 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:08:23,732 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:08:23,733 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:08:23,830 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:08:24,219 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:08:25,418 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:08:25,524 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:08:25,574 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:08:25,644 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:08:25,649 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:08:25,666 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 28.498 seconds (JVM running for 31.377)
2017/12/27 16:08:28,694 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:08:28,732 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@209faeb2: startup date [Wed Dec 27 16:08:28 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc4f6a1
2017/12/27 16:08:30,740 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdHystrixApplication.main(GxdHystrixApplication.java:25) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:08:30,751 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@209faeb2: startup date [Wed Dec 27 16:08:28 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc4f6a1
2017/12/27 16:11:50,605 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:11:50,647 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22f34036: startup date [Wed Dec 27 16:11:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d238fb1
2017/12/27 16:11:55,408 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdConsumerFreemarkerApplication.main(GxdConsumerFreemarkerApplication.java:21) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:11:55,420 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22f34036: startup date [Wed Dec 27 16:11:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d238fb1
2017/12/27 16:21:17,020 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:21:17,042 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@70d7bcfa: startup date [Wed Dec 27 16:21:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fd538c8
2017/12/27 16:21:19,164 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=eb9cf926-32a3-31b4-b173-0c3b24fa145c
2017/12/27 16:21:19,202 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:21:19,295 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5744fd4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:21:19,316 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$41325a0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:21:19,779 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 16:21:19,794 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:21:19,796 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:21:20,017 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:21:20,018 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 2976 ms
2017/12/27 16:21:21,159 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:21:21,160 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:21:21,160 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:21:21,160 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:21:21,161 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:21:21,161 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 16:21:21,161 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 16:21:21,161 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:21:21,162 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:21:21,290 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 16:21:22,401 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 16:21:22,969 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@70d7bcfa: startup date [Wed Dec 27 16:21:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fd538c8
2017/12/27 16:21:23,151 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:21:23,153 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:21:23,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:21:23,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:21:23,282 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:21:23,283 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:21:23,375 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:21:25,072 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:21:25,072 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:21:25,074 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,075 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,076 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,077 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,079 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:21:25,079 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,083 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,084 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:21:25,085 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,086 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:21:25,086 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:21:25,087 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,089 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:21:25,090 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,093 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:21:25,093 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:21:25,094 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,095 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:21:25,095 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,096 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:21:25,097 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:21:25,098 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:21:25,256 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@70d7bcfa: startup date [Wed Dec 27 16:21:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fd538c8] and template loader path [classpath:/templates/]
2017/12/27 16:21:25,257 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:21:25,522 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:21:26,133 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 16:21:26,305 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:21:26,320 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:21:26,322 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:21:26,323 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:21:26,325 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:21:26,327 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:21:26,330 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:21:26,355 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:21:26,375 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:21:26,387 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:21:26,401 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=70d7bcfa,type=ConfigurationPropertiesRebinder]
2017/12/27 16:21:26,406 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:21:26,651 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:21:26,652 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 16:21:26,656 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:21:26,666 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:21:26,682 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:21:26,688 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:21:26,695 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:21:26,700 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:21:26,706 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:21:26,711 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:21:26,717 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:21:26,728 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:21:26,733 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:21:26,739 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:21:26,743 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:21:26,750 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:21:26,756 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 16:21:26,756 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 16:21:26,757 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 16:21:26,775 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 16:21:26,777 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 16:21:26,795 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 16:21:26,796 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 16:21:26,809 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 16:21:26,828 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:21:26,855 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 16:21:26,857 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 16:21:26,866 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 12.589 seconds (JVM running for 15.304)
2017/12/27 16:22:06,169 INFO   http-nio-1111-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:22:06,170 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:22:06,220 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2017/12/27 16:22:08,533 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:22:08,570 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21bd637b: startup date [Wed Dec 27 16:22:08 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3264c826
2017/12/27 16:22:13,373 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:22:14,511 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:22:15,546 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:22:15,672 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:22:16,191 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$685307e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:22:16,428 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9a7fae2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:22:16,452 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$846d0ae6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:22:17,469 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:22:17,493 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:22:17,495 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:22:17,700 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:22:17,700 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 9130 ms
2017/12/27 16:22:18,305 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:22:18,314 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:22:18,315 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:22:18,315 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:22:18,315 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:22:18,316 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:22:18,316 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:22:18,316 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:22:21,675 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:22:21,677 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:22:21,682 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:22:21,683 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:22:21,684 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:22:21,691 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:22:21,693 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:22:21,695 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:22:21,697 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:22:21,699 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:22:21,714 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:22:21,717 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:22:21,718 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:22:21,734 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:22:21,735 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:22:23,196 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,199 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:22:23,202 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:22:23,203 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:22:23,203 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,204 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,205 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:22:23,206 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,207 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,208 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,209 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,210 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,210 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:22:23,211 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:22:23,212 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,213 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:22:23,213 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,214 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:22:23,215 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:22:23,216 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:22:23,217 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,218 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:22:23,219 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:22:23,219 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:22:23,587 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:22:24,385 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21bd637b: startup date [Wed Dec 27 16:22:08 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3264c826
2017/12/27 16:22:24,660 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:22:24,660 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:22:24,786 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:22:26,591 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:22:27,037 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:22:27,201 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:22:27,227 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:22:27,231 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:22:27,235 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:22:27,237 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:22:27,240 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:22:27,248 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:22:27,302 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:22:27,326 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:22:27,338 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:22:27,348 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21bd637b,type=ConfigurationPropertiesRebinder]
2017/12/27 16:22:27,352 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:22:27,666 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:22:27,679 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:22:28,959 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_provider with eureka with status UP
2017/12/27 16:22:29,005 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:22:29,021 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:22:29,106 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:22:29,114 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:22:29,127 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:22:29,138 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:22:29,146 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:22:29,158 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:22:29,192 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:22:29,225 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:22:29,237 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:22:29,245 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:22:29,254 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:22:29,262 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:22:29,268 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:22:29,268 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:22:29,308 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:22:29,410 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:22:29,818 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:22:29,852 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:22:29,881 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:22:29,926 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:22:29,930 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:22:29,946 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 25.305 seconds (JVM running for 28.811)
2017/12/27 16:23:26,129 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:23:26,165 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b7a0b86: startup date [Wed Dec 27 16:23:26 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37c9afa1
2017/12/27 16:23:28,347 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdHystrixApplication.main(GxdHystrixApplication.java:25) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:23:28,356 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b7a0b86: startup date [Wed Dec 27 16:23:26 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37c9afa1
2017/12/27 16:23:58,695 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:23:58,732 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59565775: startup date [Wed Dec 27 16:23:58 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c8a80d8
2017/12/27 16:24:01,440 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdConsumerFreemarkerApplication.main(GxdConsumerFreemarkerApplication.java:21) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:24:01,451 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59565775: startup date [Wed Dec 27 16:23:58 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c8a80d8
2017/12/27 16:24:40,196 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:24:40,231 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e83450d: startup date [Wed Dec 27 16:24:40 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@58ebd747
2017/12/27 16:24:43,679 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:24:44,600 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:24:45,708 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:24:45,819 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:24:46,322 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$81781be7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:24:46,589 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b3a4c228] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:24:46,608 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9d921ee4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:24:47,601 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:24:47,615 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:24:47,618 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:24:47,783 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:24:47,784 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 7554 ms
2017/12/27 16:24:48,359 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:24:48,369 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:24:48,369 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:24:48,369 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:24:48,370 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:24:48,370 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:24:48,370 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:24:48,370 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:24:52,141 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:24:52,144 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:24:52,154 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:24:52,156 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:24:52,157 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:24:52,164 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:24:52,165 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:24:52,166 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:24:52,168 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:24:52,170 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:24:52,175 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:24:52,177 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:24:52,179 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:24:52,197 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:24:52,199 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:24:53,684 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,686 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,688 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:24:53,688 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:24:53,689 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:24:53,693 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:24:53,694 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:24:53,694 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,695 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:24:53,695 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:24:53,696 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:24:53,697 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:24:53,698 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,699 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:24:53,700 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,701 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,703 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:24:53,704 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,704 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,706 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:24:53,706 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,707 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,708 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:53,709 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:24:54,114 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:24:54,835 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e83450d: startup date [Wed Dec 27 16:24:40 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@58ebd747
2017/12/27 16:24:54,994 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:24:54,994 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:24:55,152 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:24:57,215 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:24:57,746 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:24:57,918 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:24:57,943 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:24:57,964 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:24:57,965 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:24:57,968 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:24:57,970 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:24:57,976 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:24:58,010 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:24:58,040 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:24:58,055 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:24:58,076 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5e83450d,type=ConfigurationPropertiesRebinder]
2017/12/27 16:24:58,080 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:24:58,554 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:24:58,570 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:25:00,254 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application provider with eureka with status UP
2017/12/27 16:25:00,264 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:25:00,276 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:25:00,294 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:25:00,304 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:25:00,311 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:25:00,317 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:25:00,321 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:25:00,326 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:25:00,331 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:25:00,341 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:25:00,346 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:25:00,350 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:25:00,354 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:25:00,359 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:25:00,362 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:25:00,363 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:25:00,389 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:25:00,606 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:25:01,013 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:25:01,031 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:25:01,053 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:25:01,095 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:25:01,098 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:25:01,113 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 24.36 seconds (JVM running for 26.89)
2017/12/27 16:25:23,166 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:25:23,201 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13016b86: startup date [Wed Dec 27 16:25:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a8a688
2017/12/27 16:25:26,249 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:25:26,993 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:25:27,893 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:25:28,001 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:25:28,560 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$314797a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:25:42,312 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:25:42,351 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29042f37: startup date [Wed Dec 27 16:25:42 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ea7cba9
2017/12/27 16:25:44,792 ERROR  restartedMain         org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
java.lang.IllegalStateException: Service id not legal hostname (gxd_provider)
	at org.springframework.util.Assert.state(Assert.java:70) ~[spring-core-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:272) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:92) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at com.gxd.GxdConsumerFreemarkerApplication.main(GxdConsumerFreemarkerApplication.java:21) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_21]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_21]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_21]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[?:1.7.0_21]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]
2017/12/27 16:25:44,804 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29042f37: startup date [Wed Dec 27 16:25:42 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ea7cba9
2017/12/27 16:26:20,644 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:26:20,668 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c7ae54a: startup date [Wed Dec 27 16:26:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@17cef68c
2017/12/27 16:26:22,753 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=eb9cf926-32a3-31b4-b173-0c3b24fa145c
2017/12/27 16:26:22,791 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:26:22,891 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b436226d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:26:22,913 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e237f29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:26:23,425 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 16:26:23,440 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:26:23,442 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:26:23,620 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:26:23,621 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 2953 ms
2017/12/27 16:26:24,774 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:26:24,776 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:26:24,776 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:26:24,776 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:26:24,777 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:26:24,777 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 16:26:24,778 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 16:26:24,778 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:26:24,779 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:26:24,916 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 16:26:26,041 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 16:26:26,615 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c7ae54a: startup date [Wed Dec 27 16:26:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@17cef68c
2017/12/27 16:26:26,786 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:26:26,788 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:26:26,829 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:26:26,831 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:26:26,908 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:26:26,909 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:26:26,987 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:26:28,654 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,655 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,656 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:26:28,657 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,659 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:26:28,659 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:26:28,661 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:26:28,661 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,662 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,665 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,667 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,668 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:26:28,671 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:26:28,672 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:26:28,673 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,673 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,674 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:26:28,675 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:26:28,676 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,678 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:26:28,678 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,679 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:26:28,679 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:26:28,680 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:26:28,836 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c7ae54a: startup date [Wed Dec 27 16:26:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@17cef68c] and template loader path [classpath:/templates/]
2017/12/27 16:26:28,838 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:26:29,134 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:26:29,708 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 16:26:29,887 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:26:29,900 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:26:29,903 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:26:29,903 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:26:29,904 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:26:29,906 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:26:29,909 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:26:29,931 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:26:29,945 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:26:29,954 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:26:29,965 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c7ae54a,type=ConfigurationPropertiesRebinder]
2017/12/27 16:26:29,969 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:26:30,182 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:26:30,183 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 16:26:30,188 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:26:30,197 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:26:30,216 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:26:30,225 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:26:30,231 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:26:30,235 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:26:30,241 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:26:30,246 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:26:30,251 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:26:30,262 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:26:30,267 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:26:30,272 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:26:30,277 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:26:30,282 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:26:30,286 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 16:26:30,287 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 16:26:30,287 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 16:26:30,307 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 16:26:30,308 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 16:26:30,327 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 16:26:30,329 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 16:26:30,342 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 16:26:30,362 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:26:30,385 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 16:26:30,387 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 16:26:30,395 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 13.094 seconds (JVM running for 14.565)
2017/12/27 16:27:51,639 INFO   http-nio-1111-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:27:51,640 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:27:51,678 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2017/12/27 16:28:00,270 INFO   restartedMain         com.gxd.GxdProviderApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:28:00,304 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2a88f4: startup date [Wed Dec 27 16:28:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76e06ed6
2017/12/27 16:28:03,465 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:28:04,262 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:28:05,133 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:28:05,224 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:28:05,627 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48dec44a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:28:05,876 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$7b0b6a8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:28:05,892 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$64f8c747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:28:06,776 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:28:06,791 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:28:06,794 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:28:06,975 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:28:06,976 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6672 ms
2017/12/27 16:28:07,472 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:28:07,480 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:28:07,481 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:28:07,481 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:28:07,482 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:28:07,482 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:28:07,482 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:28:07,483 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:28:10,662 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:28:10,663 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:28:10,671 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:28:10,673 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:28:10,674 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:28:10,686 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:28:10,689 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:28:10,692 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:28:10,694 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:28:10,697 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:28:10,718 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:28:10,721 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:28:10,724 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:28:10,752 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:28:10,754 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:28:12,072 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:28:12,074 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:28:12,075 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,076 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:28:12,077 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,078 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:28:12,078 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:28:12,080 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,081 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,084 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:28:12,085 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:28:12,085 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,086 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,088 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,089 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,090 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:28:12,090 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:28:12,091 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:28:12,092 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,093 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,094 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:28:12,096 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:28:12,096 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,097 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:28:12,550 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:28:13,375 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2a88f4: startup date [Wed Dec 27 16:28:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76e06ed6
2017/12/27 16:28:13,587 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:28:13,587 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:28:13,699 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:28:15,038 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:28:15,435 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:28:15,575 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:28:15,591 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:28:15,597 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:28:15,598 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:28:15,600 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:28:15,603 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:28:15,609 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:28:15,638 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:28:15,678 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:28:15,689 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:28:15,706 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c2a88f4,type=ConfigurationPropertiesRebinder]
2017/12/27 16:28:15,712 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:28:16,135 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:28:16,149 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:28:17,471 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application provider with eureka with status UP
2017/12/27 16:28:17,482 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:28:17,497 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:28:17,543 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:28:17,553 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:28:17,562 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:28:17,574 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:28:17,582 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:28:17,592 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:28:17,605 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:28:17,629 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:28:17,637 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:28:17,644 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:28:17,652 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:28:17,659 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:28:17,665 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:28:17,665 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:28:17,724 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:28:17,925 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:28:18,367 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:28:18,396 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:28:18,420 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:28:18,459 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:28:18,462 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:28:18,479 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 21.656 seconds (JVM running for 24.354)
2017/12/27 16:33:03,748 INFO   http-nio-2000-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:33:03,752 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:33:03,884 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 131 ms
2017/12/27 16:33:27,190 DEBUG  http-nio-2000-exec-9  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:53) - # findRoleByUserId , parameter=2017100500000000001 
2017/12/27 16:33:28,009 INFO   http-nio-2000-exec-9  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:914) - {dataSource-1} inited
2017/12/27 16:33:28,051 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT R.ID , R.NAME , R.CODE , R.REMARK FROM T_SYS_ROLE R , T_SYS_USER_ROLE UR WHERE R.ID=UR.ROLE_ID AND UR.USER_ID=? 
2017/12/27 16:33:28,410 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000001(String)
2017/12/27 16:33:28,641 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:33:28,681 DEBUG  http-nio-2000-exec-9  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:55) - # findRoleByUserId , result=[{"code":"admin_role","id":"2017100300000000001","name":"超级管理员","remark":"超级管理员"}]
2017/12/27 16:34:54,055 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=wangxin 
2017/12/27 16:34:54,058 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 16:34:54,060 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: wangxin(String)
2017/12/27 16:34:54,111 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:34:54,123 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"gxd","username":"wangxin"}
2017/12/27 16:34:54,250 DEBUG  http-nio-2000-exec-7  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:53) - # findRoleByUserId , parameter=2017100500000000002 
2017/12/27 16:34:54,252 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT R.ID , R.NAME , R.CODE , R.REMARK FROM T_SYS_ROLE R , T_SYS_USER_ROLE UR WHERE R.ID=UR.ROLE_ID AND UR.USER_ID=? 
2017/12/27 16:34:54,253 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 16:34:54,256 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:34:54,257 DEBUG  http-nio-2000-exec-7  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:55) - # findRoleByUserId , result=[{"code":"common_role","id":"2017100300000000002","name":"普通用户","remark":"普通用户"}]
2017/12/27 16:34:54,268 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:63) - # getPermissions , parameter=2017100500000000002 
2017/12/27 16:34:54,275 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT P.ID , P.HIDE , P.SKEY , P.NAME, P.CSS_CLASS , P.PARENT_KEY , P.LEV , P.SORT , P.URL FROM T_SYS_PERMISSION P , T_SYS_USER_ROLE UR , T_SYS_ROLE_PERMISSION RP WHERE RP.PERMISSION_ID=P.ID AND RP.ROLE_ID=UR.ROLE_ID AND UR.USER_ID=? ORDER BY P.SORT ASC 
2017/12/27 16:34:54,290 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 16:34:54,379 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 151
2017/12/27 16:34:54,414 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:65) - # getPermissions , result=[{"cssClass":"fa-home","hide":1,"id":"2017100200000000001","key":"glsy","lev":1,"name":"管理首页","sort":1,"url":"index"},{"children":[{"cssClass":"","hide":1,"id":"2017100200000000003","key":"znxy_xwfb","lev":2,"name":"新闻发布","parentKey":"znxy","sort":11,"url":"news/add"},{"cssClass":"","hide":1,"id":"2017100200000000004","key":"znxy_xwlb","lev":2,"name":"新闻列表","parentKey":"znxy","sort":12,"url":"news/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000002","key":"znxy","lev":1,"name":"站内新闻","sort":10},{"cssClass":"fa-gear","hide":1,"id":"2017100200000000008","key":"xtpz","lev":1,"name":"系统配置","sort":20,"url":"view/sysconfig/setconfig"},{"cssClass":"fa-desktop","hide":1,"id":"2017100200000000009","key":"dxgl","lev":1,"name":"电商管理","sort":30,"url":"view/tenant/tenant-list"},{"cssClass":"fa-gears","hide":1,"id":"2017100200000000010","key":"dspz","lev":1,"name":"电商配置","sort":40,"url":"view/tenantConfig/list"},{"children":[{"hide":1,"id":"2017100200000000012","key":"dccsgl_tjcs","lev":2,"name":"添加城市","parentKey":"dccsgl","sort":51,"url":"view/city/add2"},{"hide":1,"id":"2017100200000000013","key":"dccsgl_cslb","lev":2,"name":"城市列表","parentKey":"dccsgl","sort":51,"url":"view/city/list"}],"cssClass":"fa-map-marker","hide":1,"id":"2017100200000000011","key":"dccsgl","lev":1,"name":"地区城市管理","sort":50},{"cssClass":"fa-user","hide":1,"id":"2017100200000000014","key":"chgl","lev":1,"name":"账号管理","sort":60,"url":"view/user/user_list"},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000016","key":"lpgl_ktlp","lev":2,"name":"开通楼盘","parentKey":"lpgl","sort":71,"url":"view/project/openProject"},{"cssClass":"fa-pencil","hide":1,"id":"2017100200000000017","key":"lpgl_lpsh","lev":2,"name":"楼盘审核","parentKey":"lpgl","sort":72,"url":"view/project/list"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000018","key":"lpgl_lpgl","lev":2,"name":"楼盘管理","parentKey":"lpgl","sort":73,"url":"view/project/manager_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000019","key":"lpgl_hzlp","lev":2,"name":"合作楼盘","parentKey":"lpgl","sort":74,"url":"view/project/edit_list"},{"children":[{"cssClass":"fa-file-text-o","hide":1,"id":"2017100200000000021","key":"lpgl_tjlp_jbxx","lev":3,"name":"基本信息","parentKey":"lpgl_tjlp","sort":76,"url":"view/project/add"},{"cssClass":"fa-puzzle-piece","hide":1,"id":"2017100200000000022","key":"lpgl_tjlp_hxgl","lev":3,"name":"户型管理","parentKey":"lpgl_tjlp","sort":77,"url":"view/project/add2"},{"cssClass":"fa-picture-o","hide":1,"id":"2017100200000000023","key":"lpgl_tjlp_lpxc","lev":3,"name":"楼盘相册","parentKey":"lpgl_tjlp","sort":78,"url":"view/project/add3"},{"cssClass":"fa-sort-numeric-asc","hide":1,"id":"2017100200000000024","key":"lpgl_tjlp_xkgl","lev":3,"name":"销控管理","parentKey":"lpgl_tjlp","sort":79,"url":"view/project/add4"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000025","key":"lpgl_tjlp_hzxx","lev":3,"name":"合作信息","parentKey":"lpgl_tjlp","sort":80,"url":"view/project/add5"},{"cssClass":"fa-share-alt","hide":1,"id":"2017100200000000026","key":"lpgl_tjlp_cpwh","lev":3,"name":"产品维护","parentKey":"lpgl_tjlp","sort":81,"url":"view/project/add6"},{"cssClass":"fa-dollar","hide":1,"id":"2017100200000000027","key":"lpgl_tjlp_rjwh","lev":3,"name":"拥金维护","parentKey":"lpgl_tjlp","sort":82,"url":"view/project/add7"},{"cssClass":"fa-list-alt","hide":1,"id":"2017100200000000028","key":"lpgl_tjlp_lpdt","lev":3,"name":"楼盘动态","parentKey":"lpgl_tjlp","sort":83,"url":"view/project/add8"},{"cssClass":"fa-heart","hide":1,"id":"2017100200000000029","key":"lpgl_tjlp_yhhd","lev":3,"name":"优惠活动","parentKey":"lpgl_tjlp","sort":84,"url":"view/project/add9"}],"cssClass":"fa-plus","hide":1,"id":"2017100200000000020","key":"lpgl_tjlp","lev":2,"name":"添加楼盘","parentKey":"lpgl","sort":75,"url":"view/project/add"}],"cssClass":"fa-building","hide":1,"id":"2017100200000000015","key":"lpgl","lev":1,"name":"楼盘管理","sort":70,"url":"view/project/list"},{"children":[{"cssClass":"fa-vine","hide":1,"id":"2017100200000000031","key":"jjgsjjr_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjgsjjr","sort":91,"url":"view/firm/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000032","key":"jjgsjjr_jjrgl","lev":2,"name":"经纪人管理","parentKey":"jjgsjjr","sort":92,"url":"view/agent/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000033","key":"jjgsjjr_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"jjgsjjr","sort":93,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000034","key":"jjgsjjr_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"jjgsjjr","sort":94,"url":"view/agent/list"}],"cssClass":"fa-group","hide":1,"id":"2017100200000000030","key":"jjgsjjr","lev":1,"name":"经济公司/经纪人","sort":90},{"children":[{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000036","key":"zygwgl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"zygwgl","sort":101,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000037","key":"zygwgl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"zygwgl","sort":102,"url":"view/adviser/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000038","key":"zygwgl_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"zygwgl","sort":103,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000039","key":"zygwgl_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"zygwgl","sort":104,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000040","key":"zygwgl_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"zygwgl","sort":105,"url":"view/agent/list"}],"cssClass":"fa-user-md","hide":1,"id":"2017100200000000035","key":"zygwgl","lev":1,"name":"置业顾问管理","sort":100},{"children":[{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000042","key":"posjygl_posjbd","lev":2,"name":"POS机绑定","parentKey":"posjygl","sort":111,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000043","key":"posjygl_posbdxx","lev":2,"name":"POS绑定信息","parentKey":"posjygl","sort":112,"url":"view/pos/list"},{"cssClass":"fa-legal","hide":1,"id":"2017100200000000044","key":"posjygl_posjyxx","lev":2,"name":"POS交易信息","parentKey":"posjygl","sort":113,"url":"view/pos/poslog"}],"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000041","key":"posjygl","lev":1,"name":"POS交易管理","sort":110},{"children":[{"cssClass":"fa-user","hide":1,"id":"2017100200000000046","key":"sjtj_yhtj","lev":2,"name":"用户统计","parentKey":"sjtj","sort":121,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000047","key":"sjtj_khtj","lev":2,"name":"客户统计","parentKey":"sjtj","sort":122,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000048","key":"sjtj_sytj","lev":2,"name":"收入统计","parentKey":"sjtj","sort":123,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000049","key":"sjtj_yjtj","lev":2,"name":"佣金统计","parentKey":"sjtj","sort":124,"url":"view/data/statIncome_data"}],"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000045","key":"sjtj","lev":1,"name":"数据统计","sort":120},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000051","key":"htgl_tjgllb","lev":2,"name":"添加/管理列表","parentKey":"htgl","sort":131,"url":"view/agreement/list"},{"cssClass":"fa-mail-forward","hide":1,"id":"2017100200000000052","key":"htgl_zrg","lev":2,"name":"转认购","parentKey":"htgl","sort":132,"url":"view/agreement/rengou"},{"cssClass":"fa-check-square-o","hide":1,"id":"2017100200000000053","key":"htgl_qy","lev":2,"name":"签约","parentKey":"htgl","sort":133,"url":"view/agreement/qianyue"},{"cssClass":"fa-edit","hide":1,"id":"2017100200000000054","key":"htgl_htmxbj","lev":2,"name":"合同明细/编辑","parentKey":"htgl","sort":134,"url":"view/agreement/edit"},{"cssClass":"fa-building-o","hide":1,"id":"2017100200000000055","key":"htgl_htxq","lev":2,"name":"合同详情","parentKey":"htgl","sort":135,"url":"view/agreement/view"}],"cssClass":"fa-edit","hide":1,"id":"2017100200000000050","key":"htgl","lev":1,"name":"合同管理","sort":130},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000057","key":"zjl_khtj","lev":2,"name":"客户统计","parentKey":"zjl","sort":141,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000058","key":"zjl_sytj","lev":2,"name":"收入统计","parentKey":"zjl","sort":143,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000059","key":"zjl_yjtj","lev":2,"name":"佣金统计","parentKey":"zjl","sort":144,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000056","key":"zjl","lev":1,"name":"总经理","sort":140},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000061","key":"jjgsgly_hz","lev":2,"name":"合作","parentKey":"jjgsgly","sort":151,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000062","key":"jjgsgly_mdlb","lev":2,"name":"门店列表","parentKey":"jjgsgly","sort":152,"url":"view/firm/list2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000063","key":"jjgsgly_zhgl","lev":2,"name":"账号管理","parentKey":"jjgsgly","sort":153,"url":"view/user/user_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000064","key":"jjgsgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"jjgsgly","sort":154,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000065","key":"jjgsgly_dgzh","lev":2,"name":"对公账号","parentKey":"jjgsgly","sort":155,"url":"view/firm/view"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000066","key":"jjgsgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"jjgsgly","sort":156,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000067","key":"jjgsgly_khlb","lev":2,"name":"客户列表","parentKey":"jjgsgly","sort":157,"url":"view/agent/custAgent"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000068","key":"jjgsgly_yjxx","lev":2,"name":"佣金信息","parentKey":"jjgsgly","sort":158,"url":"view/commission/agentCommission"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000069","key":"jjgsgly_ewyj","lev":2,"name":"额外佣金","parentKey":"jjgsgly","sort":159,"url":"view/commission/commissionExt"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000070","key":"jjgsgly_khtj","lev":2,"name":"客户统计","parentKey":"jjgsgly","sort":160,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000071","key":"jjgsgly_sytj","lev":2,"name":"收入统计","parentKey":"jjgsgly","sort":161,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000072","key":"jjgsgly_yjtj","lev":2,"name":"佣金统计","parentKey":"jjgsgly","sort":162,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000060","key":"jjgsgly","lev":1,"name":"经济公司管理员","sort":150},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000074","key":"mdgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"mdgly","sort":171,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000075","key":"mdgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"mdgly","sort":172,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000076","key":"mdgly_khlb","lev":2,"name":"客户列表","parentKey":"mdgly","sort":173,"url":"view/agent/custAgent"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000077","key":"mdgly_yhtj2","lev":2,"name":"用户统计","parentKey":"mdgly","sort":174,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000078","key":"mdgly_yhtj3","lev":2,"name":"用户统计","parentKey":"mdgly","sort":175,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000079","key":"mdgly_yhtj4","lev":2,"name":"用户统计","parentKey":"mdgly","sort":176,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000080","key":"mdgly_khtj","lev":2,"name":"客户统计","parentKey":"mdgly","sort":177,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000073","key":"mdgly","lev":1,"name":"门店管理员","sort":170},{"children":[{"children":[{"hide":1,"id":"2017100200000000083","key":"acjl_lpgl_lpgl","lev":3,"name":"楼盘列表","parentKey":"acjl_lpgl","sort":182,"url":"view/project/list"},{"hide":1,"id":"2017100200000000084","key":"acjl_lpgl_bjtj","lev":3,"name":"编辑添加","parentKey":"acjl_lpgl","sort":183,"url":"view/project/add"}],"hide":1,"id":"2017100200000000082","key":"acjl_lpgl","lev":2,"name":"楼盘管理","parentKey":"acjl","sort":181},{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000085","key":"acjl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"acjl","sort":184,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000086","key":"acjl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"acjl","sort":185,"url":"view/adviser/list"},{"hide":1,"id":"2017100200000000087","key":"acjl_khsh","lev":2,"name":"客户审核","parentKey":"acjl","sort":186,"url":"view/custintent/custAuditList"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000081","key":"acjl","lev":1,"name":"案场经理","sort":180},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000089","key":"xmzj_khtj","lev":2,"name":"客户统计","parentKey":"xmzj","sort":191,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000090","key":"xmzj_sytj","lev":2,"name":"收入统计","parentKey":"xmzj","sort":192,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000091","key":"xmzj_yjtj","lev":2,"name":"佣金统计","parentKey":"xmzj","sort":193,"url":"view/data/statIncome_data"}],"hide":1,"id":"2017100200000000088","key":"xmzj","lev":1,"name":"项目总监","sort":190},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000093","key":"xmjl_ktlp","lev":2,"name":"开通楼盘","parentKey":"xmjl","sort":201,"url":"view/project/openProject"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000094","key":"xmjl_zhgl","lev":2,"name":"账号管理","parentKey":"xmjl","sort":202,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000095","key":"xmjl_yjsh","lev":2,"name":"佣金审核","parentKey":"xmjl","sort":203,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000096","key":"xmjl_kfsbt","lev":2,"name":"开发商补贴","parentKey":"xmjl","sort":204,"url":"view/devpSubsidy/list"},{"hide":1,"id":"2017100200000000097","key":"xmjl_tsgl","lev":2,"name":"推送管理","parentKey":"xmjl","sort":205,"url":"view/push/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000098","key":"xmjl_khtj","lev":2,"name":"客户统计","parentKey":"xmjl","sort":206,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000099","key":"xmjl_sytj","lev":2,"name":"收入统计","parentKey":"xmjl","sort":207,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000100","key":"xmjl_yjtj","lev":2,"name":"佣金统计","parentKey":"xmjl","sort":208,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000092","key":"xmjl","lev":1,"name":"项目经理","sort":200},{"children":[{"hide":1,"id":"2017100200000000102","key":"xmzl_qrdf","lev":2,"name":"确认到访","parentKey":"xmzl","sort":211,"url":"view/code/code"},{"hide":1,"id":"2017100200000000103","key":"xmzl_fsyyyzm","lev":2,"name":"发送语音验证码","parentKey":"xmzl","sort":212,"url":"view/code/telcode"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000104","key":"xmzl_posjbd","lev":2,"name":"POS机绑定","parentKey":"xmzl","sort":213,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000105","key":"xmzl_posbdxx","lev":2,"name":"POS交易记录","parentKey":"xmzl","sort":214,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000106","key":"xmzl_khyxqx","lev":2,"name":"客户意向查询","parentKey":"xmzl","sort":215,"url":"view/custintent/custAuditList"},{"hide":1,"id":"2017100200000000107","key":"xmzl_htgl","lev":2,"name":"合同管理","parentKey":"xmzl","sort":216,"url":"view/agreement/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000101","key":"xmzl","lev":1,"name":"项目助理","sort":210},{"children":[{"hide":1,"id":"2017100200000000109","key":"yyzy_qdgzpz","lev":2,"name":"签到规则配置","parentKey":"yyzy","sort":221,"url":"view/sysconfig/signin"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000110","key":"yyzy_lpgl","lev":2,"name":"楼盘管理","parentKey":"yyzy","sort":222,"url":"view/project/manager_list"},{"hide":1,"id":"2017100200000000111","key":"yyzy_tjcs","lev":2,"name":"城市管理","parentKey":"yyzy","sort":223,"url":"view/city/add2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000112","key":"yyzy_zhgl","lev":2,"name":"账号管理","parentKey":"yyzy","sort":224,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000113","key":"yyzy_tsgl","lev":2,"name":"推送管理","parentKey":"yyzy","sort":225,"url":"view/push/list"},{"hide":1,"id":"2017100200000000114","key":"yyzy_ggwgl","lev":2,"name":"广告位管理","parentKey":"yyzy","sort":226,"url":"view/adv/list"},{"hide":1,"id":"2017100200000000115","key":"yyzy_khyxqx","lev":2,"name":"客户意向查询","parentKey":"yyzy","sort":227,"url":"view/custintent/custAuditList"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000116","key":"yyzy_posjbd","lev":2,"name":"POS机绑定","parentKey":"yyzy","sort":228,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000117","key":"yyzy_posjyjl","lev":2,"name":"POS交易记录","parentKey":"yyzy","sort":229,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000118","key":"yyzy_qyjjgs","lev":2,"name":"签约经纪公司","parentKey":"yyzy","sort":230,"url":"view/pos/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000119","key":"yyzy_jjrgl","lev":2,"name":"经纪人管理","parentKey":"yyzy","sort":231,"url":"view/agent/list"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000120","key":"yyzy_yhtj","lev":2,"name":"用户统计","parentKey":"yyzy","sort":232,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000121","key":"yyzy_khtj","lev":2,"name":"客户统计","parentKey":"yyzy","sort":233,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000122","key":"yyzy_sytj","lev":2,"name":"收入统计","parentKey":"yyzy","sort":234,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000123","key":"yyzy_yjtj","lev":2,"name":"佣金统计","parentKey":"yyzy","sort":235,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000108","key":"yyzy","lev":1,"name":"运营专员","sort":220},{"children":[{"hide":1,"id":"2017100200000000125","key":"yjzy_yjgzsh","lev":2,"name":"佣金规则审核","parentKey":"yjzy","sort":241,"url":"view/commission/auditList"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000126","key":"yjzy_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"yjzy","sort":242,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000127","key":"yjzy_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"yjzy","sort":243,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000128","key":"yjzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"yjzy","sort":244,"url":"view/agent/grain"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000129","key":"yjzy_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"yjzy","sort":245,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000130","key":"yjzy_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"yjzy","sort":246,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000131","key":"yjzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"yjzy","sort":247,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000132","key":"yjzy_dgzhsh","lev":2,"name":"对公账号审核","parentKey":"yjzy","sort":248,"url":"view/firm/account"},{"hide":1,"id":"2017100200000000133","key":"yjzy_tksh","lev":2,"name":"退款审核","parentKey":"yjzy","sort":249,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000134","key":"yjzy_yjsh","lev":2,"name":"佣金审核","parentKey":"yjzy","sort":250,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000135","key":"yjzy_htgl","lev":2,"name":"合同管理","parentKey":"yjzy","sort":251,"url":"view/agreement/list"},{"hide":1,"id":"2017100200000000136","key":"yjzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"yjzy","sort":252,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000124","key":"yjzy","lev":1,"name":"佣金专员","sort":240},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000138","key":"cnzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cnzy","sort":261,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000139","key":"cnzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cnzy","sort":262,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000140","key":"cnzy_tksh","lev":2,"name":"退款审核","parentKey":"cnzy","sort":263,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000141","key":"cnzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cnzy","sort":264,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000142","key":"cnzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cnzy","sort":265,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000137","key":"cnzy","lev":1,"name":"出纳专员","sort":260},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000144","key":"cwzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cwzy","sort":271,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000145","key":"cwzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cwzy","sort":272,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000146","key":"cwzy_kfsbt","lev":2,"name":"开发商补贴确认","parentKey":"cwzy","sort":273,"url":"view/devpSubsidy/list2"},{"hide":1,"id":"2017100200000000147","key":"cwzy_tksh","lev":2,"name":"退款审核","parentKey":"cwzy","sort":274,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000148","key":"cwzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cwzy","sort":275,"url":"view/commission/list"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000149","key":"cwzy_posbdxx","lev":2,"name":"POS交易记录","parentKey":"cwzy","sort":276,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000150","key":"cwzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cwzy","sort":277,"url":"view/commission/Ext"}],"hide":1,"id":"2017100200000000143","key":"cwzy","lev":1,"name":"财务专员","sort":270},{"children":[{"hide":1,"id":"2017100200000000152","key":"jjfwzycs_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjfwzycs","sort":281,"url":"view/firm/list2"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000151","key":"jjfwzycs","lev":1,"name":"经纪服务专员测试","sort":280},{"children":[{"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000154","key":"kfzy_khyxsh","lev":2,"name":"客户意向审核","parentKey":"kfzy","sort":291,"url":"view/custintent/custSupport"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000153","key":"kfzy","lev":1,"name":"客服专员","sort":290}]
2017/12/27 16:34:54,646 DEBUG  http-nio-2000-exec-9  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 16:34:55,144 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT count(0) FROM T_NEWS 
2017/12/27 16:34:55,147 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:34:55,185 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:34:55,187 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc LIMIT 10 
2017/12/27 16:34:55,191 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:34:55,194 DEBUG  http-nio-2000-exec-9  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 16:34:55,196 INFO   http-nio-2000-exec-9  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=10, size=4, startRow=1, endRow=4, total=4, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=4, pages=1, reasonable=true, pageSizeZero=false}, prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 16:34:55,210 DEBUG  http-nio-2000-exec-9  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
2017/12/27 16:35:49,916 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 16:35:49,918 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT count(0) FROM T_NEWS 
2017/12/27 16:35:49,919 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:35:49,921 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:35:49,922 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc LIMIT 10 
2017/12/27 16:35:49,923 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:35:49,928 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 16:35:49,929 INFO   http-nio-2000-exec-3  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=10, size=4, startRow=1, endRow=4, total=4, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=4, pages=1, reasonable=true, pageSizeZero=false}, prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 16:35:49,930 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
1NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2001"]
2017/12/27 16:29:49,873 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2001"]
2017/12/27 16:29:49,896 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:29:49,929 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2001 (http)
2017/12/27 16:29:49,931 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2001
2017/12/27 16:29:49,939 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStarted(StartupInfoLogger.java:57) - Started GxdHystrixApplication in 15.662 seconds (JVM running for 17.964)
2017/12/27 16:34:49,265 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:39:49,272 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
d.AnnotationConfigEmbeddedWebApplicationContext@3d338143: startup date [Wed Dec 27 16:30:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c55a870
2017/12/27 16:30:27,220 INFO   restartedMain         org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/27 16:30:28,389 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=3dd2e373-5973-371d-b1f7-9e95f904db1c
2017/12/27 16:30:28,468 INFO   restartedMain         org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'XSSCheck' with a different definition: replacing [Root bean: class [org.springframework.boot.web.servlet.FilterRegistrationBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.boot.web.servlet.FilterRegistrationBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2017/12/27 16:30:28,474 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 16:30:28,494 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 16:30:28,604 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:30:28,613 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'shiroConfiguration' of type [com.gxd.common.shiro.ShiroConfiguration$$EnhancerBySpringCGLIB$$42043054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:28,767 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:148) - Configuring ehcache from InputStream
2017/12/27 16:30:28,918 DEBUG  restartedMain         net.sf.ehcache.util.PropertyUtil.parseProperties(PropertyUtil.java:88) - propertiesString is null.
2017/12/27 16:30:29,024 DEBUG  restartedMain         net.sf.ehcache.CacheManager.detectAndFixDiskStorePathConflict(CacheManager.java:654) - No disk store path defined. Skipping disk store path conflict test.
2017/12/27 16:30:29,025 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheManagerEventListener(ConfigurationHelper.java:185) - No CacheManagerEventListenerFactory class specified. Skipping...
2017/12/27 16:30:29,095 DEBUG  restartedMain         net.sf.ehcache.Cache.createBootstrapCacheLoader(Cache.java:968) - No BootstrapCacheLoaderFactory class specified. Skipping...
2017/12/27 16:30:29,096 DEBUG  restartedMain         net.sf.ehcache.Cache.createCacheWriter(Cache.java:942) - CacheWriter factory not configured. Skipping...
2017/12/27 16:30:29,099 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(ConfigurationHelper.java:96) - No CacheExceptionHandlerFactory class specified. Skipping...
2017/12/27 16:30:29,106 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getEhCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,121 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:159) - Cache with name 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache' does not yet exist.  Creating now.
2017/12/27 16:30:29,168 DEBUG  restartedMain         net.sf.ehcache.store.MemoryStore.<init>(MemoryStore.java:153) - Initialized net.sf.ehcache.store.NotifyingMemoryStore for com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 16:30:29,179 DEBUG  restartedMain         net.sf.ehcache.Cache.initialise(Cache.java:1165) - Initialised cache: com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 16:30:29,180 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(ConfigurationHelper.java:361) - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache'.
2017/12/27 16:30:29,181 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:166) - Added EhCache named [com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache]
2017/12/27 16:30:29,243 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.com.gxd.GxdConsumerFreemarkerApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,245 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'provider.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,262 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$e5abc686] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,278 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,281 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2e5d4: startup date [Wed Dec 27 16:30:29 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3d338143
2017/12/27 16:30:29,363 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:30:29,698 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,726 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$2073c02b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,742 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,757 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$9c911550] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,787 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,788 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,800 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,803 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$6b81c00c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,826 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,836 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedRetryPolicyFactory' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancedRetryPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,875 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedBackoffPolicyFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,881 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'retryabeCachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,894 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,904 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$99128178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,922 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,944 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'com.gxd.web.remote.auth.AuthRemoteClient' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:29,967 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'myShiroRealm' of type [com.gxd.common.shiro.AuthorizingRealmImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:30,903 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:30,906 INFO   restartedMain         com.gxd.common.shiro.ShiroConfiguration.loadShiroFilterChain(ShiroConfiguration.java:98) - ##################从数据库读取权限规则，加载到shiroFilter中##################
2017/12/27 16:30:31,217 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:31,598 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a0620673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:31,709 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:31,722 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:31,818 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a4f632f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:30:32,677 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 3000 (http)
2017/12/27 16:30:32,691 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:30:32,693 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:30:32,934 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:30:32,935 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 8931 ms
2017/12/27 16:30:33,746 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017/12/27 16:30:33,748 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:30:33,755 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:30:33,756 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:30:33,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:30:33,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:30:33,758 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:30:33,758 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:30:33,758 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'SQLInjection' to urls: [/*]
2017/12/27 16:30:33,758 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'XSSCheck' to urls: [/*]
2017/12/27 16:30:33,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'shiroFilter' to: [/*]
2017/12/27 16:30:33,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:30:33,794 INFO   localhost-startStop-1 com.gxd.common.authority.filter.SQLInjectionFilterServlet.init(SQLInjectionFilterServlet.java:34) - ######### regularExpression=(?:')|(?:--)|(/\*(?:.|[\n\r])*?\*/)|(\b(select|update|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\b)
2017/12/27 16:30:33,800 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:55) - XSSSecurityManager init(FilterConfig config) begin
2017/12/27 16:30:33,800 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:60) -  xss_security_config.xml path=file:/E:/idea/gxd-master/gxd-consumer-freemarker/target/classes/conf/xss_security_config.xml 
2017/12/27 16:30:33,801 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:94) - XSSSecurityManager.initConfig(InputStream in) begin
2017/12/27 16:30:33,911 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:162) - 安全匹配规则^.*[I|i][F|f][R|r][A|a][M|m][E|e].*|.*[S|s][C|c][R|r][I|i][P|p][T|t].*|.*[a|A]('%2b')?[l|L]('%2b')?[e|E]('%2b')?[r|R]('%2b')?[t|T]\s*\(.*\).*|.*[W|w][I|i][N|n][D|d][O|o][W|w]\.[L|l][O|o][C|c][A|a][T|t][I|i][O|o][N|n]\s*=.*|.*[S|s][T|t][Y|y][L|l][E|e]\s*=.*[X|x]:[E|e][X|x].*[P|p][R|r][E|e][S|s]{1,2}[I|i][O|o][N|n]\s*\(.*\).*|.*[D|d][O|o][C|c][U|u][M|m][E|e][N|n][T|t]\.[C|c][O|o]{2}[K|k][I|i][E|e].*|.*[E|e][V|v][A|a][L|l]\s*\(.*\).*|.*[U|u][N|n][E|e][S|s][C|c][A|a][P|p][E|e]\s*\(.*\).*|.*[E|e][X|x][E|e][C|c][S|s][C|c][R|r][I|i][P|p][T|t]\s*\(.*\).*|.*[M|m][S|s][G|g][B|b][O|o][X|x]\s*\(.*\).*|.*[C|c][O|o][N|n][F|f][I|i][R|r][M|m]\s*\(.*\).*|.*[P|p][R|r][O|o][M|m][P|p][T|t]\s*\(.*\).*|.*<[S|s][C|c][R|r][I|i][P|p][T|t].*>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>.*|.*<[S|s][T|t][Y|y][L|l][E|e].*>.*</[S|s][T|t][Y|y][L|l][E|e]>.*|[.&[^\"]]*\"[.&[^\"]]*|[.&[^']]*'[.&[^']]*|[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*<[S|s][C|c][R|r][I|i][P|p][T|t]>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*$
2017/12/27 16:30:33,911 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:173) - XSSSecurityManager.initConfig(String path) end
2017/12/27 16:30:33,912 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:67) - 特殊URL过滤匹配规则{imgshow=^$}
2017/12/27 16:30:33,913 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:82) - XSSSecurityManager init(FilterConfig config) end
2017/12/27 16:30:34,748 INFO   restartedMain         com.gxd.common.ApplicationContext.setServletContext(ApplicationContext.java:24) - # version=20171227163034722 , contextPath=
2017/12/27 16:30:35,065 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3d338143: startup date [Wed Dec 27 16:30:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c55a870] and template loader path [classpath:/templates/]
2017/12/27 16:30:35,067 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:30:36,917 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:30:36,918 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:30:36,929 INFO   restartedMain         com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12c24630
2017/12/27 16:30:37,449 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:30:37,450 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:30:37,833 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3d338143: startup date [Wed Dec 27 16:30:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c55a870
2017/12/27 16:30:38,020 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/logout]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.logout()
2017/12/27 16:30:38,023 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.login(com.gxd.model.auth.User,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2017/12/27 16:30:38,025 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[GET]}" onto java.lang.String com.gxd.web.controller.auth.LoginController.login(org.springframework.ui.Model)
2017/12/27 16:30:38,025 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/403]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.unauthorizedRole()
2017/12/27 16:30:38,028 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],methods=[POST || GET]}" onto java.lang.String com.gxd.web.controller.MainController.error(javax.servlet.http.HttpServletRequest,org.springframework.ui.ModelMap)
2017/12/27 16:30:38,029 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/leftnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.leftnav()
2017/12/27 16:30:38,030 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/topnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.topnav()
2017/12/27 16:30:38,031 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/ || /index]}" onto java.lang.String com.gxd.web.controller.MainController.home()
2017/12/27 16:30:38,034 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.add()
2017/12/27 16:30:38,035 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.add(com.gxd.model.simple.News)
2017/12/27 16:30:38,037 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/load/{id}],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.load(java.lang.String,org.springframework.ui.ModelMap)
2017/12/27 16:30:38,038 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list(org.springframework.ui.ModelMap)
2017/12/27 16:30:38,039 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/edit],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.edit(com.gxd.model.simple.News)
2017/12/27 16:30:38,041 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list_page],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list_page(java.lang.String,java.lang.Integer,org.springframework.ui.ModelMap)
2017/12/27 16:30:38,042 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/wx],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.controller.simple.NewsController.getNews()
2017/12/27 16:30:38,047 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.SystemController.msg()
2017/12/27 16:30:38,064 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_list()
2017/12/27 16:30:38,065 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_add2()
2017/12/27 16:30:38,067 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_list()
2017/12/27 16:30:38,069 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add6],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add6()
2017/12/27 16:30:38,069 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_add()
2017/12/27 16:30:38,070 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_list()
2017/12/27 16:30:38,071 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_view()
2017/12/27 16:30:38,072 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/manager_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.manager_list()
2017/12/27 16:30:38,073 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add()
2017/12/27 16:30:38,075 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add2()
2017/12/27 16:30:38,076 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add3],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add3()
2017/12/27 16:30:38,077 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/setconfig],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.setconfig()
2017/12/27 16:30:38,077 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/openProject],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.openProject()
2017/12/27 16:30:38,079 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add4],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add4()
2017/12/27 16:30:38,080 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add5],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add5()
2017/12/27 16:30:38,082 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add7],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add7()
2017/12/27 16:30:38,083 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add8],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add8()
2017/12/27 16:30:38,085 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add9],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add9()
2017/12/27 16:30:38,086 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/signin],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.signin()
2017/12/27 16:30:38,087 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/user/user_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.user_list()
2017/12/27 16:30:38,088 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.grain_list()
2017/12/27 16:30:38,089 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/telcode],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_telcode()
2017/12/27 16:30:38,090 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/verify],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_verify()
2017/12/27 16:30:38,092 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_card()
2017/12/27 16:30:38,093 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_list()
2017/12/27 16:30:38,094 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_grain()
2017/12/27 16:30:38,096 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custSupport],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custSupport()
2017/12/27 16:30:38,097 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/push/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.push_list()
2017/12/27 16:30:38,098 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_list()
2017/12/27 16:30:38,100 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_list()
2017/12/27 16:30:38,101 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_view()
2017/12/27 16:30:38,102 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adv/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adv_list()
2017/12/27 16:30:38,103 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_list()
2017/12/27 16:30:38,104 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/bind],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_bind()
2017/12/27 16:30:38,105 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_edit()
2017/12/27 16:30:38,105 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_view()
2017/12/27 16:30:38,106 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list()
2017/12/27 16:30:38,107 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/code],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_code()
2017/12/27 16:30:38,109 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/poslog],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_poslog()
2017/12/27 16:30:38,111 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/account],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_account()
2017/12/27 16:30:38,112 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list2()
2017/12/27 16:30:38,114 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_card()
2017/12/27 16:30:38,115 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add_hezuo],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add_hezuo()
2017/12/27 16:30:38,117 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviserProject/adviserAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviserAuditList()
2017/12/27 16:30:38,118 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/edit_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_edit_list()
2017/12/27 16:30:38,119 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/com_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_com_list()
2017/12/27 16:30:38,120 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_namelist()
2017/12/27 16:30:38,121 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_namelist()
2017/12/27 16:30:38,122 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenantConfig/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenantConfig_list()
2017/12/27 16:30:38,123 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/custAgent],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_custAgent()
2017/12/27 16:30:38,125 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/data/statIncome_data],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.statIncome_data()
2017/12/27 16:30:38,126 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/qianyue],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_qianyue()
2017/12/27 16:30:38,128 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/auditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_auditList()
2017/12/27 16:30:38,128 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custintent_view()
2017/12/27 16:30:38,129 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_edit()
2017/12/27 16:30:38,130 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_list()
2017/12/27 16:30:38,131 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/rengou],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_rengou()
2017/12/27 16:30:38,131 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_list()
2017/12/27 16:30:38,132 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custAuditList()
2017/12/27 16:30:38,133 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_view()
2017/12/27 16:30:38,134 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/Ext],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_Ext()
2017/12/27 16:30:38,135 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/she],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_she()
2017/12/27 16:30:38,136 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/commissionExt],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commissionExt()
2017/12/27 16:30:38,137 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list()
2017/12/27 16:30:38,137 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_grain()
2017/12/27 16:30:38,138 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list2()
2017/12/27 16:30:38,139 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/agentCommission],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agentCommission()
2017/12/27 16:30:38,160 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:30:38,161 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:30:38,177 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:30:38,179 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:30:38,345 INFO   restartedMain         com.gxd.common.mvc.WebMvcConfig.addResourceHandlers(WebMvcConfig.java:16) - # WebMvcConfig addResourceHandlers ...
2017/12/27 16:30:38,367 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:30:38,368 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:30:38,368 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:30:38,528 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:30:39,868 INFO   restartedMain         org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/27 16:30:41,198 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017/12/27 16:30:41,199 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,200 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:30:41,203 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,205 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:30:41,206 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,207 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:30:41,207 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:30:41,208 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,209 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:30:41,210 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:30:41,211 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:30:41,211 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,212 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,216 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:30:41,217 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:30:41,217 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,218 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,219 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:30:41,220 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,221 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:30:41,222 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,223 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:30:41,224 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,226 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:30:41,665 WARN   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:62) - Unable to start LiveReload server
2017/12/27 16:30:42,660 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:30:43,729 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:30:43,741 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:30:43,745 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:30:43,746 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:30:43,748 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:30:43,749 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:30:43,754 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:30:43,774 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:30:43,790 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:30:43,801 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:30:43,815 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3d338143,type=ConfigurationPropertiesRebinder]
2017/12/27 16:30:43,822 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:30:44,054 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:30:44,073 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:30:44,159 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2017/12/27 16:30:44,392 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2017/12/27 16:30:44,393 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2017/12/27 16:30:44,536 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2017/12/27 16:30:44,537 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2017/12/27 16:30:44,832 INFO   restartedMain         com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:30:45,073 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929) - Disable delta property : false
2017/12/27 16:30:45,074 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:930) - Single vip registry refresh property : null
2017/12/27 16:30:45,075 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:931) - Force full registry fetch : false
2017/12/27 16:30:45,075 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:932) - Application is null : false
2017/12/27 16:30:45,075 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:933) - Registered Applications size is zero : true
2017/12/27 16:30:45,076 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Application version is -1: true
2017/12/27 16:30:45,076 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) - Getting all instance registry info from the eureka server
2017/12/27 16:30:45,434 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1027) - The response status is 200
2017/12/27 16:30:45,436 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1253) - Starting heartbeat executor: renew interval is: 30
2017/12/27 16:30:45,442 INFO   restartedMain         com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017/12/27 16:30:45,446 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1514363445446 with initial instances count: 2
2017/12/27 16:30:45,551 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd_consumer_freemarker with eureka with status UP
2017/12/27 16:30:45,554 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.notify(DiscoveryClient.java:1288) - Saw local status change event StatusChangeEvent [timestamp=1514363445554, current=UP, previous=STARTING]
2017/12/27 16:30:45,567 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_GXD_CONSUMER_FREEMARKER/192.168.2.4:gxd_consumer_freemarker:3000: registering service...
2017/12/27 16:30:45,587 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:30:45,613 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:30:45,642 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_GXD_CONSUMER_FREEMARKER/192.168.2.4:gxd_consumer_freemarker:3000 - registration status: 204
2017/12/27 16:30:45,645 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:30:45,653 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:30:45,660 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:30:45,667 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:30:45,674 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:30:45,682 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:30:45,690 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:30:45,711 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:30:45,721 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:30:45,731 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:30:45,741 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:30:45,750 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:30:45,757 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 16:30:45,757 INFO   restartedMain         org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'gxd_consumer_freemarker:3000.errorChannel' has 1 subscriber(s).
2017/12/27 16:30:45,758 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 16:30:45,758 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:30:45,769 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 16:30:45,851 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-3000"]
2017/12/27 16:30:45,876 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-3000"]
2017/12/27 16:30:45,907 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:30:45,954 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 3000 (http)
2017/12/27 16:30:45,956 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 3000
2017/12/27 16:30:45,967 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdConsumerFreemarkerApplication in 25.52 seconds (JVM running for 28.415)
2017/12/27 16:33:41,654 INFO   http-nio-3000-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:33:41,654 INFO   http-nio-3000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:33:41,717 INFO   http-nio-3000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2017/12/27 16:33:43,723 INFO   http-nio-3000-exec-4  com.gxd.web.controller.auth.LoginController.login(LoginController.java:25) - #去登录
2017/12/27 16:34:52,404 DEBUG  http-nio-3000-exec-6  com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:50) - ## 正在验证用户登录...
2017/12/27 16:34:52,495 INFO   http-nio-3000-exec-6  org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2f2a132b: startup date [Wed Dec 27 16:34:52 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3d338143
2017/12/27 16:34:52,716 INFO   http-nio-3000-exec-6  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:34:53,615 INFO   http-nio-3000-exec-6  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-provider
2017/12/27 16:34:53,676 INFO   http-nio-3000-exec-6  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017/12/27 16:34:53,708 INFO   http-nio-3000-exec-6  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
2017/12/27 16:34:53,781 INFO   http-nio-3000-exec-6  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider,current list of Servers=[192.168.2.4:2000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.2.4:2000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6190405c
2017/12/27 16:34:54,506 INFO   http-nio-3000-exec-7  com.gxd.web.controller.MainController.home(MainController.java:21) - # 进入默认首页
2017/12/27 16:34:55,601 DEBUG  http-nio-3000-exec-9  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
2017/12/27 16:35:45,082 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:35:49,903 INFO   http-nio-3000-exec-1  com.gxd.web.controller.MainController.home(MainController.java:21) - # 进入默认首页
2017/12/27 16:35:49,936 DEBUG  http-nio-3000-exec-2  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
2017/12/27 16:35:51,909 INFO   http-nio-3000-exec-10 com.gxd.web.controller.simple.NewsController.add(NewsController.java:59) - # 进入发布新闻页面
2017/12/27 16:35:52,811 INFO   http-nio-3000-exec-7  com.gxd.web.controller.simple.ViewController.tenant_list(ViewController.java:28) - # loding view/tenant/tenant-list 
2017/12/27 16:36:04,614 INFO   http-nio-3000-exec-5  com.gxd.web.controller.simple.ViewController.city_add2(ViewController.java:46) - # loding view/city/add2 
2017/12/27 16:40:45,085 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:42:35,389 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:42:35,411 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6fefc8a8: startup date [Wed Dec 27 16:42:35 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@510ccdfa
2017/12/27 16:42:37,874 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=eb9cf926-32a3-31b4-b173-0c3b24fa145c
2017/12/27 16:42:37,911 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:42:38,019 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9e035d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:42:38,038 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87f0b9fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:42:38,569 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 16:42:38,581 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:42:38,583 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:42:38,843 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:42:38,844 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 3433 ms
2017/12/27 16:42:40,122 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:42:40,123 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:42:40,124 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:42:40,124 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:42:40,124 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:42:40,124 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 16:42:40,125 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 16:42:40,125 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:42:40,126 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:42:40,263 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 16:42:41,596 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 16:42:42,276 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6fefc8a8: startup date [Wed Dec 27 16:42:35 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@510ccdfa
2017/12/27 16:42:42,423 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:42:42,425 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:42:42,465 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:42:42,466 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 16:42:42,552 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:42:42,553 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:42:42,642 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:42:44,507 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:42:44,508 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:42:44,510 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,512 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:42:44,512 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,514 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:42:44,514 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:42:44,518 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:42:44,519 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:42:44,520 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,521 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:42:44,524 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,526 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,527 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,529 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:42:44,531 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,532 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:42:44,533 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,534 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,536 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:42:44,537 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,538 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:42:44,539 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,540 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:42:44,666 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6fefc8a8: startup date [Wed Dec 27 16:42:35 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@510ccdfa] and template loader path [classpath:/templates/]
2017/12/27 16:42:44,667 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:42:44,949 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:42:45,626 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 16:42:45,864 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:42:45,881 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:42:45,883 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:42:45,884 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:42:45,886 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:42:45,888 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:42:45,891 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:42:45,909 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:42:45,923 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:42:45,933 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:42:45,945 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6fefc8a8,type=ConfigurationPropertiesRebinder]
2017/12/27 16:42:45,950 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:42:46,172 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:42:46,173 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 16:42:46,178 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:42:46,186 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:42:46,199 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:42:46,206 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:42:46,210 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:42:46,214 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:42:46,218 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:42:46,222 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:42:46,228 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:42:46,236 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:42:46,240 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:42:46,244 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:42:46,248 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:42:46,252 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:42:46,255 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 16:42:46,256 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 16:42:46,256 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 16:42:46,273 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 16:42:46,274 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 16:42:46,289 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 16:42:46,298 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 16:42:46,309 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 16:42:46,326 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:42:46,349 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 16:42:46,350 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 16:42:46,356 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 14.792 seconds (JVM running for 16.288)
2017/12/27 16:43:41,029 INFO   http-nio-1111-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:43:41,030 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:43:41,059 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
8a2a9
2017/12/27 16:43:26,883 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 16:43:27,968 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 16:43:28,861 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=1d16e02b-2770-34a9-a0f8-5ba105acf484
2017/12/27 16:43:28,985 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:43:29,457 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be1ed5e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:43:29,737 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f04b7c26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:43:29,751 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$da38d8e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:43:30,657 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 16:43:30,672 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:43:30,674 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:43:30,839 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:43:30,840 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 7526 ms
2017/12/27 16:43:31,347 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:43:31,357 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:43:31,358 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:43:31,358 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:43:31,359 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:43:31,359 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:43:31,360 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:43:31,360 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:43:34,838 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 16:43:34,839 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 16:43:34,845 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 16:43:34,845 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 16:43:34,846 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 16:43:34,851 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 16:43:34,852 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 16:43:34,852 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 16:43:34,853 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 16:43:34,854 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 16:43:34,862 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 16:43:34,865 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 16:43:34,867 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 16:43:34,883 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:43:34,884 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:43:36,110 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,112 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,112 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,114 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:43:36,114 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:43:36,115 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,116 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,117 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:43:36,117 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,118 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:43:36,119 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,120 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,122 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:43:36,122 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,123 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:43:36,124 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:43:36,125 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:43:36,128 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:43:36,128 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:43:36,129 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,130 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:43:36,130 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,131 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:43:36,132 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:43:36,429 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 16:43:37,087 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@916a966: startup date [Wed Dec 27 16:43:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4cb8a2a9
2017/12/27 16:43:37,281 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:43:37,282 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:43:37,416 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:43:38,837 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 16:43:39,255 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:43:39,430 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:43:39,452 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:43:39,456 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:43:39,457 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:43:39,458 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:43:39,461 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:43:39,469 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:43:39,500 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:43:39,529 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:43:39,542 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:43:39,558 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=916a966,type=ConfigurationPropertiesRebinder]
2017/12/27 16:43:39,562 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:43:39,883 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:43:39,897 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:43:41,183 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-provider with eureka with status UP
2017/12/27 16:43:41,193 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:43:41,206 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:43:41,229 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:43:41,242 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:43:41,254 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:43:41,260 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:43:41,268 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:43:41,276 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:43:41,285 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:43:41,300 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:43:41,306 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:43:41,312 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:43:41,320 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:43:41,328 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:43:41,333 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:43:41,334 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 16:43:41,381 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 16:43:41,538 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 16:43:42,036 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 16:43:42,069 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 16:43:42,106 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:43:42,157 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 16:43:42,160 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 16:43:42,174 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 22.536 seconds (JVM running for 25.066)
2017/12/27 16:49:43,214 INFO   http-nio-2000-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:49:43,215 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:49:43,258 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2017/12/27 16:49:43,315 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 16:49:44,165 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 16:49:45,129 INFO   http-nio-2000-exec-1  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:914) - {dataSource-1} inited
2017/12/27 16:49:45,193 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 16:49:45,193 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 16:49:45,428 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 16:49:45,430 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 16:49:45,779 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 16:49:45,782 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 16:49:45,783 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 16:49:45,860 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:49:45,917 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:49:45,945 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:49:46,067 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 16:49:46,067 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 16:49:46,070 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 16:49:46,477 DEBUG  http-nio-2000-exec-5  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:53) - # findRoleByUserId , parameter=2017100500000000002 
2017/12/27 16:49:46,486 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT R.ID , R.NAME , R.CODE , R.REMARK FROM T_SYS_ROLE R , T_SYS_USER_ROLE UR WHERE R.ID=UR.ROLE_ID AND UR.USER_ID=? 
2017/12/27 16:49:46,492 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 16:49:46,513 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:49:46,521 DEBUG  http-nio-2000-exec-5  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:55) - # findRoleByUserId , result=[{"code":"common_role","id":"2017100300000000002","name":"普通用户","remark":"普通用户"}]
2017/12/27 16:49:46,541 DEBUG  http-nio-2000-exec-4  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:63) - # getPermissions , parameter=2017100500000000002 
2017/12/27 16:49:46,551 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT P.ID , P.HIDE , P.SKEY , P.NAME, P.CSS_CLASS , P.PARENT_KEY , P.LEV , P.SORT , P.URL FROM T_SYS_PERMISSION P , T_SYS_USER_ROLE UR , T_SYS_ROLE_PERMISSION RP WHERE RP.PERMISSION_ID=P.ID AND RP.ROLE_ID=UR.ROLE_ID AND UR.USER_ID=? ORDER BY P.SORT ASC 
2017/12/27 16:49:46,589 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 16:49:46,733 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 151
2017/12/27 16:49:46,790 DEBUG  http-nio-2000-exec-4  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:65) - # getPermissions , result=[{"cssClass":"fa-home","hide":1,"id":"2017100200000000001","key":"glsy","lev":1,"name":"管理首页","sort":1,"url":"index"},{"children":[{"cssClass":"","hide":1,"id":"2017100200000000003","key":"znxy_xwfb","lev":2,"name":"新闻发布","parentKey":"znxy","sort":11,"url":"news/add"},{"cssClass":"","hide":1,"id":"2017100200000000004","key":"znxy_xwlb","lev":2,"name":"新闻列表","parentKey":"znxy","sort":12,"url":"news/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000002","key":"znxy","lev":1,"name":"站内新闻","sort":10},{"cssClass":"fa-gear","hide":1,"id":"2017100200000000008","key":"xtpz","lev":1,"name":"系统配置","sort":20,"url":"view/sysconfig/setconfig"},{"cssClass":"fa-desktop","hide":1,"id":"2017100200000000009","key":"dxgl","lev":1,"name":"电商管理","sort":30,"url":"view/tenant/tenant-list"},{"cssClass":"fa-gears","hide":1,"id":"2017100200000000010","key":"dspz","lev":1,"name":"电商配置","sort":40,"url":"view/tenantConfig/list"},{"children":[{"hide":1,"id":"2017100200000000012","key":"dccsgl_tjcs","lev":2,"name":"添加城市","parentKey":"dccsgl","sort":51,"url":"view/city/add2"},{"hide":1,"id":"2017100200000000013","key":"dccsgl_cslb","lev":2,"name":"城市列表","parentKey":"dccsgl","sort":51,"url":"view/city/list"}],"cssClass":"fa-map-marker","hide":1,"id":"2017100200000000011","key":"dccsgl","lev":1,"name":"地区城市管理","sort":50},{"cssClass":"fa-user","hide":1,"id":"2017100200000000014","key":"chgl","lev":1,"name":"账号管理","sort":60,"url":"view/user/user_list"},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000016","key":"lpgl_ktlp","lev":2,"name":"开通楼盘","parentKey":"lpgl","sort":71,"url":"view/project/openProject"},{"cssClass":"fa-pencil","hide":1,"id":"2017100200000000017","key":"lpgl_lpsh","lev":2,"name":"楼盘审核","parentKey":"lpgl","sort":72,"url":"view/project/list"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000018","key":"lpgl_lpgl","lev":2,"name":"楼盘管理","parentKey":"lpgl","sort":73,"url":"view/project/manager_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000019","key":"lpgl_hzlp","lev":2,"name":"合作楼盘","parentKey":"lpgl","sort":74,"url":"view/project/edit_list"},{"children":[{"cssClass":"fa-file-text-o","hide":1,"id":"2017100200000000021","key":"lpgl_tjlp_jbxx","lev":3,"name":"基本信息","parentKey":"lpgl_tjlp","sort":76,"url":"view/project/add"},{"cssClass":"fa-puzzle-piece","hide":1,"id":"2017100200000000022","key":"lpgl_tjlp_hxgl","lev":3,"name":"户型管理","parentKey":"lpgl_tjlp","sort":77,"url":"view/project/add2"},{"cssClass":"fa-picture-o","hide":1,"id":"2017100200000000023","key":"lpgl_tjlp_lpxc","lev":3,"name":"楼盘相册","parentKey":"lpgl_tjlp","sort":78,"url":"view/project/add3"},{"cssClass":"fa-sort-numeric-asc","hide":1,"id":"2017100200000000024","key":"lpgl_tjlp_xkgl","lev":3,"name":"销控管理","parentKey":"lpgl_tjlp","sort":79,"url":"view/project/add4"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000025","key":"lpgl_tjlp_hzxx","lev":3,"name":"合作信息","parentKey":"lpgl_tjlp","sort":80,"url":"view/project/add5"},{"cssClass":"fa-share-alt","hide":1,"id":"2017100200000000026","key":"lpgl_tjlp_cpwh","lev":3,"name":"产品维护","parentKey":"lpgl_tjlp","sort":81,"url":"view/project/add6"},{"cssClass":"fa-dollar","hide":1,"id":"2017100200000000027","key":"lpgl_tjlp_rjwh","lev":3,"name":"拥金维护","parentKey":"lpgl_tjlp","sort":82,"url":"view/project/add7"},{"cssClass":"fa-list-alt","hide":1,"id":"2017100200000000028","key":"lpgl_tjlp_lpdt","lev":3,"name":"楼盘动态","parentKey":"lpgl_tjlp","sort":83,"url":"view/project/add8"},{"cssClass":"fa-heart","hide":1,"id":"2017100200000000029","key":"lpgl_tjlp_yhhd","lev":3,"name":"优惠活动","parentKey":"lpgl_tjlp","sort":84,"url":"view/project/add9"}],"cssClass":"fa-plus","hide":1,"id":"2017100200000000020","key":"lpgl_tjlp","lev":2,"name":"添加楼盘","parentKey":"lpgl","sort":75,"url":"view/project/add"}],"cssClass":"fa-building","hide":1,"id":"2017100200000000015","key":"lpgl","lev":1,"name":"楼盘管理","sort":70,"url":"view/project/list"},{"children":[{"cssClass":"fa-vine","hide":1,"id":"2017100200000000031","key":"jjgsjjr_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjgsjjr","sort":91,"url":"view/firm/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000032","key":"jjgsjjr_jjrgl","lev":2,"name":"经纪人管理","parentKey":"jjgsjjr","sort":92,"url":"view/agent/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000033","key":"jjgsjjr_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"jjgsjjr","sort":93,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000034","key":"jjgsjjr_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"jjgsjjr","sort":94,"url":"view/agent/list"}],"cssClass":"fa-group","hide":1,"id":"2017100200000000030","key":"jjgsjjr","lev":1,"name":"经济公司/经纪人","sort":90},{"children":[{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000036","key":"zygwgl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"zygwgl","sort":101,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000037","key":"zygwgl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"zygwgl","sort":102,"url":"view/adviser/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000038","key":"zygwgl_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"zygwgl","sort":103,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000039","key":"zygwgl_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"zygwgl","sort":104,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000040","key":"zygwgl_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"zygwgl","sort":105,"url":"view/agent/list"}],"cssClass":"fa-user-md","hide":1,"id":"2017100200000000035","key":"zygwgl","lev":1,"name":"置业顾问管理","sort":100},{"children":[{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000042","key":"posjygl_posjbd","lev":2,"name":"POS机绑定","parentKey":"posjygl","sort":111,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000043","key":"posjygl_posbdxx","lev":2,"name":"POS绑定信息","parentKey":"posjygl","sort":112,"url":"view/pos/list"},{"cssClass":"fa-legal","hide":1,"id":"2017100200000000044","key":"posjygl_posjyxx","lev":2,"name":"POS交易信息","parentKey":"posjygl","sort":113,"url":"view/pos/poslog"}],"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000041","key":"posjygl","lev":1,"name":"POS交易管理","sort":110},{"children":[{"cssClass":"fa-user","hide":1,"id":"2017100200000000046","key":"sjtj_yhtj","lev":2,"name":"用户统计","parentKey":"sjtj","sort":121,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000047","key":"sjtj_khtj","lev":2,"name":"客户统计","parentKey":"sjtj","sort":122,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000048","key":"sjtj_sytj","lev":2,"name":"收入统计","parentKey":"sjtj","sort":123,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000049","key":"sjtj_yjtj","lev":2,"name":"佣金统计","parentKey":"sjtj","sort":124,"url":"view/data/statIncome_data"}],"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000045","key":"sjtj","lev":1,"name":"数据统计","sort":120},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000051","key":"htgl_tjgllb","lev":2,"name":"添加/管理列表","parentKey":"htgl","sort":131,"url":"view/agreement/list"},{"cssClass":"fa-mail-forward","hide":1,"id":"2017100200000000052","key":"htgl_zrg","lev":2,"name":"转认购","parentKey":"htgl","sort":132,"url":"view/agreement/rengou"},{"cssClass":"fa-check-square-o","hide":1,"id":"2017100200000000053","key":"htgl_qy","lev":2,"name":"签约","parentKey":"htgl","sort":133,"url":"view/agreement/qianyue"},{"cssClass":"fa-edit","hide":1,"id":"2017100200000000054","key":"htgl_htmxbj","lev":2,"name":"合同明细/编辑","parentKey":"htgl","sort":134,"url":"view/agreement/edit"},{"cssClass":"fa-building-o","hide":1,"id":"2017100200000000055","key":"htgl_htxq","lev":2,"name":"合同详情","parentKey":"htgl","sort":135,"url":"view/agreement/view"}],"cssClass":"fa-edit","hide":1,"id":"2017100200000000050","key":"htgl","lev":1,"name":"合同管理","sort":130},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000057","key":"zjl_khtj","lev":2,"name":"客户统计","parentKey":"zjl","sort":141,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000058","key":"zjl_sytj","lev":2,"name":"收入统计","parentKey":"zjl","sort":143,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000059","key":"zjl_yjtj","lev":2,"name":"佣金统计","parentKey":"zjl","sort":144,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000056","key":"zjl","lev":1,"name":"总经理","sort":140},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000061","key":"jjgsgly_hz","lev":2,"name":"合作","parentKey":"jjgsgly","sort":151,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000062","key":"jjgsgly_mdlb","lev":2,"name":"门店列表","parentKey":"jjgsgly","sort":152,"url":"view/firm/list2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000063","key":"jjgsgly_zhgl","lev":2,"name":"账号管理","parentKey":"jjgsgly","sort":153,"url":"view/user/user_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000064","key":"jjgsgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"jjgsgly","sort":154,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000065","key":"jjgsgly_dgzh","lev":2,"name":"对公账号","parentKey":"jjgsgly","sort":155,"url":"view/firm/view"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000066","key":"jjgsgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"jjgsgly","sort":156,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000067","key":"jjgsgly_khlb","lev":2,"name":"客户列表","parentKey":"jjgsgly","sort":157,"url":"view/agent/custAgent"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000068","key":"jjgsgly_yjxx","lev":2,"name":"佣金信息","parentKey":"jjgsgly","sort":158,"url":"view/commission/agentCommission"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000069","key":"jjgsgly_ewyj","lev":2,"name":"额外佣金","parentKey":"jjgsgly","sort":159,"url":"view/commission/commissionExt"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000070","key":"jjgsgly_khtj","lev":2,"name":"客户统计","parentKey":"jjgsgly","sort":160,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000071","key":"jjgsgly_sytj","lev":2,"name":"收入统计","parentKey":"jjgsgly","sort":161,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000072","key":"jjgsgly_yjtj","lev":2,"name":"佣金统计","parentKey":"jjgsgly","sort":162,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000060","key":"jjgsgly","lev":1,"name":"经济公司管理员","sort":150},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000074","key":"mdgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"mdgly","sort":171,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000075","key":"mdgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"mdgly","sort":172,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000076","key":"mdgly_khlb","lev":2,"name":"客户列表","parentKey":"mdgly","sort":173,"url":"view/agent/custAgent"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000077","key":"mdgly_yhtj2","lev":2,"name":"用户统计","parentKey":"mdgly","sort":174,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000078","key":"mdgly_yhtj3","lev":2,"name":"用户统计","parentKey":"mdgly","sort":175,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000079","key":"mdgly_yhtj4","lev":2,"name":"用户统计","parentKey":"mdgly","sort":176,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000080","key":"mdgly_khtj","lev":2,"name":"客户统计","parentKey":"mdgly","sort":177,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000073","key":"mdgly","lev":1,"name":"门店管理员","sort":170},{"children":[{"children":[{"hide":1,"id":"2017100200000000083","key":"acjl_lpgl_lpgl","lev":3,"name":"楼盘列表","parentKey":"acjl_lpgl","sort":182,"url":"view/project/list"},{"hide":1,"id":"2017100200000000084","key":"acjl_lpgl_bjtj","lev":3,"name":"编辑添加","parentKey":"acjl_lpgl","sort":183,"url":"view/project/add"}],"hide":1,"id":"2017100200000000082","key":"acjl_lpgl","lev":2,"name":"楼盘管理","parentKey":"acjl","sort":181},{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000085","key":"acjl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"acjl","sort":184,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000086","key":"acjl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"acjl","sort":185,"url":"view/adviser/list"},{"hide":1,"id":"2017100200000000087","key":"acjl_khsh","lev":2,"name":"客户审核","parentKey":"acjl","sort":186,"url":"view/custintent/custAuditList"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000081","key":"acjl","lev":1,"name":"案场经理","sort":180},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000089","key":"xmzj_khtj","lev":2,"name":"客户统计","parentKey":"xmzj","sort":191,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000090","key":"xmzj_sytj","lev":2,"name":"收入统计","parentKey":"xmzj","sort":192,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000091","key":"xmzj_yjtj","lev":2,"name":"佣金统计","parentKey":"xmzj","sort":193,"url":"view/data/statIncome_data"}],"hide":1,"id":"2017100200000000088","key":"xmzj","lev":1,"name":"项目总监","sort":190},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000093","key":"xmjl_ktlp","lev":2,"name":"开通楼盘","parentKey":"xmjl","sort":201,"url":"view/project/openProject"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000094","key":"xmjl_zhgl","lev":2,"name":"账号管理","parentKey":"xmjl","sort":202,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000095","key":"xmjl_yjsh","lev":2,"name":"佣金审核","parentKey":"xmjl","sort":203,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000096","key":"xmjl_kfsbt","lev":2,"name":"开发商补贴","parentKey":"xmjl","sort":204,"url":"view/devpSubsidy/list"},{"hide":1,"id":"2017100200000000097","key":"xmjl_tsgl","lev":2,"name":"推送管理","parentKey":"xmjl","sort":205,"url":"view/push/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000098","key":"xmjl_khtj","lev":2,"name":"客户统计","parentKey":"xmjl","sort":206,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000099","key":"xmjl_sytj","lev":2,"name":"收入统计","parentKey":"xmjl","sort":207,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000100","key":"xmjl_yjtj","lev":2,"name":"佣金统计","parentKey":"xmjl","sort":208,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000092","key":"xmjl","lev":1,"name":"项目经理","sort":200},{"children":[{"hide":1,"id":"2017100200000000102","key":"xmzl_qrdf","lev":2,"name":"确认到访","parentKey":"xmzl","sort":211,"url":"view/code/code"},{"hide":1,"id":"2017100200000000103","key":"xmzl_fsyyyzm","lev":2,"name":"发送语音验证码","parentKey":"xmzl","sort":212,"url":"view/code/telcode"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000104","key":"xmzl_posjbd","lev":2,"name":"POS机绑定","parentKey":"xmzl","sort":213,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000105","key":"xmzl_posbdxx","lev":2,"name":"POS交易记录","parentKey":"xmzl","sort":214,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000106","key":"xmzl_khyxqx","lev":2,"name":"客户意向查询","parentKey":"xmzl","sort":215,"url":"view/custintent/custAuditList"},{"hide":1,"id":"2017100200000000107","key":"xmzl_htgl","lev":2,"name":"合同管理","parentKey":"xmzl","sort":216,"url":"view/agreement/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000101","key":"xmzl","lev":1,"name":"项目助理","sort":210},{"children":[{"hide":1,"id":"2017100200000000109","key":"yyzy_qdgzpz","lev":2,"name":"签到规则配置","parentKey":"yyzy","sort":221,"url":"view/sysconfig/signin"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000110","key":"yyzy_lpgl","lev":2,"name":"楼盘管理","parentKey":"yyzy","sort":222,"url":"view/project/manager_list"},{"hide":1,"id":"2017100200000000111","key":"yyzy_tjcs","lev":2,"name":"城市管理","parentKey":"yyzy","sort":223,"url":"view/city/add2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000112","key":"yyzy_zhgl","lev":2,"name":"账号管理","parentKey":"yyzy","sort":224,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000113","key":"yyzy_tsgl","lev":2,"name":"推送管理","parentKey":"yyzy","sort":225,"url":"view/push/list"},{"hide":1,"id":"2017100200000000114","key":"yyzy_ggwgl","lev":2,"name":"广告位管理","parentKey":"yyzy","sort":226,"url":"view/adv/list"},{"hide":1,"id":"2017100200000000115","key":"yyzy_khyxqx","lev":2,"name":"客户意向查询","parentKey":"yyzy","sort":227,"url":"view/custintent/custAuditList"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000116","key":"yyzy_posjbd","lev":2,"name":"POS机绑定","parentKey":"yyzy","sort":228,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000117","key":"yyzy_posjyjl","lev":2,"name":"POS交易记录","parentKey":"yyzy","sort":229,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000118","key":"yyzy_qyjjgs","lev":2,"name":"签约经纪公司","parentKey":"yyzy","sort":230,"url":"view/pos/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000119","key":"yyzy_jjrgl","lev":2,"name":"经纪人管理","parentKey":"yyzy","sort":231,"url":"view/agent/list"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000120","key":"yyzy_yhtj","lev":2,"name":"用户统计","parentKey":"yyzy","sort":232,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000121","key":"yyzy_khtj","lev":2,"name":"客户统计","parentKey":"yyzy","sort":233,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000122","key":"yyzy_sytj","lev":2,"name":"收入统计","parentKey":"yyzy","sort":234,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000123","key":"yyzy_yjtj","lev":2,"name":"佣金统计","parentKey":"yyzy","sort":235,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000108","key":"yyzy","lev":1,"name":"运营专员","sort":220},{"children":[{"hide":1,"id":"2017100200000000125","key":"yjzy_yjgzsh","lev":2,"name":"佣金规则审核","parentKey":"yjzy","sort":241,"url":"view/commission/auditList"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000126","key":"yjzy_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"yjzy","sort":242,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000127","key":"yjzy_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"yjzy","sort":243,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000128","key":"yjzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"yjzy","sort":244,"url":"view/agent/grain"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000129","key":"yjzy_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"yjzy","sort":245,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000130","key":"yjzy_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"yjzy","sort":246,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000131","key":"yjzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"yjzy","sort":247,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000132","key":"yjzy_dgzhsh","lev":2,"name":"对公账号审核","parentKey":"yjzy","sort":248,"url":"view/firm/account"},{"hide":1,"id":"2017100200000000133","key":"yjzy_tksh","lev":2,"name":"退款审核","parentKey":"yjzy","sort":249,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000134","key":"yjzy_yjsh","lev":2,"name":"佣金审核","parentKey":"yjzy","sort":250,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000135","key":"yjzy_htgl","lev":2,"name":"合同管理","parentKey":"yjzy","sort":251,"url":"view/agreement/list"},{"hide":1,"id":"2017100200000000136","key":"yjzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"yjzy","sort":252,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000124","key":"yjzy","lev":1,"name":"佣金专员","sort":240},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000138","key":"cnzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cnzy","sort":261,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000139","key":"cnzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cnzy","sort":262,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000140","key":"cnzy_tksh","lev":2,"name":"退款审核","parentKey":"cnzy","sort":263,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000141","key":"cnzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cnzy","sort":264,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000142","key":"cnzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cnzy","sort":265,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000137","key":"cnzy","lev":1,"name":"出纳专员","sort":260},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000144","key":"cwzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cwzy","sort":271,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000145","key":"cwzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cwzy","sort":272,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000146","key":"cwzy_kfsbt","lev":2,"name":"开发商补贴确认","parentKey":"cwzy","sort":273,"url":"view/devpSubsidy/list2"},{"hide":1,"id":"2017100200000000147","key":"cwzy_tksh","lev":2,"name":"退款审核","parentKey":"cwzy","sort":274,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000148","key":"cwzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cwzy","sort":275,"url":"view/commission/list"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000149","key":"cwzy_posbdxx","lev":2,"name":"POS交易记录","parentKey":"cwzy","sort":276,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000150","key":"cwzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cwzy","sort":277,"url":"view/commission/Ext"}],"hide":1,"id":"2017100200000000143","key":"cwzy","lev":1,"name":"财务专员","sort":270},{"children":[{"hide":1,"id":"2017100200000000152","key":"jjfwzycs_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjfwzycs","sort":281,"url":"view/firm/list2"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000151","key":"jjfwzycs","lev":1,"name":"经纪服务专员测试","sort":280},{"children":[{"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000154","key":"kfzy_khyxsh","lev":2,"name":"客户意向审核","parentKey":"kfzy","sort":291,"url":"view/custintent/custSupport"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000153","key":"kfzy","lev":1,"name":"客服专员","sort":290}]
2017/12/27 16:49:47,138 DEBUG  http-nio-2000-exec-7  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 16:49:47,353 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT count(0) FROM T_NEWS 
2017/12/27 16:49:47,356 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:49:47,392 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage_COUNT.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 16:49:47,394 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc LIMIT 10 
2017/12/27 16:49:47,397 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 16:49:47,402 DEBUG  http-nio-2000-exec-7  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 16:49:47,404 INFO   http-nio-2000-exec-7  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=10, size=4, startRow=1, endRow=4, total=4, pages=1, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=4, pages=1, reasonable=true, pageSizeZero=false}, prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 16:49:47,418 DEBUG  http-nio-2000-exec-7  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
estartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:44:17,397 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:44:17,402 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:44:17,407 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:44:17,415 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 16:44:17,496 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2001"]
2017/12/27 16:44:17,519 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2001"]
2017/12/27 16:44:17,547 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:44:17,585 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2001 (http)
2017/12/27 16:44:17,588 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2001
2017/12/27 16:44:17,598 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStarted(StartupInfoLogger.java:57) - Started GxdHystrixApplication in 16.545 seconds (JVM running for 19.009)
2017/12/27 16:46:50,915 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 16:46:50,955 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4debcfe: startup date [Wed Dec 27 16:46:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7dc6b6ec
2017/12/27 16:46:54,095 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=62b4e4c2-6c0f-3537-b510-04e619931f7b
2017/12/27 16:46:54,167 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:46:54,422 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e31045c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:46:54,631 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ccfda27c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:46:55,593 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2001 (http)
2017/12/27 16:46:55,609 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:46:55,615 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:46:55,832 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:46:55,833 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 4878 ms
2017/12/27 16:46:56,371 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017/12/27 16:46:56,373 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:46:56,379 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:46:56,380 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:46:56,380 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:46:56,380 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:46:56,381 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:46:56,381 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:46:56,382 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:46:56,471 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b6fc821: startup date [Wed Dec 27 16:46:56 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4debcfe
2017/12/27 16:46:56,514 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:46:58,332 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4debcfe: startup date [Wed Dec 27 16:46:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7dc6b6ec] and template loader path [classpath:/templates/]
2017/12/27 16:46:58,334 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:46:58,440 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:46:58,442 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:46:58,453 INFO   restartedMain         com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@74c4f52d
2017/12/27 16:46:58,988 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:46:58,988 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:46:59,374 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4debcfe: startup date [Wed Dec 27 16:46:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7dc6b6ec
2017/12/27 16:46:59,542 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.HystrixSimpleController.msg()
2017/12/27 16:46:59,544 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/wx],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.HystrixSimpleController.getNews()
2017/12/27 16:46:59,546 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/]}" onto public java.lang.String com.gxd.web.SimpleController.hystrixDashboardIndex()
2017/12/27 16:46:59,551 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:46:59,552 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:46:59,571 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:46:59,573 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:46:59,793 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:46:59,794 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:46:59,969 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:47:02,516 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:47:02,517 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:47:02,520 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:47:02,530 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:47:02,532 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,537 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:47:02,538 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,544 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,550 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,616 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:47:02,618 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,627 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,657 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,659 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,667 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:47:02,668 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:47:02,669 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,672 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:47:02,677 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:47:02,679 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,681 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017/12/27 16:47:02,684 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:47:02,693 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:47:02,696 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:02,698 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:47:03,400 WARN   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:62) - Unable to start LiveReload server
2017/12/27 16:47:03,658 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:47:03,786 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:47:03,803 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:47:03,806 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:47:03,807 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:47:03,809 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:47:03,811 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:47:03,814 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:47:03,833 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:47:03,883 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:47:03,971 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:47:03,988 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4debcfe,type=ConfigurationPropertiesRebinder]
2017/12/27 16:47:03,992 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:47:04,244 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:47:04,261 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:47:04,335 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2017/12/27 16:47:04,730 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2017/12/27 16:47:04,731 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2017/12/27 16:47:04,953 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2017/12/27 16:47:04,956 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2017/12/27 16:47:05,500 INFO   restartedMain         com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:47:05,905 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929) - Disable delta property : false
2017/12/27 16:47:05,906 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:930) - Single vip registry refresh property : null
2017/12/27 16:47:05,908 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:931) - Force full registry fetch : false
2017/12/27 16:47:05,909 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:932) - Application is null : false
2017/12/27 16:47:05,912 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:933) - Registered Applications size is zero : true
2017/12/27 16:47:05,914 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Application version is -1: true
2017/12/27 16:47:05,915 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) - Getting all instance registry info from the eureka server
2017/12/27 16:47:06,501 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1027) - The response status is 200
2017/12/27 16:47:06,503 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1253) - Starting heartbeat executor: renew interval is: 30
2017/12/27 16:47:06,508 INFO   restartedMain         com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017/12/27 16:47:06,514 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1514364426513 with initial instances count: 2
2017/12/27 16:47:06,531 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-hystrix with eureka with status UP
2017/12/27 16:47:06,533 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.notify(DiscoveryClient.java:1288) - Saw local status change event StatusChangeEvent [timestamp=1514364426533, current=UP, previous=STARTING]
2017/12/27 16:47:06,537 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_GXD-HYSTRIX/192.168.2.4:gxd-hystrix:2001: registering service...
2017/12/27 16:47:06,547 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:47:06,570 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:47:06,597 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:47:06,608 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:47:06,621 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_GXD-HYSTRIX/192.168.2.4:gxd-hystrix:2001 - registration status: 204
2017/12/27 16:47:06,622 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:47:06,630 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:47:06,639 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:47:06,647 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:47:06,655 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:47:06,671 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:47:06,676 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:47:06,682 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:47:06,691 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:47:06,702 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:47:06,709 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:47:06,721 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 16:47:06,841 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2001"]
2017/12/27 16:47:06,898 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2001"]
2017/12/27 16:47:06,967 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:47:07,044 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2001 (http)
2017/12/27 16:47:07,050 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2001
2017/12/27 16:47:07,070 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStarted(StartupInfoLogger.java:57) - Started GxdHystrixApplication in 19.292 seconds (JVM running for 21.731)
2017/12/27 16:52:05,920 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:57:06,063 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:02:06,066 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:07:06,067 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:12:06,068 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:17:06,070 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:22:06,072 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:27:06,075 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:32:06,100 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:37:06,102 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:42:06,105 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:47:06,132 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:52:06,142 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
5,114 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'shiroConfiguration' of type [com.gxd.common.shiro.ShiroConfiguration$$EnhancerBySpringCGLIB$$89f0d2ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,188 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:148) - Configuring ehcache from InputStream
2017/12/27 16:49:25,244 DEBUG  restartedMain         net.sf.ehcache.util.PropertyUtil.parseProperties(PropertyUtil.java:88) - propertiesString is null.
2017/12/27 16:49:25,262 DEBUG  restartedMain         net.sf.ehcache.CacheManager.detectAndFixDiskStorePathConflict(CacheManager.java:654) - No disk store path defined. Skipping disk store path conflict test.
2017/12/27 16:49:25,263 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheManagerEventListener(ConfigurationHelper.java:185) - No CacheManagerEventListenerFactory class specified. Skipping...
2017/12/27 16:49:25,311 DEBUG  restartedMain         net.sf.ehcache.Cache.createBootstrapCacheLoader(Cache.java:968) - No BootstrapCacheLoaderFactory class specified. Skipping...
2017/12/27 16:49:25,311 DEBUG  restartedMain         net.sf.ehcache.Cache.createCacheWriter(Cache.java:942) - CacheWriter factory not configured. Skipping...
2017/12/27 16:49:25,313 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(ConfigurationHelper.java:96) - No CacheExceptionHandlerFactory class specified. Skipping...
2017/12/27 16:49:25,318 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getEhCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,332 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:159) - Cache with name 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache' does not yet exist.  Creating now.
2017/12/27 16:49:25,360 DEBUG  restartedMain         net.sf.ehcache.store.MemoryStore.<init>(MemoryStore.java:153) - Initialized net.sf.ehcache.store.NotifyingMemoryStore for com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 16:49:25,367 DEBUG  restartedMain         net.sf.ehcache.Cache.initialise(Cache.java:1165) - Initialised cache: com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 16:49:25,367 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(ConfigurationHelper.java:361) - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache'.
2017/12/27 16:49:25,368 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:166) - Added EhCache named [com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache]
2017/12/27 16:49:25,407 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.com.gxd.GxdConsumerFreemarkerApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,408 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'gxd-provider.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,420 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$2d986920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,432 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,435 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b108e32: startup date [Wed Dec 27 16:49:25 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b62ba
2017/12/27 16:49:25,485 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:49:25,743 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,770 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$686062c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,792 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,810 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$e47db7ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,842 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,846 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,859 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,862 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$b36e62a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,878 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,887 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedRetryPolicyFactory' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancedRetryPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,896 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedBackoffPolicyFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,902 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'retryabeCachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,912 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,921 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$e0ff2412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,931 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,950 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'com.gxd.web.remote.auth.AuthRemoteClient' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:25,953 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'myShiroRealm' of type [com.gxd.common.shiro.AuthorizingRealmImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,227 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,230 INFO   restartedMain         com.gxd.common.shiro.ShiroConfiguration.loadShiroFilterChain(ShiroConfiguration.java:98) - ##################从数据库读取权限规则，加载到shiroFilter中##################
2017/12/27 16:49:26,411 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,792 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e84ea90d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,874 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,886 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:26,965 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d23c05c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 16:49:27,780 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 3000 (http)
2017/12/27 16:49:27,795 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 16:49:27,798 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 16:49:27,950 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 16:49:27,951 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 8572 ms
2017/12/27 16:49:28,789 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017/12/27 16:49:28,791 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 16:49:28,796 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 16:49:28,797 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 16:49:28,797 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 16:49:28,797 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 16:49:28,797 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 16:49:28,798 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 16:49:28,798 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'SQLInjection' to urls: [/*]
2017/12/27 16:49:28,798 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'XSSCheck' to urls: [/*]
2017/12/27 16:49:28,798 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'shiroFilter' to: [/*]
2017/12/27 16:49:28,799 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 16:49:28,828 INFO   localhost-startStop-1 com.gxd.common.authority.filter.SQLInjectionFilterServlet.init(SQLInjectionFilterServlet.java:34) - ######### regularExpression=(?:')|(?:--)|(/\*(?:.|[\n\r])*?\*/)|(\b(select|update|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\b)
2017/12/27 16:49:28,832 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:55) - XSSSecurityManager init(FilterConfig config) begin
2017/12/27 16:49:28,832 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:60) -  xss_security_config.xml path=file:/E:/idea/gxd-master/gxd-consumer-freemarker/target/classes/conf/xss_security_config.xml 
2017/12/27 16:49:28,832 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:94) - XSSSecurityManager.initConfig(InputStream in) begin
2017/12/27 16:49:28,875 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:162) - 安全匹配规则^.*[I|i][F|f][R|r][A|a][M|m][E|e].*|.*[S|s][C|c][R|r][I|i][P|p][T|t].*|.*[a|A]('%2b')?[l|L]('%2b')?[e|E]('%2b')?[r|R]('%2b')?[t|T]\s*\(.*\).*|.*[W|w][I|i][N|n][D|d][O|o][W|w]\.[L|l][O|o][C|c][A|a][T|t][I|i][O|o][N|n]\s*=.*|.*[S|s][T|t][Y|y][L|l][E|e]\s*=.*[X|x]:[E|e][X|x].*[P|p][R|r][E|e][S|s]{1,2}[I|i][O|o][N|n]\s*\(.*\).*|.*[D|d][O|o][C|c][U|u][M|m][E|e][N|n][T|t]\.[C|c][O|o]{2}[K|k][I|i][E|e].*|.*[E|e][V|v][A|a][L|l]\s*\(.*\).*|.*[U|u][N|n][E|e][S|s][C|c][A|a][P|p][E|e]\s*\(.*\).*|.*[E|e][X|x][E|e][C|c][S|s][C|c][R|r][I|i][P|p][T|t]\s*\(.*\).*|.*[M|m][S|s][G|g][B|b][O|o][X|x]\s*\(.*\).*|.*[C|c][O|o][N|n][F|f][I|i][R|r][M|m]\s*\(.*\).*|.*[P|p][R|r][O|o][M|m][P|p][T|t]\s*\(.*\).*|.*<[S|s][C|c][R|r][I|i][P|p][T|t].*>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>.*|.*<[S|s][T|t][Y|y][L|l][E|e].*>.*</[S|s][T|t][Y|y][L|l][E|e]>.*|[.&[^\"]]*\"[.&[^\"]]*|[.&[^']]*'[.&[^']]*|[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*<[S|s][C|c][R|r][I|i][P|p][T|t]>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*$
2017/12/27 16:49:28,875 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:173) - XSSSecurityManager.initConfig(String path) end
2017/12/27 16:49:28,877 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:67) - 特殊URL过滤匹配规则{imgshow=^$}
2017/12/27 16:49:28,877 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:82) - XSSSecurityManager init(FilterConfig config) end
2017/12/27 16:49:29,657 INFO   restartedMain         com.gxd.common.ApplicationContext.setServletContext(ApplicationContext.java:24) - # version=20171227164929649 , contextPath=
2017/12/27 16:49:29,870 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b62ba: startup date [Wed Dec 27 16:49:19 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@50ad588a] and template loader path [classpath:/templates/]
2017/12/27 16:49:29,873 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 16:49:31,175 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:49:31,175 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:49:31,183 INFO   restartedMain         com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b03d38e
2017/12/27 16:49:31,768 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 16:49:31,769 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 16:49:32,157 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b62ba: startup date [Wed Dec 27 16:49:19 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@50ad588a
2017/12/27 16:49:32,359 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.login(com.gxd.model.auth.User,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2017/12/27 16:49:32,362 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[GET]}" onto java.lang.String com.gxd.web.controller.auth.LoginController.login(org.springframework.ui.Model)
2017/12/27 16:49:32,364 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/logout]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.logout()
2017/12/27 16:49:32,365 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/403]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.unauthorizedRole()
2017/12/27 16:49:32,371 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],methods=[POST || GET]}" onto java.lang.String com.gxd.web.controller.MainController.error(javax.servlet.http.HttpServletRequest,org.springframework.ui.ModelMap)
2017/12/27 16:49:32,374 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/ || /index]}" onto java.lang.String com.gxd.web.controller.MainController.home()
2017/12/27 16:49:32,377 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/topnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.topnav()
2017/12/27 16:49:32,378 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/leftnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.leftnav()
2017/12/27 16:49:32,382 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.add()
2017/12/27 16:49:32,383 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.add(com.gxd.model.simple.News)
2017/12/27 16:49:32,385 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/load/{id}],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.load(java.lang.String,org.springframework.ui.ModelMap)
2017/12/27 16:49:32,386 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list(org.springframework.ui.ModelMap)
2017/12/27 16:49:32,387 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/wx],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.controller.simple.NewsController.getNews()
2017/12/27 16:49:32,389 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list_page],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list_page(java.lang.String,java.lang.Integer,org.springframework.ui.ModelMap)
2017/12/27 16:49:32,391 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/edit],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.edit(com.gxd.model.simple.News)
2017/12/27 16:49:32,396 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.SystemController.msg()
2017/12/27 16:49:32,414 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_list()
2017/12/27 16:49:32,415 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/user/user_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.user_list()
2017/12/27 16:49:32,416 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add()
2017/12/27 16:49:32,417 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_list()
2017/12/27 16:49:32,417 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_add2()
2017/12/27 16:49:32,418 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_list()
2017/12/27 16:49:32,418 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_view()
2017/12/27 16:49:32,419 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add2()
2017/12/27 16:49:32,420 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add4],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add4()
2017/12/27 16:49:32,420 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add5],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add5()
2017/12/27 16:49:32,421 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add6],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add6()
2017/12/27 16:49:32,422 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add9],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add9()
2017/12/27 16:49:32,423 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_list()
2017/12/27 16:49:32,424 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add8],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add8()
2017/12/27 16:49:32,424 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/setconfig],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.setconfig()
2017/12/27 16:49:32,425 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/signin],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.signin()
2017/12/27 16:49:32,426 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/openProject],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.openProject()
2017/12/27 16:49:32,427 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/manager_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.manager_list()
2017/12/27 16:49:32,429 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add7],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add7()
2017/12/27 16:49:32,430 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_card()
2017/12/27 16:49:32,431 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_grain()
2017/12/27 16:49:32,432 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_add()
2017/12/27 16:49:32,433 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add3],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add3()
2017/12/27 16:49:32,433 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/verify],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_verify()
2017/12/27 16:49:32,434 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list2()
2017/12/27 16:49:32,435 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.grain_list()
2017/12/27 16:49:32,436 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_list()
2017/12/27 16:49:32,437 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/bind],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_bind()
2017/12/27 16:49:32,438 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custSupport],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custSupport()
2017/12/27 16:49:32,440 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/account],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_account()
2017/12/27 16:49:32,442 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/push/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.push_list()
2017/12/27 16:49:32,443 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_list()
2017/12/27 16:49:32,444 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_card()
2017/12/27 16:49:32,445 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list()
2017/12/27 16:49:32,446 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_view()
2017/12/27 16:49:32,447 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/telcode],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_telcode()
2017/12/27 16:49:32,448 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adv/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adv_list()
2017/12/27 16:49:32,448 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_edit()
2017/12/27 16:49:32,449 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/poslog],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_poslog()
2017/12/27 16:49:32,450 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/code],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_code()
2017/12/27 16:49:32,450 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_view()
2017/12/27 16:49:32,452 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_list()
2017/12/27 16:49:32,452 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/data/statIncome_data],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.statIncome_data()
2017/12/27 16:49:32,453 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_grain()
2017/12/27 16:49:32,454 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenantConfig/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenantConfig_list()
2017/12/27 16:49:32,455 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_namelist()
2017/12/27 16:49:32,456 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add_hezuo],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add_hezuo()
2017/12/27 16:49:32,457 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_namelist()
2017/12/27 16:49:32,459 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviserProject/adviserAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviserAuditList()
2017/12/27 16:49:32,459 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/custAgent],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_custAgent()
2017/12/27 16:49:32,460 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/edit_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_edit_list()
2017/12/27 16:49:32,461 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/com_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_com_list()
2017/12/27 16:49:32,461 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_list()
2017/12/27 16:49:32,462 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/commissionExt],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commissionExt()
2017/12/27 16:49:32,463 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/rengou],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_rengou()
2017/12/27 16:49:32,463 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/auditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_auditList()
2017/12/27 16:49:32,464 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/Ext],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_Ext()
2017/12/27 16:49:32,465 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custAuditList()
2017/12/27 16:49:32,466 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custintent_view()
2017/12/27 16:49:32,467 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_edit()
2017/12/27 16:49:32,468 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/qianyue],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_qianyue()
2017/12/27 16:49:32,468 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_list()
2017/12/27 16:49:32,469 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list()
2017/12/27 16:49:32,470 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list2()
2017/12/27 16:49:32,471 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_view()
2017/12/27 16:49:32,473 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/she],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_she()
2017/12/27 16:49:32,474 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/agentCommission],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agentCommission()
2017/12/27 16:49:32,477 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:49:32,477 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 16:49:32,491 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 16:49:32,493 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 16:49:32,730 INFO   restartedMain         com.gxd.common.mvc.WebMvcConfig.addResourceHandlers(WebMvcConfig.java:16) - # WebMvcConfig addResourceHandlers ...
2017/12/27 16:49:32,758 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:49:32,759 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:49:32,759 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:49:32,891 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 16:49:34,068 INFO   restartedMain         org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/27 16:49:35,558 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,570 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,573 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 16:49:35,574 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,576 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,577 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017/12/27 16:49:35,579 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,581 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,584 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 16:49:35,587 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 16:49:35,588 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,590 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,596 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 16:49:35,597 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:49:35,598 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,599 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,601 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 16:49:35,602 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 16:49:35,602 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 16:49:35,603 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 16:49:35,604 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 16:49:35,608 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 16:49:35,609 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 16:49:35,612 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:35,614 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 16:49:36,119 WARN   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:62) - Unable to start LiveReload server
2017/12/27 16:49:36,535 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 16:49:37,028 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:49:37,043 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 16:49:37,046 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 16:49:37,046 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 16:49:37,047 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 16:49:37,048 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 16:49:37,052 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 16:49:37,071 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 16:49:37,087 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 16:49:37,098 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 16:49:37,108 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=49b62ba,type=ConfigurationPropertiesRebinder]
2017/12/27 16:49:37,116 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 16:49:37,385 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 16:49:37,403 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 16:49:37,462 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2017/12/27 16:49:37,684 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2017/12/27 16:49:37,684 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2017/12/27 16:49:37,854 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2017/12/27 16:49:37,855 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2017/12/27 16:49:38,152 INFO   restartedMain         com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:49:38,407 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929) - Disable delta property : false
2017/12/27 16:49:38,407 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:930) - Single vip registry refresh property : null
2017/12/27 16:49:38,408 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:931) - Force full registry fetch : false
2017/12/27 16:49:38,408 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:932) - Application is null : false
2017/12/27 16:49:38,408 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:933) - Registered Applications size is zero : true
2017/12/27 16:49:38,409 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Application version is -1: true
2017/12/27 16:49:38,409 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) - Getting all instance registry info from the eureka server
2017/12/27 16:49:38,721 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1027) - The response status is 200
2017/12/27 16:49:38,725 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1253) - Starting heartbeat executor: renew interval is: 30
2017/12/27 16:49:38,732 INFO   restartedMain         com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017/12/27 16:49:38,737 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1514364578737 with initial instances count: 3
2017/12/27 16:49:38,835 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-consumer-freemarker with eureka with status UP
2017/12/27 16:49:38,837 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.notify(DiscoveryClient.java:1288) - Saw local status change event StatusChangeEvent [timestamp=1514364578837, current=UP, previous=STARTING]
2017/12/27 16:49:38,844 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_GXD-CONSUMER-FREEMARKER/192.168.2.4:gxd-consumer-freemarker:3000: registering service...
2017/12/27 16:49:38,859 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 16:49:38,888 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 16:49:38,918 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_GXD-CONSUMER-FREEMARKER/192.168.2.4:gxd-consumer-freemarker:3000 - registration status: 204
2017/12/27 16:49:38,924 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 16:49:38,937 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 16:49:38,945 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 16:49:38,952 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 16:49:38,960 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 16:49:38,970 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 16:49:38,984 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 16:49:39,002 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 16:49:39,012 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 16:49:39,021 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 16:49:39,032 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 16:49:39,039 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 16:49:39,049 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 16:49:39,050 INFO   restartedMain         org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'gxd-consumer-freemarker:3000.errorChannel' has 1 subscriber(s).
2017/12/27 16:49:39,050 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 16:49:39,051 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 16:49:39,064 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 16:49:39,170 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-3000"]
2017/12/27 16:49:39,204 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-3000"]
2017/12/27 16:49:39,252 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 16:49:39,297 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 3000 (http)
2017/12/27 16:49:39,301 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 3000
2017/12/27 16:49:39,313 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdConsumerFreemarkerApplication in 25.619 seconds (JVM running for 28.935)
2017/12/27 16:49:39,412 INFO   http-nio-3000-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 16:49:39,413 INFO   http-nio-3000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 16:49:39,491 INFO   http-nio-3000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2017/12/27 16:49:39,685 INFO   http-nio-3000-exec-2  com.gxd.web.controller.auth.LoginController.login(LoginController.java:25) - #去登录
2017/12/27 16:49:41,394 DEBUG  http-nio-3000-exec-7  com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:50) - ## 正在验证用户登录...
2017/12/27 16:49:41,439 INFO   http-nio-3000-exec-7  org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4e622bb2: startup date [Wed Dec 27 16:49:41 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b62ba
2017/12/27 16:49:41,728 INFO   http-nio-3000-exec-7  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 16:49:42,297 INFO   http-nio-3000-exec-7  com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 16:49:42,346 INFO   http-nio-3000-exec-7  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-gxd-provider
2017/12/27 16:49:42,397 INFO   http-nio-3000-exec-7  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: gxd-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=gxd-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017/12/27 16:49:42,405 INFO   http-nio-3000-exec-7  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
2017/12/27 16:49:42,455 INFO   http-nio-3000-exec-7  com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 16:49:42,460 INFO   http-nio-3000-exec-7  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client gxd-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=gxd-provider,current list of Servers=[192.168.2.4:2000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.2.4:2000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7fad6fb1
2017/12/27 16:49:43,410 INFO   PollingServerListUpdater-0 com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 16:49:45,277 WARN   http-nio-3000-exec-7  org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:216) - Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test, rememberMe=false (192.168.2.4)].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
feign.RetryableException: Read timed out executing GET http://gxd-provider/auth/findUserByName/test
	at feign.FeignException.errorExecuting(FeignException.java:67) ~[feign-core-9.5.0.jar:?]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104) ~[feign-core-9.5.0.jar:?]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:?]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:?]
	at com.sun.proxy.$Proxy98.findUserByName(Unknown Source) ~[?:?]
	at com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:61) ~[classes/:?]
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:154) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.3.2.jar:1.3.2]
	at com.gxd.common.shiro.MShiroFilterFactoryBean$MSpringShiroFilter.doFilterInternal(MShiroFilterFactoryBean.java:91) [classes/:?]
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at com.gxd.common.authority.filter.XSSSecurityFilter.doFilter(XSSSecurityFilter.java:89) [classes/:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at com.gxd.common.authority.filter.SQLInjectionFilterServlet.doFilter(SQLInjectionFilterServlet.java:63) [classes/:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110) [spring-boot-actuator-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) [spring-boot-actuator-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[?:1.7.0_21]
	at java.net.SocketInputStream.read(SocketInputStream.java:150) ~[?:1.7.0_21]
	at java.net.SocketInputStream.read(SocketInputStream.java:121) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:235) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:275) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.read(BufferedInputStream.java:334) ~[?:1.7.0_21]
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:633) ~[?:1.7.0_21]
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:579) ~[?:1.7.0_21]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1322) ~[?:1.7.0_21]
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468) ~[?:1.7.0_21]
	at feign.Client$Default.convertResponse(Client.java:152) ~[feign-core-9.5.0.jar:?]
	at feign.Client$Default.execute(Client.java:74) ~[feign-core-9.5.0.jar:?]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer$1.doWithRetry(RetryableFeignLoadBalancer.java:111) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer$1.doWithRetry(RetryableFeignLoadBalancer.java:96) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287) ~[spring-retry-1.2.1.RELEASE.jar:?]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164) ~[spring-retry-1.2.1.RELEASE.jar:?]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:96) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:51) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144) ~[rxjava-1.2.0.jar:1.2.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.subscribe(Observable.java:10247) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.subscribe(Observable.java:10214) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341) ~[rxjava-1.2.0.jar:1.2.0]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:?]
	... 76 more
2017/12/27 16:49:45,409 INFO   http-nio-3000-exec-7  com.gxd.web.controller.auth.LoginController.login(LoginController.java:31) - # 登录中 
2017/12/27 16:49:45,410 INFO   http-nio-3000-exec-7  com.gxd.web.controller.auth.LoginController.login(LoginController.java:45) - 对用户[test]进行登录验证..验证开始
2017/12/27 16:49:45,411 DEBUG  http-nio-3000-exec-7  com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:50) - ## 正在验证用户登录...
2017/12/27 16:49:46,909 INFO   http-nio-3000-exec-7  com.gxd.web.controller.auth.LoginController.login(LoginController.java:47) - 对用户[test]进行登录验证..验证通过
2017/12/27 16:49:46,910 INFO   http-nio-3000-exec-7  com.gxd.web.controller.auth.LoginController.login(LoginController.java:68) - 用户[test]登录认证通过(这里可以进行一些认证通过后的一些系统参数初始化操作)
2017/12/27 16:49:47,050 INFO   http-nio-3000-exec-8  com.gxd.web.controller.MainController.home(MainController.java:21) - # 进入默认首页
2017/12/27 16:49:47,914 DEBUG  http-nio-3000-exec-9  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":4,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":10,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4}
2017/12/27 16:54:38,416 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 16:59:38,425 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:04:38,429 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:09:38,432 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:14:38,434 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:19:38,435 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:24:38,438 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:29:38,440 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:34:38,442 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:39:38,444 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:44:38,448 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:49:38,455 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 17:59:29,687 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 17:59:29,739 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29dafbfb: startup date [Wed Dec 27 17:59:29 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@70b6c3b9
2017/12/27 17:59:31,412 DEBUG  main                  org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.registerBeanDefinitions(MybatisAutoConfiguration.java:170) - Searching for mappers annotated with @Mapper
2017/12/27 17:59:31,418 DEBUG  main                  org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.registerBeanDefinitions(MybatisAutoConfiguration.java:182) - Using auto-configuration base package 'com.gxd'
2017/12/27 17:59:31,421 WARN   main                  org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:166) - No MyBatis mapper was found in '[com.gxd]' package. Please check your configuration.
2017/12/27 17:59:31,482 INFO   main                  org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/27 17:59:32,444 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=adb71c7e-29fa-3409-bc8b-dca2cdebbd00
2017/12/27 17:59:32,473 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 17:59:32,481 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 17:59:32,510 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 17:59:32,694 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$aff3becf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 17:59:32,718 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7dc7188e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 17:59:32,847 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 17:59:32,852 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 17:59:32,950 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$99e11b8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 17:59:33,711 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 17:59:33,740 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 17:59:33,742 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 17:59:33,939 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 17:59:33,940 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 4201 ms
2017/12/27 17:59:35,368 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 17:59:35,369 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 17:59:35,369 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 17:59:35,370 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 17:59:35,373 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 17:59:35,374 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 17:59:35,374 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 17:59:35,375 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 17:59:35,375 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 17:59:35,538 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 17:59:37,107 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 17:59:37,895 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29dafbfb: startup date [Wed Dec 27 17:59:29 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@70b6c3b9
2017/12/27 17:59:38,098 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 17:59:38,106 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 17:59:38,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 17:59:38,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 17:59:38,279 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 17:59:38,279 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 17:59:38,444 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 17:59:39,756 WARN   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.refresh(AbstractApplicationContext.java:551) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.tomcat.jdbc.pool.DataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Cannot determine embedded database driver class for database type NONE. If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).
2017/12/27 17:59:39,774 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 17:59:39,851 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Stopping service [Tomcat]
2017/12/27 17:59:39,921 INFO   main                  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101) - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017/12/27 17:59:39,937 ERROR  main                  org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Cannot determine embedded database driver class for database type NONE

Action:

If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).

2017/12/27 18:01:34,046 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 18:01:34,071 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c71cff7: startup date [Wed Dec 27 18:01:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@71e1362f
2017/12/27 18:01:35,620 INFO   main                  org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/27 18:01:36,458 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=e0632efc-75f8-35d9-9768-ee4e78968f5a
2017/12/27 18:01:36,487 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 18:01:36,496 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 18:01:36,522 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:01:36,676 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5ae8ca76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:01:36,740 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:01:36,741 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:01:36,793 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$44d62732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:01:37,459 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/27 18:01:37,477 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 18:01:37,479 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 18:01:37,656 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 18:01:37,657 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 3586 ms
2017/12/27 18:01:39,037 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 18:01:39,038 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 18:01:39,038 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 18:01:39,039 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 18:01:39,039 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 18:01:39,040 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/27 18:01:39,040 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/27 18:01:39,041 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 18:01:39,041 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 18:01:39,255 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/27 18:01:40,961 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/27 18:01:42,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c71cff7: startup date [Wed Dec 27 18:01:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@71e1362f
2017/12/27 18:01:42,242 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 18:01:42,245 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 18:01:42,305 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 18:01:42,306 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/27 18:01:42,408 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:01:42,408 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:01:42,553 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:01:44,005 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/27 18:01:44,768 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 18:01:44,771 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 18:01:44,771 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,772 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,774 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,775 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,776 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 18:01:44,777 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 18:01:44,780 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,782 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 18:01:44,782 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,783 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,785 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 18:01:44,785 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 18:01:44,786 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:01:44,787 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 18:01:44,788 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,789 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,792 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 18:01:44,793 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:01:44,793 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,794 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,795 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:01:44,796 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 18:01:45,013 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c71cff7: startup date [Wed Dec 27 18:01:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@71e1362f] and template loader path [classpath:/templates/]
2017/12/27 18:01:45,015 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 18:01:45,382 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 18:01:46,173 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/27 18:01:46,591 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:01:46,606 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 18:01:46,609 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 18:01:46,610 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 18:01:46,611 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 18:01:46,612 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 18:01:46,615 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 18:01:46,690 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 18:01:46,714 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 18:01:46,724 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 18:01:46,736 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1c71cff7,type=ConfigurationPropertiesRebinder]
2017/12/27 18:01:46,743 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:01:47,133 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 18:01:47,134 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/27 18:01:47,143 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 18:01:47,189 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 18:01:47,213 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 18:01:47,223 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 18:01:47,229 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 18:01:47,235 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 18:01:47,241 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 18:01:47,248 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 18:01:47,255 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 18:01:47,276 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 18:01:47,286 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 18:01:47,293 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 18:01:47,298 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 18:01:47,303 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 18:01:47,421 INFO   main                  org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 18:01:47,422 INFO   main                  org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'application:1111.errorChannel' has 1 subscriber(s).
2017/12/27 18:01:47,431 INFO   main                  org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 18:01:47,437 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/27 18:01:47,444 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/27 18:01:47,445 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/27 18:01:47,512 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/27 18:01:47,522 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/27 18:01:47,523 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/27 18:01:47,542 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/27 18:01:47,563 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/27 18:01:47,587 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 18:01:47,617 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/27 18:01:47,619 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/27 18:01:47,629 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 16.907 seconds (JVM running for 18.51)
2017/12/27 18:02:42,270 INFO   http-nio-1111-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 18:02:42,271 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 18:02:42,309 INFO   http-nio-1111-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
b9e764
2017/12/27 18:02:15,885 INFO   restartedMain         com.gxd.common.datasource.DynamicDataSourceRegister.registerBeanDefinitions(DynamicDataSourceRegister.java:65) - Dynamic DataSource Registry
2017/12/27 18:02:16,406 INFO   restartedMain         org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/27 18:02:16,861 INFO   restartedMain         org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2017/12/27 18:02:17,766 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=a21e346c-f3cf-3c8a-a8c2-fbe464a71970
2017/12/27 18:02:17,836 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 18:02:17,849 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 18:02:17,900 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:02:18,364 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ab6acb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:02:18,711 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4ce352f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:02:18,772 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:02:18,778 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:02:18,841 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$36d0afb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:02:20,066 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 2000 (http)
2017/12/27 18:02:20,082 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 18:02:20,085 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 18:02:20,271 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 18:02:20,271 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 8108 ms
2017/12/27 18:02:20,855 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 18:02:20,863 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 18:02:20,864 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 18:02:20,865 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 18:02:20,865 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 18:02:20,865 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 18:02:20,865 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 18:02:20,866 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 18:02:33,502 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.msg()
2017/12/27 18:02:33,505 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.SystemController.swaggerui()
2017/12/27 18:02:33,512 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/getPermissions/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.PermissionVo> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(java.lang.String)
2017/12/27 18:02:33,513 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findUserByName/{username}],methods=[GET]}" onto public com.gxd.model.auth.User com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(java.lang.String)
2017/12/27 18:02:33,514 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auth/findRoleByUserId/{userId}],methods=[GET]}" onto public java.util.List<com.gxd.model.auth.Role> com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(java.lang.String)
2017/12/27 18:02:33,526 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/addNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.addNews(com.gxd.model.simple.News)
2017/12/27 18:02:33,531 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/editNews],methods=[POST]}" onto public java.lang.Boolean com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.editNews(com.gxd.model.simple.News)
2017/12/27 18:02:33,534 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsById/{id}],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsById(java.lang.String)
2017/12/27 18:02:33,536 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/getNews],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.getNews()
2017/12/27 18:02:33,539 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/simple/findNewsByPage],methods=[GET]}" onto public com.github.pagehelper.PageInfo<com.gxd.model.simple.News> com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(java.lang.String,java.lang.Integer)
2017/12/27 18:02:33,554 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2017/12/27 18:02:33,556 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2017/12/27 18:02:33,559 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2017/12/27 18:02:33,574 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 18:02:33,576 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 18:02:35,010 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,011 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 18:02:35,012 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,013 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 18:02:35,013 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:02:35,014 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 18:02:35,015 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 18:02:35,016 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,017 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 18:02:35,017 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 18:02:35,019 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,021 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,022 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 18:02:35,024 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,027 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,032 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 18:02:35,033 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:02:35,034 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,035 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,036 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,037 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 18:02:35,037 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,038 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 18:02:35,039 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:02:35,465 INFO   restartedMain         springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2017/12/27 18:02:36,352 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3323c8f5: startup date [Wed Dec 27 18:02:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6eb9e764
2017/12/27 18:02:36,504 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:02:36,505 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:02:36,599 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:02:37,352 INFO   restartedMain         org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/27 18:02:38,192 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3323c8f5: startup date [Wed Dec 27 18:02:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6eb9e764] and template loader path [classpath:/templates/]
2017/12/27 18:02:38,196 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 18:02:38,286 WARN   restartedMain         org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration.checkTemplateLocationExists(FreeMarkerAutoConfiguration.java:93) - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2017/12/27 18:02:38,671 INFO   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58) - LiveReload server is running on port 35729
2017/12/27 18:02:39,169 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 18:02:39,561 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:02:39,583 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 18:02:39,588 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 18:02:39,589 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 18:02:39,591 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 18:02:39,592 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 18:02:39,598 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 18:02:39,625 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 18:02:39,652 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 18:02:39,668 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 18:02:39,684 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3323c8f5,type=ConfigurationPropertiesRebinder]
2017/12/27 18:02:39,695 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:02:40,171 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 18:02:40,189 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 18:02:42,571 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-provider with eureka with status UP
2017/12/27 18:02:42,604 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 18:02:42,656 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 18:02:42,772 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 18:02:42,798 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 18:02:42,813 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 18:02:42,827 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 18:02:42,950 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 18:02:42,986 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 18:02:42,998 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 18:02:43,029 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 18:02:43,047 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 18:02:43,059 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 18:02:43,077 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 18:02:43,087 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 18:02:43,108 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 18:02:43,109 INFO   restartedMain         org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'gxd-provider:2000.errorChannel' has 1 subscriber(s).
2017/12/27 18:02:43,110 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 18:02:43,111 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 18:02:43,112 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147) - Context refreshed
2017/12/27 18:02:43,291 INFO   restartedMain         springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150) - Found 1 custom documentation plugin(s)
2017/12/27 18:02:43,514 INFO   restartedMain         springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) - Scanning for api listing references
2017/12/27 18:02:44,104 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2000"]
2017/12/27 18:02:44,127 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2000"]
2017/12/27 18:02:44,148 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 18:02:44,187 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2000 (http)
2017/12/27 18:02:44,190 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2000
2017/12/27 18:02:44,204 INFO   restartedMain         com.gxd.GxdProviderApplication.logStarted(StartupInfoLogger.java:57) - Started GxdProviderApplication in 35.68 seconds (JVM running for 39.524)
2017/12/27 18:08:27,486 INFO   http-nio-2000-exec-1  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 18:08:27,489 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 18:08:27,732 INFO   http-nio-2000-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 243 ms
2017/12/27 18:08:27,905 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 18:08:28,256 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 18:08:28,901 INFO   http-nio-2000-exec-1  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:914) - {dataSource-1} inited
2017/12/27 18:08:28,938 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 18:08:28,938 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 18:08:29,412 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:43) - # findUserByName , parameter=test 
2017/12/27 18:08:29,414 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , CREATE_TIME , EMAIL , LAST_LOGIN_TIME , MODIFY_TIME , USERNAME , ORGANIZE_ID , `PASSWORD` , SALT , `STATUS` , TRUE_NAME FROM T_SYS_USER WHERE USERNAME=? 
2017/12/27 18:08:29,474 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 18:08:29,474 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 18:08:29,474 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - ==> Parameters: test(String)
2017/12/27 18:08:29,587 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 18:08:29,587 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 18:08:29,606 DEBUG  http-nio-2000-exec-1  com.gxd.mapper.auth.UserMapper.findUserByName.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 18:08:29,660 DEBUG  http-nio-2000-exec-1  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 18:08:29,736 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 18:08:29,738 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findUserByName(AuthRemoteClientImpl.java:45) - # findUserByName , result={"createTime":1499653077000,"email":"wangxin@139.com","id":"2017100500000000002","organizeId":"2017100300000000002","password":"88224c07ca4cb62fae285bff8cf176efc46b1230","salt":"b70a35c29470e7cc","status":1,"trueName":"test","username":"test"}
2017/12/27 18:08:30,036 DEBUG  http-nio-2000-exec-4  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:53) - # findRoleByUserId , parameter=2017100500000000002 
2017/12/27 18:08:30,055 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT R.ID , R.NAME , R.CODE , R.REMARK FROM T_SYS_ROLE R , T_SYS_USER_ROLE UR WHERE R.ID=UR.ROLE_ID AND UR.USER_ID=? 
2017/12/27 18:08:30,063 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 18:08:30,137 DEBUG  http-nio-2000-exec-4  com.gxd.mapper.auth.RoleMapper.findRoleByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 18:08:30,148 DEBUG  http-nio-2000-exec-4  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.findRoleByUserId(AuthRemoteClientImpl.java:55) - # findRoleByUserId , result=[{"code":"common_role","id":"2017100300000000002","name":"普通用户","remark":"普通用户"}]
2017/12/27 18:08:30,177 DEBUG  http-nio-2000-exec-5  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:63) - # getPermissions , parameter=2017100500000000002 
2017/12/27 18:08:30,191 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT P.ID , P.HIDE , P.SKEY , P.NAME, P.CSS_CLASS , P.PARENT_KEY , P.LEV , P.SORT , P.URL FROM T_SYS_PERMISSION P , T_SYS_USER_ROLE UR , T_SYS_ROLE_PERMISSION RP WHERE RP.PERMISSION_ID=P.ID AND RP.ROLE_ID=UR.ROLE_ID AND UR.USER_ID=? ORDER BY P.SORT ASC 
2017/12/27 18:08:30,219 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - ==> Parameters: 2017100500000000002(String)
2017/12/27 18:08:30,391 DEBUG  http-nio-2000-exec-5  com.gxd.mapper.auth.PermissionMapper.findPermissionByUserId.debug(BaseJdbcLogger.java:181) - <==      Total: 151
2017/12/27 18:08:30,443 DEBUG  http-nio-2000-exec-5  com.gxd.web.remote.impl.auth.AuthRemoteClientImpl.getPermissions(AuthRemoteClientImpl.java:65) - # getPermissions , result=[{"cssClass":"fa-home","hide":1,"id":"2017100200000000001","key":"glsy","lev":1,"name":"管理首页","sort":1,"url":"index"},{"children":[{"cssClass":"","hide":1,"id":"2017100200000000003","key":"znxy_xwfb","lev":2,"name":"新闻发布","parentKey":"znxy","sort":11,"url":"news/add"},{"cssClass":"","hide":1,"id":"2017100200000000004","key":"znxy_xwlb","lev":2,"name":"新闻列表","parentKey":"znxy","sort":12,"url":"news/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000002","key":"znxy","lev":1,"name":"站内新闻","sort":10},{"cssClass":"fa-gear","hide":1,"id":"2017100200000000008","key":"xtpz","lev":1,"name":"系统配置","sort":20,"url":"view/sysconfig/setconfig"},{"cssClass":"fa-desktop","hide":1,"id":"2017100200000000009","key":"dxgl","lev":1,"name":"电商管理","sort":30,"url":"view/tenant/tenant-list"},{"cssClass":"fa-gears","hide":1,"id":"2017100200000000010","key":"dspz","lev":1,"name":"电商配置","sort":40,"url":"view/tenantConfig/list"},{"children":[{"hide":1,"id":"2017100200000000012","key":"dccsgl_tjcs","lev":2,"name":"添加城市","parentKey":"dccsgl","sort":51,"url":"view/city/add2"},{"hide":1,"id":"2017100200000000013","key":"dccsgl_cslb","lev":2,"name":"城市列表","parentKey":"dccsgl","sort":51,"url":"view/city/list"}],"cssClass":"fa-map-marker","hide":1,"id":"2017100200000000011","key":"dccsgl","lev":1,"name":"地区城市管理","sort":50},{"cssClass":"fa-user","hide":1,"id":"2017100200000000014","key":"chgl","lev":1,"name":"账号管理","sort":60,"url":"view/user/user_list"},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000016","key":"lpgl_ktlp","lev":2,"name":"开通楼盘","parentKey":"lpgl","sort":71,"url":"view/project/openProject"},{"cssClass":"fa-pencil","hide":1,"id":"2017100200000000017","key":"lpgl_lpsh","lev":2,"name":"楼盘审核","parentKey":"lpgl","sort":72,"url":"view/project/list"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000018","key":"lpgl_lpgl","lev":2,"name":"楼盘管理","parentKey":"lpgl","sort":73,"url":"view/project/manager_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000019","key":"lpgl_hzlp","lev":2,"name":"合作楼盘","parentKey":"lpgl","sort":74,"url":"view/project/edit_list"},{"children":[{"cssClass":"fa-file-text-o","hide":1,"id":"2017100200000000021","key":"lpgl_tjlp_jbxx","lev":3,"name":"基本信息","parentKey":"lpgl_tjlp","sort":76,"url":"view/project/add"},{"cssClass":"fa-puzzle-piece","hide":1,"id":"2017100200000000022","key":"lpgl_tjlp_hxgl","lev":3,"name":"户型管理","parentKey":"lpgl_tjlp","sort":77,"url":"view/project/add2"},{"cssClass":"fa-picture-o","hide":1,"id":"2017100200000000023","key":"lpgl_tjlp_lpxc","lev":3,"name":"楼盘相册","parentKey":"lpgl_tjlp","sort":78,"url":"view/project/add3"},{"cssClass":"fa-sort-numeric-asc","hide":1,"id":"2017100200000000024","key":"lpgl_tjlp_xkgl","lev":3,"name":"销控管理","parentKey":"lpgl_tjlp","sort":79,"url":"view/project/add4"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000025","key":"lpgl_tjlp_hzxx","lev":3,"name":"合作信息","parentKey":"lpgl_tjlp","sort":80,"url":"view/project/add5"},{"cssClass":"fa-share-alt","hide":1,"id":"2017100200000000026","key":"lpgl_tjlp_cpwh","lev":3,"name":"产品维护","parentKey":"lpgl_tjlp","sort":81,"url":"view/project/add6"},{"cssClass":"fa-dollar","hide":1,"id":"2017100200000000027","key":"lpgl_tjlp_rjwh","lev":3,"name":"拥金维护","parentKey":"lpgl_tjlp","sort":82,"url":"view/project/add7"},{"cssClass":"fa-list-alt","hide":1,"id":"2017100200000000028","key":"lpgl_tjlp_lpdt","lev":3,"name":"楼盘动态","parentKey":"lpgl_tjlp","sort":83,"url":"view/project/add8"},{"cssClass":"fa-heart","hide":1,"id":"2017100200000000029","key":"lpgl_tjlp_yhhd","lev":3,"name":"优惠活动","parentKey":"lpgl_tjlp","sort":84,"url":"view/project/add9"}],"cssClass":"fa-plus","hide":1,"id":"2017100200000000020","key":"lpgl_tjlp","lev":2,"name":"添加楼盘","parentKey":"lpgl","sort":75,"url":"view/project/add"}],"cssClass":"fa-building","hide":1,"id":"2017100200000000015","key":"lpgl","lev":1,"name":"楼盘管理","sort":70,"url":"view/project/list"},{"children":[{"cssClass":"fa-vine","hide":1,"id":"2017100200000000031","key":"jjgsjjr_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjgsjjr","sort":91,"url":"view/firm/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000032","key":"jjgsjjr_jjrgl","lev":2,"name":"经纪人管理","parentKey":"jjgsjjr","sort":92,"url":"view/agent/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000033","key":"jjgsjjr_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"jjgsjjr","sort":93,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000034","key":"jjgsjjr_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"jjgsjjr","sort":94,"url":"view/agent/list"}],"cssClass":"fa-group","hide":1,"id":"2017100200000000030","key":"jjgsjjr","lev":1,"name":"经济公司/经纪人","sort":90},{"children":[{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000036","key":"zygwgl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"zygwgl","sort":101,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000037","key":"zygwgl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"zygwgl","sort":102,"url":"view/adviser/list"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000038","key":"zygwgl_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"zygwgl","sort":103,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000039","key":"zygwgl_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"zygwgl","sort":104,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000040","key":"zygwgl_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"zygwgl","sort":105,"url":"view/agent/list"}],"cssClass":"fa-user-md","hide":1,"id":"2017100200000000035","key":"zygwgl","lev":1,"name":"置业顾问管理","sort":100},{"children":[{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000042","key":"posjygl_posjbd","lev":2,"name":"POS机绑定","parentKey":"posjygl","sort":111,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000043","key":"posjygl_posbdxx","lev":2,"name":"POS绑定信息","parentKey":"posjygl","sort":112,"url":"view/pos/list"},{"cssClass":"fa-legal","hide":1,"id":"2017100200000000044","key":"posjygl_posjyxx","lev":2,"name":"POS交易信息","parentKey":"posjygl","sort":113,"url":"view/pos/poslog"}],"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000041","key":"posjygl","lev":1,"name":"POS交易管理","sort":110},{"children":[{"cssClass":"fa-user","hide":1,"id":"2017100200000000046","key":"sjtj_yhtj","lev":2,"name":"用户统计","parentKey":"sjtj","sort":121,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000047","key":"sjtj_khtj","lev":2,"name":"客户统计","parentKey":"sjtj","sort":122,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000048","key":"sjtj_sytj","lev":2,"name":"收入统计","parentKey":"sjtj","sort":123,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000049","key":"sjtj_yjtj","lev":2,"name":"佣金统计","parentKey":"sjtj","sort":124,"url":"view/data/statIncome_data"}],"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000045","key":"sjtj","lev":1,"name":"数据统计","sort":120},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000051","key":"htgl_tjgllb","lev":2,"name":"添加/管理列表","parentKey":"htgl","sort":131,"url":"view/agreement/list"},{"cssClass":"fa-mail-forward","hide":1,"id":"2017100200000000052","key":"htgl_zrg","lev":2,"name":"转认购","parentKey":"htgl","sort":132,"url":"view/agreement/rengou"},{"cssClass":"fa-check-square-o","hide":1,"id":"2017100200000000053","key":"htgl_qy","lev":2,"name":"签约","parentKey":"htgl","sort":133,"url":"view/agreement/qianyue"},{"cssClass":"fa-edit","hide":1,"id":"2017100200000000054","key":"htgl_htmxbj","lev":2,"name":"合同明细/编辑","parentKey":"htgl","sort":134,"url":"view/agreement/edit"},{"cssClass":"fa-building-o","hide":1,"id":"2017100200000000055","key":"htgl_htxq","lev":2,"name":"合同详情","parentKey":"htgl","sort":135,"url":"view/agreement/view"}],"cssClass":"fa-edit","hide":1,"id":"2017100200000000050","key":"htgl","lev":1,"name":"合同管理","sort":130},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000057","key":"zjl_khtj","lev":2,"name":"客户统计","parentKey":"zjl","sort":141,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000058","key":"zjl_sytj","lev":2,"name":"收入统计","parentKey":"zjl","sort":143,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000059","key":"zjl_yjtj","lev":2,"name":"佣金统计","parentKey":"zjl","sort":144,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000056","key":"zjl","lev":1,"name":"总经理","sort":140},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000061","key":"jjgsgly_hz","lev":2,"name":"合作","parentKey":"jjgsgly","sort":151,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000062","key":"jjgsgly_mdlb","lev":2,"name":"门店列表","parentKey":"jjgsgly","sort":152,"url":"view/firm/list2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000063","key":"jjgsgly_zhgl","lev":2,"name":"账号管理","parentKey":"jjgsgly","sort":153,"url":"view/user/user_list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000064","key":"jjgsgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"jjgsgly","sort":154,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000065","key":"jjgsgly_dgzh","lev":2,"name":"对公账号","parentKey":"jjgsgly","sort":155,"url":"view/firm/view"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000066","key":"jjgsgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"jjgsgly","sort":156,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000067","key":"jjgsgly_khlb","lev":2,"name":"客户列表","parentKey":"jjgsgly","sort":157,"url":"view/agent/custAgent"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000068","key":"jjgsgly_yjxx","lev":2,"name":"佣金信息","parentKey":"jjgsgly","sort":158,"url":"view/commission/agentCommission"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000069","key":"jjgsgly_ewyj","lev":2,"name":"额外佣金","parentKey":"jjgsgly","sort":159,"url":"view/commission/commissionExt"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000070","key":"jjgsgly_khtj","lev":2,"name":"客户统计","parentKey":"jjgsgly","sort":160,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000071","key":"jjgsgly_sytj","lev":2,"name":"收入统计","parentKey":"jjgsgly","sort":161,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000072","key":"jjgsgly_yjtj","lev":2,"name":"佣金统计","parentKey":"jjgsgly","sort":162,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000060","key":"jjgsgly","lev":1,"name":"经济公司管理员","sort":150},{"children":[{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000074","key":"mdgly_ghsh","lev":2,"name":"挂靠审核","parentKey":"mdgly","sort":171,"url":"view/firm/verify"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000075","key":"mdgly_jjrlb","lev":2,"name":"经纪人列表","parentKey":"mdgly","sort":172,"url":"view/agent/list"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000076","key":"mdgly_khlb","lev":2,"name":"客户列表","parentKey":"mdgly","sort":173,"url":"view/agent/custAgent"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000077","key":"mdgly_yhtj2","lev":2,"name":"用户统计","parentKey":"mdgly","sort":174,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000078","key":"mdgly_yhtj3","lev":2,"name":"用户统计","parentKey":"mdgly","sort":175,"url":"view/data/statIncome_data"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000079","key":"mdgly_yhtj4","lev":2,"name":"用户统计","parentKey":"mdgly","sort":176,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000080","key":"mdgly_khtj","lev":2,"name":"客户统计","parentKey":"mdgly","sort":177,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000073","key":"mdgly","lev":1,"name":"门店管理员","sort":170},{"children":[{"children":[{"hide":1,"id":"2017100200000000083","key":"acjl_lpgl_lpgl","lev":3,"name":"楼盘列表","parentKey":"acjl_lpgl","sort":182,"url":"view/project/list"},{"hide":1,"id":"2017100200000000084","key":"acjl_lpgl_bjtj","lev":3,"name":"编辑添加","parentKey":"acjl_lpgl","sort":183,"url":"view/project/add"}],"hide":1,"id":"2017100200000000082","key":"acjl_lpgl","lev":2,"name":"楼盘管理","parentKey":"acjl","sort":181},{"cssClass":"fa-stumbleupon","hide":1,"id":"2017100200000000085","key":"acjl_zygwgksh","lev":2,"name":"置业顾问挂靠审核","parentKey":"acjl","sort":184,"url":"view/adviserProject/adviserAuditList"},{"cssClass":"fa-user-md","hide":1,"id":"2017100200000000086","key":"acjl_zygwgl","lev":2,"name":"置业顾问管理","parentKey":"acjl","sort":185,"url":"view/adviser/list"},{"hide":1,"id":"2017100200000000087","key":"acjl_khsh","lev":2,"name":"客户审核","parentKey":"acjl","sort":186,"url":"view/custintent/custAuditList"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000081","key":"acjl","lev":1,"name":"案场经理","sort":180},{"children":[{"cssClass":"fa-group","hide":1,"id":"2017100200000000089","key":"xmzj_khtj","lev":2,"name":"客户统计","parentKey":"xmzj","sort":191,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000090","key":"xmzj_sytj","lev":2,"name":"收入统计","parentKey":"xmzj","sort":192,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000091","key":"xmzj_yjtj","lev":2,"name":"佣金统计","parentKey":"xmzj","sort":193,"url":"view/data/statIncome_data"}],"hide":1,"id":"2017100200000000088","key":"xmzj","lev":1,"name":"项目总监","sort":190},{"children":[{"cssClass":"fa-plus","hide":1,"id":"2017100200000000093","key":"xmjl_ktlp","lev":2,"name":"开通楼盘","parentKey":"xmjl","sort":201,"url":"view/project/openProject"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000094","key":"xmjl_zhgl","lev":2,"name":"账号管理","parentKey":"xmjl","sort":202,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000095","key":"xmjl_yjsh","lev":2,"name":"佣金审核","parentKey":"xmjl","sort":203,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000096","key":"xmjl_kfsbt","lev":2,"name":"开发商补贴","parentKey":"xmjl","sort":204,"url":"view/devpSubsidy/list"},{"hide":1,"id":"2017100200000000097","key":"xmjl_tsgl","lev":2,"name":"推送管理","parentKey":"xmjl","sort":205,"url":"view/push/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000098","key":"xmjl_khtj","lev":2,"name":"客户统计","parentKey":"xmjl","sort":206,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000099","key":"xmjl_sytj","lev":2,"name":"收入统计","parentKey":"xmjl","sort":207,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000100","key":"xmjl_yjtj","lev":2,"name":"佣金统计","parentKey":"xmjl","sort":208,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000092","key":"xmjl","lev":1,"name":"项目经理","sort":200},{"children":[{"hide":1,"id":"2017100200000000102","key":"xmzl_qrdf","lev":2,"name":"确认到访","parentKey":"xmzl","sort":211,"url":"view/code/code"},{"hide":1,"id":"2017100200000000103","key":"xmzl_fsyyyzm","lev":2,"name":"发送语音验证码","parentKey":"xmzl","sort":212,"url":"view/code/telcode"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000104","key":"xmzl_posjbd","lev":2,"name":"POS机绑定","parentKey":"xmzl","sort":213,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000105","key":"xmzl_posbdxx","lev":2,"name":"POS交易记录","parentKey":"xmzl","sort":214,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000106","key":"xmzl_khyxqx","lev":2,"name":"客户意向查询","parentKey":"xmzl","sort":215,"url":"view/custintent/custAuditList"},{"hide":1,"id":"2017100200000000107","key":"xmzl_htgl","lev":2,"name":"合同管理","parentKey":"xmzl","sort":216,"url":"view/agreement/list"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000101","key":"xmzl","lev":1,"name":"项目助理","sort":210},{"children":[{"hide":1,"id":"2017100200000000109","key":"yyzy_qdgzpz","lev":2,"name":"签到规则配置","parentKey":"yyzy","sort":221,"url":"view/sysconfig/signin"},{"cssClass":"fa-building","hide":1,"id":"2017100200000000110","key":"yyzy_lpgl","lev":2,"name":"楼盘管理","parentKey":"yyzy","sort":222,"url":"view/project/manager_list"},{"hide":1,"id":"2017100200000000111","key":"yyzy_tjcs","lev":2,"name":"城市管理","parentKey":"yyzy","sort":223,"url":"view/city/add2"},{"cssClass":"fa-slideshare","hide":1,"id":"2017100200000000112","key":"yyzy_zhgl","lev":2,"name":"账号管理","parentKey":"yyzy","sort":224,"url":"view/user/user_list"},{"hide":1,"id":"2017100200000000113","key":"yyzy_tsgl","lev":2,"name":"推送管理","parentKey":"yyzy","sort":225,"url":"view/push/list"},{"hide":1,"id":"2017100200000000114","key":"yyzy_ggwgl","lev":2,"name":"广告位管理","parentKey":"yyzy","sort":226,"url":"view/adv/list"},{"hide":1,"id":"2017100200000000115","key":"yyzy_khyxqx","lev":2,"name":"客户意向查询","parentKey":"yyzy","sort":227,"url":"view/custintent/custAuditList"},{"cssClass":"fa-unlock-alt","hide":1,"id":"2017100200000000116","key":"yyzy_posjbd","lev":2,"name":"POS机绑定","parentKey":"yyzy","sort":228,"url":"view/pos/bind"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000117","key":"yyzy_posjyjl","lev":2,"name":"POS交易记录","parentKey":"yyzy","sort":229,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000118","key":"yyzy_qyjjgs","lev":2,"name":"签约经纪公司","parentKey":"yyzy","sort":230,"url":"view/pos/list"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000119","key":"yyzy_jjrgl","lev":2,"name":"经纪人管理","parentKey":"yyzy","sort":231,"url":"view/agent/list"},{"cssClass":"fa-user","hide":1,"id":"2017100200000000120","key":"yyzy_yhtj","lev":2,"name":"用户统计","parentKey":"yyzy","sort":232,"url":"view/data/statIncome_data"},{"cssClass":"fa-group","hide":1,"id":"2017100200000000121","key":"yyzy_khtj","lev":2,"name":"客户统计","parentKey":"yyzy","sort":233,"url":"view/data/statIncome_data"},{"cssClass":"fa-line-chart","hide":1,"id":"2017100200000000122","key":"yyzy_sytj","lev":2,"name":"收入统计","parentKey":"yyzy","sort":234,"url":"view/data/statIncome_data"},{"cssClass":"fa-pie-chart","hide":1,"id":"2017100200000000123","key":"yyzy_yjtj","lev":2,"name":"佣金统计","parentKey":"yyzy","sort":235,"url":"view/data/statIncome_data"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000108","key":"yyzy","lev":1,"name":"运营专员","sort":220},{"children":[{"hide":1,"id":"2017100200000000125","key":"yjzy_yjgzsh","lev":2,"name":"佣金规则审核","parentKey":"yjzy","sort":241,"url":"view/commission/auditList"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000126","key":"yjzy_jjrsmrz","lev":2,"name":"经纪人实名认证","parentKey":"yjzy","sort":242,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000127","key":"yjzy_jjryhkrz","lev":2,"name":"经纪人银行卡认证","parentKey":"yjzy","sort":243,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000128","key":"yjzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"yjzy","sort":244,"url":"view/agent/grain"},{"cssClass":"fa-newspaper-o","hide":1,"id":"2017100200000000129","key":"yjzy_zygwsmrz","lev":2,"name":"置业顾问实名认证","parentKey":"yjzy","sort":245,"url":"view/agent/list"},{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000130","key":"yjzy_zygwyhkrz","lev":2,"name":"置业顾问银行卡认证","parentKey":"yjzy","sort":246,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000131","key":"yjzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"yjzy","sort":247,"url":"view/agent/list"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000132","key":"yjzy_dgzhsh","lev":2,"name":"对公账号审核","parentKey":"yjzy","sort":248,"url":"view/firm/account"},{"hide":1,"id":"2017100200000000133","key":"yjzy_tksh","lev":2,"name":"退款审核","parentKey":"yjzy","sort":249,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000134","key":"yjzy_yjsh","lev":2,"name":"佣金审核","parentKey":"yjzy","sort":250,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000135","key":"yjzy_htgl","lev":2,"name":"合同管理","parentKey":"yjzy","sort":251,"url":"view/agreement/list"},{"hide":1,"id":"2017100200000000136","key":"yjzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"yjzy","sort":252,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000124","key":"yjzy","lev":1,"name":"佣金专员","sort":240},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000138","key":"cnzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cnzy","sort":261,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000139","key":"cnzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cnzy","sort":262,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000140","key":"cnzy_tksh","lev":2,"name":"退款审核","parentKey":"cnzy","sort":263,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000141","key":"cnzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cnzy","sort":264,"url":"view/commission/list"},{"hide":1,"id":"2017100200000000142","key":"cnzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cnzy","sort":265,"url":"view/commission/Ext"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000137","key":"cnzy","lev":1,"name":"出纳专员","sort":260},{"children":[{"cssClass":"fa-credit-card","hide":1,"id":"2017100200000000144","key":"cwzy_jjrybtx","lev":2,"name":"经纪人元宝提现","parentKey":"cwzy","sort":271,"url":"view/agent/grain"},{"cssClass":"fa-database","hide":1,"id":"2017100200000000145","key":"cwzy_zygwybtx","lev":2,"name":"置业顾问元宝提现","parentKey":"cwzy","sort":272,"url":"view/agent/list"},{"hide":1,"id":"2017100200000000146","key":"cwzy_kfsbt","lev":2,"name":"开发商补贴确认","parentKey":"cwzy","sort":273,"url":"view/devpSubsidy/list2"},{"hide":1,"id":"2017100200000000147","key":"cwzy_tksh","lev":2,"name":"退款审核","parentKey":"cwzy","sort":274,"url":"view/refund/list"},{"hide":1,"id":"2017100200000000148","key":"cwzy_yjsh","lev":2,"name":"佣金审核","parentKey":"cwzy","sort":275,"url":"view/commission/list"},{"cssClass":"fa-link","hide":1,"id":"2017100200000000149","key":"cwzy_posbdxx","lev":2,"name":"POS交易记录","parentKey":"cwzy","sort":276,"url":"view/pos/list"},{"hide":1,"id":"2017100200000000150","key":"cwzy_ewyjsh","lev":2,"name":"额外佣金审核","parentKey":"cwzy","sort":277,"url":"view/commission/Ext"}],"hide":1,"id":"2017100200000000143","key":"cwzy","lev":1,"name":"财务专员","sort":270},{"children":[{"hide":1,"id":"2017100200000000152","key":"jjfwzycs_jjgswh","lev":2,"name":"经纪公司维护","parentKey":"jjfwzycs","sort":281,"url":"view/firm/list2"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000151","key":"jjfwzycs","lev":1,"name":"经纪服务专员测试","sort":280},{"children":[{"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000154","key":"kfzy_khyxsh","lev":2,"name":"客户意向审核","parentKey":"kfzy","sort":291,"url":"view/custintent/custSupport"}],"cssClass":"fa-sitemap","hide":1,"id":"2017100200000000153","key":"kfzy","lev":1,"name":"客服专员","sort":290}]
2017/12/27 18:08:30,961 DEBUG  http-nio-2000-exec-8  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 18:08:31,181 DEBUG  http-nio-2000-exec-8  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc 
2017/12/27 18:08:31,184 DEBUG  http-nio-2000-exec-8  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 18:08:31,202 DEBUG  http-nio-2000-exec-8  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 18:08:31,205 INFO   http-nio-2000-exec-8  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=4, size=4, startRow=0, endRow=3, total=4, pages=1, list=[com.gxd.model.simple.News@7c2efebb, com.gxd.model.simple.News@7155e6ae, com.gxd.model.simple.News@3e9be3a3, com.gxd.model.simple.News@6c7e0271], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 18:08:31,223 DEBUG  http-nio-2000-exec-8  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
2017/12/27 18:08:36,715 DEBUG  http-nio-2000-exec-6  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , bb , null
2017/12/27 18:08:36,722 DEBUG  http-nio-2000-exec-6  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS WHERE title like '%bb%' order by create_time asc 
2017/12/27 18:08:36,819 DEBUG  http-nio-2000-exec-6  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 18:08:36,822 DEBUG  http-nio-2000-exec-6  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 0
2017/12/27 18:08:36,824 INFO   http-nio-2000-exec-6  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=0, size=0, startRow=0, endRow=0, total=0, pages=1, list=[], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 18:08:36,825 DEBUG  http-nio-2000-exec-6  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":0,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":0,"pages":1,"prePage":0,"size":0,"startRow":0,"total":0}
2017/12/27 18:08:40,748 DEBUG  http-nio-2000-exec-10 com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , BB , null
2017/12/27 18:08:40,749 DEBUG  http-nio-2000-exec-10 com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS WHERE title like '%BB%' order by create_time asc 
2017/12/27 18:08:40,750 DEBUG  http-nio-2000-exec-10 com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 18:08:40,754 DEBUG  http-nio-2000-exec-10 com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 1
2017/12/27 18:08:40,755 INFO   http-nio-2000-exec-10 com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=1, size=1, startRow=0, endRow=0, total=1, pages=1, list=[com.gxd.model.simple.News@54e3918c], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 18:08:40,756 DEBUG  http-nio-2000-exec-10 com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":0,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":1,"pages":1,"prePage":0,"size":1,"startRow":0,"total":1}
2017/12/27 18:29:14,653 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 18:29:14,665 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc 
2017/12/27 18:29:14,669 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 18:29:14,677 DEBUG  http-nio-2000-exec-3  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 18:29:14,678 INFO   http-nio-2000-exec-3  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=4, size=4, startRow=0, endRow=3, total=4, pages=1, list=[com.gxd.model.simple.News@446cdcd1, com.gxd.model.simple.News@4715406f, com.gxd.model.simple.News@44395bde, com.gxd.model.simple.News@11be6ed0], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 18:29:14,680 DEBUG  http-nio-2000-exec-3  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
2017/12/27 18:41:39,835 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:68) - # parameter , null , null
2017/12/27 18:41:39,845 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==>  Preparing: SELECT ID , ADDRESS , CREATE_TIME , DESCRIPTION , NEWS_TIME , TITLE FROM T_NEWS order by create_time asc 
2017/12/27 18:41:39,849 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - ==> Parameters: 
2017/12/27 18:41:39,856 DEBUG  http-nio-2000-exec-2  com.gxd.mapper.simple.NewsMapper.findNewsByPage.debug(BaseJdbcLogger.java:181) - <==      Total: 4
2017/12/27 18:41:39,858 INFO   http-nio-2000-exec-2  com.gxd.service.simple.impl.NewsServiceImpl.findNewsByPage(NewsServiceImpl.java:98) - # 查询默认数据库 page.toString()=PageInfo{pageNum=1, pageSize=4, size=4, startRow=0, endRow=3, total=4, pages=1, list=[com.gxd.model.simple.News@2f756087, com.gxd.model.simple.News@43145768, com.gxd.model.simple.News@6c768f3f, com.gxd.model.simple.News@5bb6a8ba], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage1, navigateLastPage1, navigatepageNums=[1]}
2017/12/27 18:41:39,859 DEBUG  http-nio-2000-exec-2  com.gxd.web.remote.impl.simple.NewsRemoteClientImpl.findNewsByPage(NewsRemoteClientImpl.java:70) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
dpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:05:12,313 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:05:12,315 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 18:05:12,318 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 18:05:12,321 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 18:05:12,321 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 18:05:12,325 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 18:05:12,325 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:05:12,328 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 18:05:12,329 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:05:12,332 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:05:12,813 WARN   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:62) - Unable to start LiveReload server
2017/12/27 18:05:13,100 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 18:05:13,637 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:05:13,662 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 18:05:13,666 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 18:05:13,667 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 18:05:13,669 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 18:05:13,670 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 18:05:13,674 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 18:05:13,701 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 18:05:13,721 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 18:05:13,735 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 18:05:13,752 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3b1f1f5,type=ConfigurationPropertiesRebinder]
2017/12/27 18:05:13,759 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:05:14,161 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 18:05:14,177 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 18:05:14,286 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2017/12/27 18:05:14,700 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2017/12/27 18:05:14,700 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2017/12/27 18:05:14,863 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2017/12/27 18:05:14,864 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2017/12/27 18:05:15,233 INFO   restartedMain         com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:05:15,540 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929) - Disable delta property : false
2017/12/27 18:05:15,541 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:930) - Single vip registry refresh property : null
2017/12/27 18:05:15,541 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:931) - Force full registry fetch : false
2017/12/27 18:05:15,541 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:932) - Application is null : false
2017/12/27 18:05:15,542 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:933) - Registered Applications size is zero : true
2017/12/27 18:05:15,542 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Application version is -1: true
2017/12/27 18:05:15,542 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) - Getting all instance registry info from the eureka server
2017/12/27 18:05:15,856 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1027) - The response status is 200
2017/12/27 18:05:15,859 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1253) - Starting heartbeat executor: renew interval is: 30
2017/12/27 18:05:15,865 INFO   restartedMain         com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017/12/27 18:05:15,873 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1514369115872 with initial instances count: 1
2017/12/27 18:05:15,972 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-hystrix with eureka with status UP
2017/12/27 18:05:15,974 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.notify(DiscoveryClient.java:1288) - Saw local status change event StatusChangeEvent [timestamp=1514369115974, current=UP, previous=STARTING]
2017/12/27 18:05:15,979 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_GXD-HYSTRIX/192.168.2.4:gxd-hystrix:2001: registering service...
2017/12/27 18:05:15,985 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 18:05:16,008 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 18:05:16,042 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 18:05:16,053 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_GXD-HYSTRIX/192.168.2.4:gxd-hystrix:2001 - registration status: 204
2017/12/27 18:05:16,068 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 18:05:16,079 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 18:05:16,091 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 18:05:16,099 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 18:05:16,108 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 18:05:16,116 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 18:05:16,130 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 18:05:16,134 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 18:05:16,141 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 18:05:16,146 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 18:05:16,153 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 18:05:16,157 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 18:05:16,158 INFO   restartedMain         org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'gxd-hystrix:2001.errorChannel' has 1 subscriber(s).
2017/12/27 18:05:16,158 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 18:05:16,159 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 18:05:16,166 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 18:05:16,238 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-2001"]
2017/12/27 18:05:16,266 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-2001"]
2017/12/27 18:05:16,290 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 18:05:16,348 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 2001 (http)
2017/12/27 18:05:16,352 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 2001
2017/12/27 18:05:16,365 INFO   restartedMain         com.gxd.GxdHystrixApplication.logStarted(StartupInfoLogger.java:57) - Started GxdHystrixApplication in 20.194 seconds (JVM running for 22.901)
2017/12/27 18:10:15,547 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:15:15,553 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:20:15,556 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:25:15,558 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:30:15,568 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:35:15,571 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:40:15,573 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:45:15,574 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:50:15,748 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:55:15,749 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 19:00:15,752 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
se; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2017/12/27 18:06:56,929 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 18:06:56,945 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 18:06:56,975 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:06:56,982 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'shiroConfiguration' of type [com.gxd.common.shiro.ShiroConfiguration$$EnhancerBySpringCGLIB$$9412aed1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,121 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:148) - Configuring ehcache from InputStream
2017/12/27 18:06:57,188 DEBUG  restartedMain         net.sf.ehcache.util.PropertyUtil.parseProperties(PropertyUtil.java:88) - propertiesString is null.
2017/12/27 18:06:57,213 DEBUG  restartedMain         net.sf.ehcache.CacheManager.detectAndFixDiskStorePathConflict(CacheManager.java:654) - No disk store path defined. Skipping disk store path conflict test.
2017/12/27 18:06:57,214 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheManagerEventListener(ConfigurationHelper.java:185) - No CacheManagerEventListenerFactory class specified. Skipping...
2017/12/27 18:06:57,274 DEBUG  restartedMain         net.sf.ehcache.Cache.createBootstrapCacheLoader(Cache.java:968) - No BootstrapCacheLoaderFactory class specified. Skipping...
2017/12/27 18:06:57,275 DEBUG  restartedMain         net.sf.ehcache.Cache.createCacheWriter(Cache.java:942) - CacheWriter factory not configured. Skipping...
2017/12/27 18:06:57,278 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(ConfigurationHelper.java:96) - No CacheExceptionHandlerFactory class specified. Skipping...
2017/12/27 18:06:57,285 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getEhCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,298 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:159) - Cache with name 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache' does not yet exist.  Creating now.
2017/12/27 18:06:57,342 DEBUG  restartedMain         net.sf.ehcache.store.MemoryStore.<init>(MemoryStore.java:153) - Initialized net.sf.ehcache.store.NotifyingMemoryStore for com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 18:06:57,352 DEBUG  restartedMain         net.sf.ehcache.Cache.initialise(Cache.java:1165) - Initialised cache: com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 18:06:57,353 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(ConfigurationHelper.java:361) - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache'.
2017/12/27 18:06:57,354 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:166) - Added EhCache named [com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache]
2017/12/27 18:06:57,412 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.com.gxd.GxdConsumerFreemarkerApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,413 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'gxd-provider.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,427 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$37ba4503] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,439 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,442 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ad443ef: startup date [Wed Dec 27 18:06:57 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@596bc3a2
2017/12/27 18:06:57,485 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:06:57,726 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,746 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$72823ea8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,757 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,770 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$ee9f93cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,787 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,789 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,797 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,800 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$bd903e89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,816 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,824 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedRetryPolicyFactory' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancedRetryPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,832 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedBackoffPolicyFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,837 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'retryabeCachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,847 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,856 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$eb20fff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,867 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,892 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'com.gxd.web.remote.auth.AuthRemoteClient' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:06:57,896 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'myShiroRealm' of type [com.gxd.common.shiro.AuthorizingRealmImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:00,837 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:00,840 INFO   restartedMain         com.gxd.common.shiro.ShiroConfiguration.loadShiroFilterChain(ShiroConfiguration.java:98) - ##################从数据库读取权限规则，加载到shiroFilter中##################
2017/12/27 18:07:01,073 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:01,242 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c043deaf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:01,528 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f27084f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:01,592 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:01,599 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:01,668 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dc5de1ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:02,531 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 3000 (http)
2017/12/27 18:07:02,551 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 18:07:02,554 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 18:07:02,776 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 18:07:02,776 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 10246 ms
2017/12/27 18:07:03,660 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017/12/27 18:07:03,662 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 18:07:03,668 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 18:07:03,669 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 18:07:03,669 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 18:07:03,669 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 18:07:03,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 18:07:03,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 18:07:03,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'SQLInjection' to urls: [/*]
2017/12/27 18:07:03,671 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'XSSCheck' to urls: [/*]
2017/12/27 18:07:03,671 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'shiroFilter' to: [/*]
2017/12/27 18:07:03,671 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 18:07:03,704 INFO   localhost-startStop-1 com.gxd.common.authority.filter.SQLInjectionFilterServlet.init(SQLInjectionFilterServlet.java:34) - ######### regularExpression=(?:')|(?:--)|(/\*(?:.|[\n\r])*?\*/)|(\b(select|update|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\b)
2017/12/27 18:07:03,709 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:55) - XSSSecurityManager init(FilterConfig config) begin
2017/12/27 18:07:03,710 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:60) -  xss_security_config.xml path=file:/E:/idea/gxd-master/gxd-consumer-freemarker/target/classes/conf/xss_security_config.xml 
2017/12/27 18:07:03,710 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:94) - XSSSecurityManager.initConfig(InputStream in) begin
2017/12/27 18:07:03,817 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:162) - 安全匹配规则^.*[I|i][F|f][R|r][A|a][M|m][E|e].*|.*[S|s][C|c][R|r][I|i][P|p][T|t].*|.*[a|A]('%2b')?[l|L]('%2b')?[e|E]('%2b')?[r|R]('%2b')?[t|T]\s*\(.*\).*|.*[W|w][I|i][N|n][D|d][O|o][W|w]\.[L|l][O|o][C|c][A|a][T|t][I|i][O|o][N|n]\s*=.*|.*[S|s][T|t][Y|y][L|l][E|e]\s*=.*[X|x]:[E|e][X|x].*[P|p][R|r][E|e][S|s]{1,2}[I|i][O|o][N|n]\s*\(.*\).*|.*[D|d][O|o][C|c][U|u][M|m][E|e][N|n][T|t]\.[C|c][O|o]{2}[K|k][I|i][E|e].*|.*[E|e][V|v][A|a][L|l]\s*\(.*\).*|.*[U|u][N|n][E|e][S|s][C|c][A|a][P|p][E|e]\s*\(.*\).*|.*[E|e][X|x][E|e][C|c][S|s][C|c][R|r][I|i][P|p][T|t]\s*\(.*\).*|.*[M|m][S|s][G|g][B|b][O|o][X|x]\s*\(.*\).*|.*[C|c][O|o][N|n][F|f][I|i][R|r][M|m]\s*\(.*\).*|.*[P|p][R|r][O|o][M|m][P|p][T|t]\s*\(.*\).*|.*<[S|s][C|c][R|r][I|i][P|p][T|t].*>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>.*|.*<[S|s][T|t][Y|y][L|l][E|e].*>.*</[S|s][T|t][Y|y][L|l][E|e]>.*|[.&[^\"]]*\"[.&[^\"]]*|[.&[^']]*'[.&[^']]*|[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*<[S|s][C|c][R|r][I|i][P|p][T|t]>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*$
2017/12/27 18:07:03,817 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:173) - XSSSecurityManager.initConfig(String path) end
2017/12/27 18:07:03,819 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:67) - 特殊URL过滤匹配规则{imgshow=^$}
2017/12/27 18:07:03,819 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:82) - XSSSecurityManager init(FilterConfig config) end
2017/12/27 18:07:04,471 INFO   restartedMain         com.gxd.common.ApplicationContext.setServletContext(ApplicationContext.java:24) - # version=20171227180704414 , contextPath=
2017/12/27 18:07:04,640 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@596bc3a2: startup date [Wed Dec 27 18:06:52 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46acd739] and template loader path [classpath:/templates/]
2017/12/27 18:07:04,641 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 18:07:05,941 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 18:07:05,941 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 18:07:05,951 INFO   restartedMain         com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@159c1a5f
2017/12/27 18:07:06,445 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 18:07:06,446 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 18:07:06,840 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@596bc3a2: startup date [Wed Dec 27 18:06:52 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46acd739
2017/12/27 18:07:07,062 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.login(com.gxd.model.auth.User,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2017/12/27 18:07:07,064 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[GET]}" onto java.lang.String com.gxd.web.controller.auth.LoginController.login(org.springframework.ui.Model)
2017/12/27 18:07:07,065 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/logout]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.logout()
2017/12/27 18:07:07,066 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/403]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.unauthorizedRole()
2017/12/27 18:07:07,070 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],methods=[POST || GET]}" onto java.lang.String com.gxd.web.controller.MainController.error(javax.servlet.http.HttpServletRequest,org.springframework.ui.ModelMap)
2017/12/27 18:07:07,072 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/ || /index]}" onto java.lang.String com.gxd.web.controller.MainController.home()
2017/12/27 18:07:07,073 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/leftnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.leftnav()
2017/12/27 18:07:07,074 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/topnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.topnav()
2017/12/27 18:07:07,078 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.add(com.gxd.model.simple.News)
2017/12/27 18:07:07,079 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.add()
2017/12/27 18:07:07,080 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/load/{id}],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.load(java.lang.String,org.springframework.ui.ModelMap)
2017/12/27 18:07:07,081 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list(org.springframework.ui.ModelMap)
2017/12/27 18:07:07,081 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/wx],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.controller.simple.NewsController.getNews()
2017/12/27 18:07:07,082 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/edit],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.edit(com.gxd.model.simple.News)
2017/12/27 18:07:07,084 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list_page],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list_page(java.lang.String,java.lang.Integer,org.springframework.ui.ModelMap)
2017/12/27 18:07:07,088 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.SystemController.msg()
2017/12/27 18:07:07,104 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_list()
2017/12/27 18:07:07,105 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/bind],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_bind()
2017/12/27 18:07:07,106 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_list()
2017/12/27 18:07:07,107 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add4],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add4()
2017/12/27 18:07:07,107 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list2()
2017/12/27 18:07:07,108 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_list()
2017/12/27 18:07:07,109 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_grain()
2017/12/27 18:07:07,109 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add5],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add5()
2017/12/27 18:07:07,110 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/openProject],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.openProject()
2017/12/27 18:07:07,111 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_view()
2017/12/27 18:07:07,112 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add7],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add7()
2017/12/27 18:07:07,112 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.grain_list()
2017/12/27 18:07:07,114 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_add()
2017/12/27 18:07:07,115 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/verify],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_verify()
2017/12/27 18:07:07,116 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_list()
2017/12/27 18:07:07,117 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/user/user_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.user_list()
2017/12/27 18:07:07,118 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/telcode],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_telcode()
2017/12/27 18:07:07,119 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_list()
2017/12/27 18:07:07,119 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/poslog],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_poslog()
2017/12/27 18:07:07,120 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list()
2017/12/27 18:07:07,121 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/push/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.push_list()
2017/12/27 18:07:07,121 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add3],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add3()
2017/12/27 18:07:07,122 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add8],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add8()
2017/12/27 18:07:07,122 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/code],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_code()
2017/12/27 18:07:07,124 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/account],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_account()
2017/12/27 18:07:07,124 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_edit()
2017/12/27 18:07:07,125 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/signin],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.signin()
2017/12/27 18:07:07,126 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_list()
2017/12/27 18:07:07,126 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_add2()
2017/12/27 18:07:07,127 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_card()
2017/12/27 18:07:07,128 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add2()
2017/12/27 18:07:07,128 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_list()
2017/12/27 18:07:07,129 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_card()
2017/12/27 18:07:07,130 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/setconfig],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.setconfig()
2017/12/27 18:07:07,130 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/manager_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.manager_list()
2017/12/27 18:07:07,131 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_view()
2017/12/27 18:07:07,131 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custSupport],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custSupport()
2017/12/27 18:07:07,132 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add6],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add6()
2017/12/27 18:07:07,133 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adv/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adv_list()
2017/12/27 18:07:07,133 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_view()
2017/12/27 18:07:07,134 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add9],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add9()
2017/12/27 18:07:07,135 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add()
2017/12/27 18:07:07,137 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenantConfig/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenantConfig_list()
2017/12/27 18:07:07,137 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/she],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_she()
2017/12/27 18:07:07,139 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/Ext],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_Ext()
2017/12/27 18:07:07,139 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviserProject/adviserAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviserAuditList()
2017/12/27 18:07:07,139 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/qianyue],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_qianyue()
2017/12/27 18:07:07,140 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_list()
2017/12/27 18:07:07,140 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_grain()
2017/12/27 18:07:07,140 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/data/statIncome_data],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.statIncome_data()
2017/12/27 18:07:07,141 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_edit()
2017/12/27 18:07:07,141 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_view()
2017/12/27 18:07:07,141 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/custAgent],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_custAgent()
2017/12/27 18:07:07,141 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/rengou],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_rengou()
2017/12/27 18:07:07,142 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/auditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_auditList()
2017/12/27 18:07:07,142 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/com_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_com_list()
2017/12/27 18:07:07,142 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/commissionExt],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commissionExt()
2017/12/27 18:07:07,143 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_namelist()
2017/12/27 18:07:07,143 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_namelist()
2017/12/27 18:07:07,143 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/agentCommission],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agentCommission()
2017/12/27 18:07:07,144 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add_hezuo],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add_hezuo()
2017/12/27 18:07:07,144 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_list()
2017/12/27 18:07:07,144 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/edit_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_edit_list()
2017/12/27 18:07:07,145 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list()
2017/12/27 18:07:07,145 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custAuditList()
2017/12/27 18:07:07,145 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list2()
2017/12/27 18:07:07,146 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custintent_view()
2017/12/27 18:07:07,147 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 18:07:07,147 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 18:07:07,149 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 18:07:07,150 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 18:07:07,295 INFO   restartedMain         com.gxd.common.mvc.WebMvcConfig.addResourceHandlers(WebMvcConfig.java:16) - # WebMvcConfig addResourceHandlers ...
2017/12/27 18:07:07,319 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:07:07,319 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:07:07,320 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:07:07,475 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:07:08,162 WARN   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.refresh(AbstractApplicationContext.java:551) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.tomcat.jdbc.pool.DataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Cannot determine embedded database driver class for database type NONE. If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).
2017/12/27 18:07:08,169 WARN   restartedMain         org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:374) - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2017/12/27 18:07:08,214 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 18:07:08,214 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 18:07:08,273 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ad443ef: startup date [Wed Dec 27 18:06:57 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@596bc3a2
2017/12/27 18:07:08,276 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Stopping service [Tomcat]
2017/12/27 18:07:08,279 DEBUG  localhost-startStop-1 com.gxd.common.authority.filter.XSSSecurityFilter.destroy(XSSSecurityFilter.java:43) - XSSSecurityFilter destroy() begin
2017/12/27 18:07:08,279 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.destroy(XSSSecurityManager.java:225) - XSSSecurityManager.destroy() begin
2017/12/27 18:07:08,280 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.destroy(XSSSecurityManager.java:228) - XSSSecurityManager.destroy() end
2017/12/27 18:07:08,280 DEBUG  localhost-startStop-1 com.gxd.common.authority.filter.XSSSecurityFilter.destroy(XSSSecurityFilter.java:45) - XSSSecurityFilter destroy() end
2017/12/27 18:07:08,329 INFO   restartedMain         org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101) - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2017/12/27 18:07:08,341 ERROR  restartedMain         org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Cannot determine embedded database driver class for database type NONE

Action:

If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).

2017/12/27 18:07:49,345 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/27 18:07:49,392 INFO   restartedMain         org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b3e2de6: startup date [Wed Dec 27 18:07:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca9a079
2017/12/27 18:07:52,848 INFO   restartedMain         org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/27 18:07:54,202 INFO   restartedMain         org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=0bf2ce6e-55ff-366b-91d9-d8a5e19578f6
2017/12/27 18:07:54,294 INFO   restartedMain         org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'XSSCheck' with a different definition: replacing [Root bean: class [org.springframework.boot.web.servlet.FilterRegistrationBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.boot.web.servlet.FilterRegistrationBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2017/12/27 18:07:54,299 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/27 18:07:54,316 INFO   restartedMain         org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/27 18:07:54,349 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:07:54,357 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'shiroConfiguration' of type [com.gxd.common.shiro.ShiroConfiguration$$EnhancerBySpringCGLIB$$14fd6dea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,464 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:148) - Configuring ehcache from InputStream
2017/12/27 18:07:54,507 DEBUG  restartedMain         net.sf.ehcache.util.PropertyUtil.parseProperties(PropertyUtil.java:88) - propertiesString is null.
2017/12/27 18:07:54,528 DEBUG  restartedMain         net.sf.ehcache.CacheManager.detectAndFixDiskStorePathConflict(CacheManager.java:654) - No disk store path defined. Skipping disk store path conflict test.
2017/12/27 18:07:54,529 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheManagerEventListener(ConfigurationHelper.java:185) - No CacheManagerEventListenerFactory class specified. Skipping...
2017/12/27 18:07:54,584 DEBUG  restartedMain         net.sf.ehcache.Cache.createBootstrapCacheLoader(Cache.java:968) - No BootstrapCacheLoaderFactory class specified. Skipping...
2017/12/27 18:07:54,584 DEBUG  restartedMain         net.sf.ehcache.Cache.createCacheWriter(Cache.java:942) - CacheWriter factory not configured. Skipping...
2017/12/27 18:07:54,587 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(ConfigurationHelper.java:96) - No CacheExceptionHandlerFactory class specified. Skipping...
2017/12/27 18:07:54,593 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getEhCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,609 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:159) - Cache with name 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache' does not yet exist.  Creating now.
2017/12/27 18:07:54,646 DEBUG  restartedMain         net.sf.ehcache.store.MemoryStore.<init>(MemoryStore.java:153) - Initialized net.sf.ehcache.store.NotifyingMemoryStore for com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 18:07:54,657 DEBUG  restartedMain         net.sf.ehcache.Cache.initialise(Cache.java:1165) - Initialised cache: com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache
2017/12/27 18:07:54,658 DEBUG  restartedMain         net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(ConfigurationHelper.java:361) - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache'.
2017/12/27 18:07:54,658 INFO   restartedMain         org.apache.shiro.cache.ehcache.EhCacheManager.getCache(EhCacheManager.java:166) - Added EhCache named [com.gxd.common.shiro.AuthorizingRealmImpl.authorizationCache]
2017/12/27 18:07:54,716 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.com.gxd.GxdConsumerFreemarkerApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,717 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'gxd-provider.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,733 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$b8a5041c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,748 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:54,752 INFO   restartedMain         org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@279dbf98: startup date [Wed Dec 27 18:07:54 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b3e2de6
2017/12/27 18:07:54,809 INFO   restartedMain         org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:07:55,351 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,382 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$f36cfdc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,401 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,438 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$6f8a52e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,474 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,476 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,492 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,496 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$3e7afda2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,574 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,602 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedRetryPolicyFactory' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancedRetryPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,661 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'loadBalancedBackoffPolicyFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,670 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'retryabeCachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,686 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,702 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$6c0bbf0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,717 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,745 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'com.gxd.web.remote.auth.AuthRemoteClient' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:55,749 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'myShiroRealm' of type [com.gxd.common.shiro.AuthorizingRealmImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:56,301 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:56,303 INFO   restartedMain         com.gxd.common.shiro.ShiroConfiguration.loadShiroFilterChain(ShiroConfiguration.java:98) - ##################从数据库读取权限规则，加载到shiroFilter中##################
2017/12/27 18:07:56,544 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:56,964 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$735b4409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:57,038 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:57,052 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:57,183 INFO   restartedMain         org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5d48a0c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/27 18:07:58,647 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 3000 (http)
2017/12/27 18:07:58,665 INFO   restartedMain         org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/27 18:07:58,667 INFO   restartedMain         org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/27 18:07:58,884 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/27 18:07:58,885 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 9493 ms
2017/12/27 18:08:00,003 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2017/12/27 18:08:00,006 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/27 18:08:00,015 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/27 18:08:00,016 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/27 18:08:00,016 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/27 18:08:00,016 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/27 18:08:00,017 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/27 18:08:00,017 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017/12/27 18:08:00,017 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'SQLInjection' to urls: [/*]
2017/12/27 18:08:00,018 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'XSSCheck' to urls: [/*]
2017/12/27 18:08:00,018 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'shiroFilter' to: [/*]
2017/12/27 18:08:00,019 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/27 18:08:00,052 INFO   localhost-startStop-1 com.gxd.common.authority.filter.SQLInjectionFilterServlet.init(SQLInjectionFilterServlet.java:34) - ######### regularExpression=(?:')|(?:--)|(/\*(?:.|[\n\r])*?\*/)|(\b(select|update|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\b)
2017/12/27 18:08:00,057 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:55) - XSSSecurityManager init(FilterConfig config) begin
2017/12/27 18:08:00,057 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:60) -  xss_security_config.xml path=file:/E:/idea/gxd-master/gxd-consumer-freemarker/target/classes/conf/xss_security_config.xml 
2017/12/27 18:08:00,058 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:94) - XSSSecurityManager.initConfig(InputStream in) begin
2017/12/27 18:08:00,117 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:162) - 安全匹配规则^.*[I|i][F|f][R|r][A|a][M|m][E|e].*|.*[S|s][C|c][R|r][I|i][P|p][T|t].*|.*[a|A]('%2b')?[l|L]('%2b')?[e|E]('%2b')?[r|R]('%2b')?[t|T]\s*\(.*\).*|.*[W|w][I|i][N|n][D|d][O|o][W|w]\.[L|l][O|o][C|c][A|a][T|t][I|i][O|o][N|n]\s*=.*|.*[S|s][T|t][Y|y][L|l][E|e]\s*=.*[X|x]:[E|e][X|x].*[P|p][R|r][E|e][S|s]{1,2}[I|i][O|o][N|n]\s*\(.*\).*|.*[D|d][O|o][C|c][U|u][M|m][E|e][N|n][T|t]\.[C|c][O|o]{2}[K|k][I|i][E|e].*|.*[E|e][V|v][A|a][L|l]\s*\(.*\).*|.*[U|u][N|n][E|e][S|s][C|c][A|a][P|p][E|e]\s*\(.*\).*|.*[E|e][X|x][E|e][C|c][S|s][C|c][R|r][I|i][P|p][T|t]\s*\(.*\).*|.*[M|m][S|s][G|g][B|b][O|o][X|x]\s*\(.*\).*|.*[C|c][O|o][N|n][F|f][I|i][R|r][M|m]\s*\(.*\).*|.*[P|p][R|r][O|o][M|m][P|p][T|t]\s*\(.*\).*|.*<[S|s][C|c][R|r][I|i][P|p][T|t].*>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>.*|.*<[S|s][T|t][Y|y][L|l][E|e].*>.*</[S|s][T|t][Y|y][L|l][E|e]>.*|[.&[^\"]]*\"[.&[^\"]]*|[.&[^']]*'[.&[^']]*|[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*<[S|s][C|c][R|r][I|i][P|p][T|t]>.*</[S|s][C|c][R|r][I|i][P|p][T|t]>[[.&[^a]]|[|a|\n|\r\n|\r|\u0085|\u2028|\u2029]]*$
2017/12/27 18:08:00,117 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.initConfig(XSSSecurityManager.java:173) - XSSSecurityManager.initConfig(String path) end
2017/12/27 18:08:00,120 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:67) - 特殊URL过滤匹配规则{imgshow=^$}
2017/12/27 18:08:00,120 DEBUG  localhost-startStop-1 com.gxd.common.authority.service.xss.XSSSecurityManager.init(XSSSecurityManager.java:82) - XSSSecurityManager init(FilterConfig config) end
2017/12/27 18:08:01,003 INFO   restartedMain         com.gxd.common.ApplicationContext.setServletContext(ApplicationContext.java:24) - # version=20171227180800992 , contextPath=
2017/12/27 18:08:01,281 INFO   restartedMain         org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b3e2de6: startup date [Wed Dec 27 18:07:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca9a079] and template loader path [classpath:/templates/]
2017/12/27 18:08:01,283 INFO   restartedMain         org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/27 18:08:03,017 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 18:08:03,018 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 18:08:03,029 INFO   restartedMain         com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2988d075
2017/12/27 18:08:03,634 WARN   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2017/12/27 18:08:03,634 INFO   restartedMain         com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017/12/27 18:08:04,179 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b3e2de6: startup date [Wed Dec 27 18:07:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca9a079
2017/12/27 18:08:04,515 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/403]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.unauthorizedRole()
2017/12/27 18:08:04,519 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.login(com.gxd.model.auth.User,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2017/12/27 18:08:04,520 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/login],methods=[GET]}" onto java.lang.String com.gxd.web.controller.auth.LoginController.login(org.springframework.ui.Model)
2017/12/27 18:08:04,520 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/logout]}" onto public java.lang.String com.gxd.web.controller.auth.LoginController.logout()
2017/12/27 18:08:04,523 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],methods=[POST || GET]}" onto java.lang.String com.gxd.web.controller.MainController.error(javax.servlet.http.HttpServletRequest,org.springframework.ui.ModelMap)
2017/12/27 18:08:04,523 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/ || /index]}" onto java.lang.String com.gxd.web.controller.MainController.home()
2017/12/27 18:08:04,524 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/topnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.topnav()
2017/12/27 18:08:04,524 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/leftnav],methods=[GET]}" onto java.lang.String com.gxd.web.controller.MainController.leftnav()
2017/12/27 18:08:04,526 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.add()
2017/12/27 18:08:04,527 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/add],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.add(com.gxd.model.simple.News)
2017/12/27 18:08:04,528 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/load/{id}],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.load(java.lang.String,org.springframework.ui.ModelMap)
2017/12/27 18:08:04,529 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list(org.springframework.ui.ModelMap)
2017/12/27 18:08:04,530 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/edit],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> com.gxd.web.controller.simple.NewsController.edit(com.gxd.model.simple.News)
2017/12/27 18:08:04,531 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/news/list_page],methods=[POST]}" onto public java.lang.String com.gxd.web.controller.simple.NewsController.list_page(java.lang.String,java.lang.Integer,org.springframework.ui.ModelMap)
2017/12/27 18:08:04,532 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/wx],methods=[GET]}" onto public com.gxd.model.simple.News com.gxd.web.controller.simple.NewsController.getNews()
2017/12/27 18:08:04,535 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /msg],methods=[GET]}" onto public java.lang.String com.gxd.web.controller.simple.SystemController.msg()
2017/12/27 18:08:04,548 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_list()
2017/12/27 18:08:04,549 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/telcode],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_telcode()
2017/12/27 18:08:04,550 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add9],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add9()
2017/12/27 18:08:04,550 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list()
2017/12/27 18:08:04,551 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add6],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add6()
2017/12/27 18:08:04,552 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_view()
2017/12/27 18:08:04,553 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/code/code],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.code_code()
2017/12/27 18:08:04,553 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/user/user_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.user_list()
2017/12/27 18:08:04,554 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/openProject],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.openProject()
2017/12/27 18:08:04,555 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add5],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add5()
2017/12/27 18:08:04,555 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custSupport],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custSupport()
2017/12/27 18:08:04,556 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_list()
2017/12/27 18:08:04,557 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/push/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.push_list()
2017/12/27 18:08:04,558 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add8],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add8()
2017/12/27 18:08:04,559 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add7],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add7()
2017/12/27 18:08:04,560 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_list()
2017/12/27 18:08:04,560 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/setconfig],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.setconfig()
2017/12/27 18:08:04,561 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/bind],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_bind()
2017/12/27 18:08:04,562 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_view()
2017/12/27 18:08:04,564 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add3],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add3()
2017/12/27 18:08:04,565 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_list()
2017/12/27 18:08:04,566 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_edit()
2017/12/27 18:08:04,567 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/pos/poslog],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.pos_poslog()
2017/12/27 18:08:04,568 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_add2()
2017/12/27 18:08:04,569 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_list()
2017/12/27 18:08:04,570 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenant/tenant-add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenant_add()
2017/12/27 18:08:04,571 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/verify],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_verify()
2017/12/27 18:08:04,572 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_list2()
2017/12/27 18:08:04,574 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/city/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.city_list()
2017/12/27 18:08:04,575 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_view()
2017/12/27 18:08:04,576 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/refund/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.refund_list()
2017/12/27 18:08:04,578 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.grain_list()
2017/12/27 18:08:04,579 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_grain()
2017/12/27 18:08:04,580 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/manager_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.manager_list()
2017/12/27 18:08:04,581 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add()
2017/12/27 18:08:04,582 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add2()
2017/12/27 18:08:04,583 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add4],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add4()
2017/12/27 18:08:04,585 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_card()
2017/12/27 18:08:04,586 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/card],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_card()
2017/12/27 18:08:04,587 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/sysconfig/signin],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.signin()
2017/12/27 18:08:04,588 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/firm/account],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.firm_account()
2017/12/27 18:08:04,589 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adv/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adv_list()
2017/12/27 18:08:04,590 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/grain],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_grain()
2017/12/27 18:08:04,591 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/edit_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_edit_list()
2017/12/27 18:08:04,592 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/custAgent],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_custAgent()
2017/12/27 18:08:04,594 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/tenantConfig/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.tenantConfig_list()
2017/12/27 18:08:04,595 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_namelist()
2017/12/27 18:08:04,596 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviserProject/adviserAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviserAuditList()
2017/12/27 18:08:04,597 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/project/add_hezuo],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.project_add_hezuo()
2017/12/27 18:08:04,598 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/adviser/namelist],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.adviser_namelist()
2017/12/27 18:08:04,599 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agent/com_list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agent_com_list()
2017/12/27 18:08:04,600 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custintent_view()
2017/12/27 18:08:04,601 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/qianyue],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_qianyue()
2017/12/27 18:08:04,602 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/rengou],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_rengou()
2017/12/27 18:08:04,603 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/edit],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_edit()
2017/12/27 18:08:04,604 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/view],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_view()
2017/12/27 18:08:04,605 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/agreement/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agreement_list()
2017/12/27 18:08:04,606 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/agentCommission],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.agentCommission()
2017/12/27 18:08:04,607 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/she],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_she()
2017/12/27 18:08:04,608 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/data/statIncome_data],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.statIncome_data()
2017/12/27 18:08:04,609 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list2],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list2()
2017/12/27 18:08:04,610 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/Ext],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_Ext()
2017/12/27 18:08:04,612 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_list()
2017/12/27 18:08:04,613 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/commissionExt],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commissionExt()
2017/12/27 18:08:04,614 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/custintent/custAuditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.custAuditList()
2017/12/27 18:08:04,615 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/commission/auditList],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.commission_auditList()
2017/12/27 18:08:04,616 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/view/devpSubsidy/list],methods=[GET]}" onto java.lang.String com.gxd.web.controller.simple.ViewController.devpSubsidy_list()
2017/12/27 18:08:04,620 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 18:08:04,622 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2017/12/27 18:08:04,638 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/27 18:08:04,639 INFO   restartedMain         org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/27 18:08:04,929 INFO   restartedMain         com.gxd.common.mvc.WebMvcConfig.addResourceHandlers(WebMvcConfig.java:16) - # WebMvcConfig addResourceHandlers ...
2017/12/27 18:08:04,965 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:08:04,966 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:08:04,966 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:08:05,171 INFO   restartedMain         org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/27 18:08:06,640 INFO   restartedMain         org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/27 18:08:08,016 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,021 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,023 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/27 18:08:08,023 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/27 18:08:08,025 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,026 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,027 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017/12/27 18:08:08,029 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,031 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,032 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,034 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/27 18:08:08,035 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/27 18:08:08,037 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,039 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:08:08,039 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/27 18:08:08,041 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,042 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/27 18:08:08,044 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/27 18:08:08,044 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,046 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/27 18:08:08,047 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,052 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/27 18:08:08,054 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/27 18:08:08,054 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/27 18:08:08,056 INFO   restartedMain         org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/27 18:08:08,993 WARN   restartedMain         org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:62) - Unable to start LiveReload server
2017/12/27 18:08:09,467 WARN   restartedMain         org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration.logWarning(EurekaStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2017/12/27 18:08:10,278 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:08:10,307 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/27 18:08:10,311 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/27 18:08:10,312 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/27 18:08:10,315 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/27 18:08:10,317 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/27 18:08:10,325 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/27 18:08:10,360 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/27 18:08:10,393 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/27 18:08:10,408 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/27 18:08:10,427 INFO   restartedMain         org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1b3e2de6,type=ConfigurationPropertiesRebinder]
2017/12/27 18:08:10,438 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/27 18:08:10,995 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/27 18:08:11,031 INFO   restartedMain         org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/27 18:08:11,166 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2017/12/27 18:08:11,503 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2017/12/27 18:08:11,504 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2017/12/27 18:08:11,781 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2017/12/27 18:08:11,782 INFO   restartedMain         com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2017/12/27 18:08:12,505 INFO   restartedMain         com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:08:12,987 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929) - Disable delta property : false
2017/12/27 18:08:12,988 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:930) - Single vip registry refresh property : null
2017/12/27 18:08:12,989 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:931) - Force full registry fetch : false
2017/12/27 18:08:12,989 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:932) - Application is null : false
2017/12/27 18:08:12,990 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:933) - Registered Applications size is zero : true
2017/12/27 18:08:12,991 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Application version is -1: true
2017/12/27 18:08:12,991 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) - Getting all instance registry info from the eureka server
2017/12/27 18:08:13,613 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1027) - The response status is 200
2017/12/27 18:08:13,616 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1253) - Starting heartbeat executor: renew interval is: 30
2017/12/27 18:08:13,623 INFO   restartedMain         com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017/12/27 18:08:13,634 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1514369293633 with initial instances count: 2
2017/12/27 18:08:13,877 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application gxd-consumer-freemarker with eureka with status UP
2017/12/27 18:08:13,879 INFO   restartedMain         com.netflix.discovery.DiscoveryClient.notify(DiscoveryClient.java:1288) - Saw local status change event StatusChangeEvent [timestamp=1514369293879, current=UP, previous=STARTING]
2017/12/27 18:08:13,962 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_GXD-CONSUMER-FREEMARKER/192.168.2.4:gxd-consumer-freemarker:3000: registering service...
2017/12/27 18:08:13,972 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/27 18:08:14,001 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/27 18:08:14,033 INFO   DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_GXD-CONSUMER-FREEMARKER/192.168.2.4:gxd-consumer-freemarker:3000 - registration status: 204
2017/12/27 18:08:14,061 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/27 18:08:14,074 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/27 18:08:14,087 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/27 18:08:14,098 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/27 18:08:14,110 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/27 18:08:14,121 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/27 18:08:14,137 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/27 18:08:14,165 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/27 18:08:14,182 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/27 18:08:14,217 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/27 18:08:14,254 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/27 18:08:14,275 INFO   restartedMain         org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/27 18:08:14,282 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/27 18:08:14,283 INFO   restartedMain         org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'gxd-consumer-freemarker:3000.errorChannel' has 1 subscriber(s).
2017/12/27 18:08:14,284 INFO   restartedMain         org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/27 18:08:14,285 INFO   restartedMain         org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2017/12/27 18:08:14,306 INFO   restartedMain         org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2017/12/27 18:08:14,373 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-3000"]
2017/12/27 18:08:14,428 INFO   restartedMain         org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-3000"]
2017/12/27 18:08:14,492 INFO   restartedMain         org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/27 18:08:14,579 INFO   restartedMain         org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 3000 (http)
2017/12/27 18:08:14,583 INFO   restartedMain         org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 3000
2017/12/27 18:08:14,599 INFO   restartedMain         com.gxd.GxdConsumerFreemarkerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdConsumerFreemarkerApplication in 28.882 seconds (JVM running for 31.719)
2017/12/27 18:08:23,306 INFO   http-nio-3000-exec-4  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring FrameworkServlet 'dispatcherServlet'
2017/12/27 18:08:23,306 INFO   http-nio-3000-exec-4  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2017/12/27 18:08:23,396 INFO   http-nio-3000-exec-4  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2017/12/27 18:08:23,706 INFO   http-nio-3000-exec-9  com.gxd.web.controller.auth.LoginController.login(LoginController.java:25) - #去登录
2017/12/27 18:08:25,482 DEBUG  http-nio-3000-exec-3  com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:50) - ## 正在验证用户登录...
2017/12/27 18:08:25,545 INFO   http-nio-3000-exec-3  org.springframework.context.annotation.AnnotationConfigApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a67e923: startup date [Wed Dec 27 18:08:25 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b3e2de6
2017/12/27 18:08:25,840 INFO   http-nio-3000-exec-3  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/27 18:08:26,507 INFO   http-nio-3000-exec-3  com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 18:08:26,590 INFO   http-nio-3000-exec-3  com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-gxd-provider
2017/12/27 18:08:26,702 INFO   http-nio-3000-exec-3  com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: gxd-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=gxd-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017/12/27 18:08:26,735 INFO   http-nio-3000-exec-3  com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
2017/12/27 18:08:26,813 INFO   http-nio-3000-exec-3  com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 18:08:26,818 INFO   http-nio-3000-exec-3  com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client gxd-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=gxd-provider,current list of Servers=[192.168.2.4:2000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.2.4:2000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4fce31e7
2017/12/27 18:08:27,785 INFO   PollingServerListUpdater-0 com.netflix.config.ChainedDynamicProperty.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: gxd-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017/12/27 18:08:29,294 WARN   http-nio-3000-exec-3  org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:216) - Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test, rememberMe=false (192.168.2.4)].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
feign.RetryableException: Read timed out executing GET http://gxd-provider/auth/findUserByName/test
	at feign.FeignException.errorExecuting(FeignException.java:67) ~[feign-core-9.5.0.jar:?]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104) ~[feign-core-9.5.0.jar:?]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:?]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:?]
	at com.sun.proxy.$Proxy98.findUserByName(Unknown Source) ~[?:?]
	at com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:61) ~[classes/:?]
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267) ~[shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:154) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383) [shiro-core-1.3.2.jar:1.3.2]
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) [shiro-web-1.3.2.jar:1.3.2]
	at com.gxd.common.shiro.MShiroFilterFactoryBean$MSpringShiroFilter.doFilterInternal(MShiroFilterFactoryBean.java:91) [classes/:?]
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) [shiro-web-1.3.2.jar:1.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at com.gxd.common.authority.filter.XSSSecurityFilter.doFilter(XSSSecurityFilter.java:89) [classes/:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at com.gxd.common.authority.filter.SQLInjectionFilterServlet.doFilter(SQLInjectionFilterServlet.java:63) [classes/:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110) [spring-boot-actuator-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) [spring-boot-actuator-1.5.9.RELEASE.jar:1.5.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.13.RELEASE.jar:4.3.13.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [?:1.7.0_21]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [?:1.7.0_21]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:722) [?:1.7.0_21]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[?:1.7.0_21]
	at java.net.SocketInputStream.read(SocketInputStream.java:150) ~[?:1.7.0_21]
	at java.net.SocketInputStream.read(SocketInputStream.java:121) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:235) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:275) ~[?:1.7.0_21]
	at java.io.BufferedInputStream.read(BufferedInputStream.java:334) ~[?:1.7.0_21]
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:633) ~[?:1.7.0_21]
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:579) ~[?:1.7.0_21]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1322) ~[?:1.7.0_21]
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468) ~[?:1.7.0_21]
	at feign.Client$Default.convertResponse(Client.java:152) ~[feign-core-9.5.0.jar:?]
	at feign.Client$Default.execute(Client.java:74) ~[feign-core-9.5.0.jar:?]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer$1.doWithRetry(RetryableFeignLoadBalancer.java:111) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer$1.doWithRetry(RetryableFeignLoadBalancer.java:96) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287) ~[spring-retry-1.2.1.RELEASE.jar:?]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:164) ~[spring-retry-1.2.1.RELEASE.jar:?]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:96) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.cloud.netflix.feign.ribbon.RetryableFeignLoadBalancer.execute(RetryableFeignLoadBalancer.java:51) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144) ~[rxjava-1.2.0.jar:1.2.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10151) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.subscribe(Observable.java:10247) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.Observable.subscribe(Observable.java:10214) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444) ~[rxjava-1.2.0.jar:1.2.0]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341) ~[rxjava-1.2.0.jar:1.2.0]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.4.jar:2.2.4]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:?]
	... 76 more
2017/12/27 18:08:29,392 INFO   http-nio-3000-exec-3  com.gxd.web.controller.auth.LoginController.login(LoginController.java:31) - # 登录中 
2017/12/27 18:08:29,394 INFO   http-nio-3000-exec-3  com.gxd.web.controller.auth.LoginController.login(LoginController.java:45) - 对用户[test]进行登录验证..验证开始
2017/12/27 18:08:29,395 DEBUG  http-nio-3000-exec-3  com.gxd.common.shiro.AuthorizingRealmImpl.doGetAuthenticationInfo(AuthorizingRealmImpl.java:50) - ## 正在验证用户登录...
2017/12/27 18:08:30,537 INFO   http-nio-3000-exec-3  com.gxd.web.controller.auth.LoginController.login(LoginController.java:47) - 对用户[test]进行登录验证..验证通过
2017/12/27 18:08:30,538 INFO   http-nio-3000-exec-3  com.gxd.web.controller.auth.LoginController.login(LoginController.java:68) - 用户[test]登录认证通过(这里可以进行一些认证通过后的一些系统参数初始化操作)
2017/12/27 18:08:30,777 INFO   http-nio-3000-exec-6  com.gxd.web.controller.MainController.home(MainController.java:21) - # 进入默认首页
2017/12/27 18:08:31,372 DEBUG  http-nio-3000-exec-8  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
2017/12/27 18:08:36,700 INFO   http-nio-3000-exec-5  com.gxd.web.controller.simple.NewsController.list_page(NewsController.java:130) - #分页查询新闻 pageNum=null , keywords=bb
2017/12/27 18:08:40,738 INFO   http-nio-3000-exec-3  com.gxd.web.controller.simple.NewsController.list_page(NewsController.java:130) - #分页查询新闻 pageNum=null , keywords=BB
2017/12/27 18:13:12,998 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:18:12,999 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:23:13,006 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:28:13,012 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:29:14,692 DEBUG  http-nio-3000-exec-1  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
2017/12/27 18:33:13,014 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:38:13,016 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:41:39,798 INFO   http-nio-3000-exec-8  com.gxd.web.controller.MainController.home(MainController.java:21) - # 进入默认首页
2017/12/27 18:41:39,873 DEBUG  http-nio-3000-exec-3  com.gxd.web.controller.simple.NewsController.list(NewsController.java:123) - {"endRow":3,"firstPage":1,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"lastPage":1,"list":[{"address":"BB","createTime":1499662333000,"description":"BB","id":"f40d6da72fa448ada5d7b9d17e19c582","newsTime":1499662560000,"title":"BB"},{"address":"AA","createTime":1499662374000,"description":"AA","id":"31c673070cfa480e9a89bb7d389767c5","newsTime":1499662603000,"title":"AA"},{"address":"DD","createTime":1499662737000,"description":"DD","id":"8714509c7bfb4e2b9a944d3c82b0d001","newsTime":1499663356000,"title":"DD"},{"address":"CC","createTime":1499663248000,"description":"CC","id":"6c0517e1ec0c4831ab93a6c967aacbec","newsTime":1499663353000,"title":"CC"}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4}
2017/12/27 18:41:41,146 INFO   http-nio-3000-exec-6  com.gxd.web.controller.simple.NewsController.add(NewsController.java:59) - # 进入发布新闻页面
2017/12/27 18:41:42,692 INFO   http-nio-3000-exec-5  com.gxd.web.controller.simple.ViewController.tenantConfig_list(ViewController.java:40) - # loding view/tenantConfig/list 
2017/12/27 18:41:43,106 INFO   http-nio-3000-exec-10 com.gxd.web.controller.MainController.error(MainController.java:54) - # 进入错误页面
2017/12/27 18:41:43,641 INFO   http-nio-3000-exec-1  com.gxd.web.controller.simple.ViewController.tenant_list(ViewController.java:28) - # loding view/tenant/tenant-list 
2017/12/27 18:41:45,396 INFO   http-nio-3000-exec-8  com.gxd.web.controller.simple.ViewController.city_add2(ViewController.java:46) - # loding view/city/add2 
2017/12/27 18:41:47,998 INFO   http-nio-3000-exec-1  com.gxd.web.controller.simple.NewsController.add(NewsController.java:59) - # 进入发布新闻页面
2017/12/27 18:43:13,017 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:48:13,019 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:53:13,020 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2017/12/27 18:58:13,022 INFO   AsyncResolver-bootstrap-executor-0 com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
