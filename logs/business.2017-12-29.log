2017/12/29 18:07:54,873 INFO   main                  com.gxd.GxdEurekaServerApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2017/12/29 18:07:54,961 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62566842: startup date [Fri Dec 29 18:07:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b43529a
2017/12/29 18:07:56,584 INFO   main                  org.springframework.integration.config.IntegrationRegistrar.registerHeaderChannelRegistry(IntegrationRegistrar.java:330) - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2017/12/29 18:07:57,913 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:287) - BeanFactory id=d51d05ed-17ef-3175-8f2d-698d99b6c4f3
2017/12/29 18:07:57,937 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerErrorChannel(DefaultConfiguringBeanFactoryPostProcessor.java:130) - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2017/12/29 18:07:57,951 INFO   main                  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor.registerTaskScheduler(DefaultConfiguringBeanFactoryPostProcessor.java:158) - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2017/12/29 18:07:57,964 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017/12/29 18:07:58,172 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$513d0cbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/29 18:07:58,251 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/29 18:07:58,254 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/29 18:07:58,339 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b2a697b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017/12/29 18:08:00,214 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 1111 (http)
2017/12/29 18:08:00,375 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:179) - Starting service [Tomcat]
2017/12/29 18:08:00,381 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:179) - Starting Servlet Engine: Apache Tomcat/8.5.23
2017/12/29 18:08:01,043 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:179) - Initializing Spring embedded WebApplicationContext
2017/12/29 18:08:01,045 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6084 ms
2017/12/29 18:08:03,109 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2017/12/29 18:08:03,110 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2017/12/29 18:08:03,115 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017/12/29 18:08:03,116 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017/12/29 18:08:03,117 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2017/12/29 18:08:03,117 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2017/12/29 18:08:03,118 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017/12/29 18:08:03,119 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017/12/29 18:08:03,119 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2017/12/29 18:08:03,397 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017/12/29 18:08:05,478 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:148) - No spring.application.name found, defaulting to 'application'
2017/12/29 18:08:06,103 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62566842: startup date [Fri Dec 29 18:07:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b43529a
2017/12/29 18:08:06,239 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017/12/29 18:08:06,240 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017/12/29 18:08:06,248 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/29 18:08:06,250 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017/12/29 18:08:06,428 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/29 18:08:06,429 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/29 18:08:06,587 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017/12/29 18:08:08,754 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'taskScheduler'
2017/12/29 18:08:09,427 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017/12/29 18:08:09,428 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,429 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017/12/29 18:08:09,430 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017/12/29 18:08:09,431 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,434 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017/12/29 18:08:09,435 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,436 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,440 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017/12/29 18:08:09,441 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,442 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,443 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017/12/29 18:08:09,443 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017/12/29 18:08:09,447 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017/12/29 18:08:09,448 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017/12/29 18:08:09,448 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,450 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017/12/29 18:08:09,451 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,452 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017/12/29 18:08:09,453 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,454 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,455 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,456 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017/12/29 18:08:09,458 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017/12/29 18:08:09,704 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62566842: startup date [Fri Dec 29 18:07:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b43529a] and template loader path [classpath:/templates/]
2017/12/29 18:08:09,706 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017/12/29 18:08:10,190 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2017/12/29 18:08:11,712 WARN   main                  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration.logWarning(EurekaServerStarterDeprecationWarningAutoConfiguration.java:19) - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2017/12/29 18:08:12,271 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/29 18:08:12,339 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017/12/29 18:08:12,343 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017/12/29 18:08:12,344 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017/12/29 18:08:12,346 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017/12/29 18:08:12,348 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017/12/29 18:08:12,353 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017/12/29 18:08:12,394 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017/12/29 18:08:12,407 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017/12/29 18:08:12,451 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=62566842,type=ConfigurationPropertiesRebinder]
2017/12/29 18:08:12,477 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017/12/29 18:08:12,502 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2017/12/29 18:08:12,835 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2017/12/29 18:08:12,835 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2017/12/29 18:08:12,838 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017/12/29 18:08:12,846 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017/12/29 18:08:12,861 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017/12/29 18:08:12,863 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017/12/29 18:08:12,866 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017/12/29 18:08:12,869 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017/12/29 18:08:12,871 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017/12/29 18:08:12,874 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017/12/29 18:08:12,877 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017/12/29 18:08:12,885 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017/12/29 18:08:12,888 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017/12/29 18:08:12,890 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017/12/29 18:08:12,893 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017/12/29 18:08:12,895 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017/12/29 18:08:12,897 INFO   main                  org.springframework.integration.endpoint.EventDrivenConsumer.logComponentSubscriptionEvent(EventDrivenConsumer.java:108) - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2017/12/29 18:08:12,897 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:109) - Setting the eureka configuration..
2017/12/29 18:08:12,897 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:114) - Eureka data center value eureka.datacenter is not set, defaulting to default
2017/12/29 18:08:12,897 INFO   main                  org.springframework.integration.channel.PublishSubscribeChannel.adjustCounterIfNecessary(AbstractSubscribableChannel.java:81) - Channel 'application:1111.errorChannel' has 1 subscriber(s).
2017/12/29 18:08:12,897 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:128) - Eureka environment value eureka.environment is not set, defaulting to test
2017/12/29 18:08:12,897 INFO   main                  org.springframework.integration.endpoint.EventDrivenConsumer.start(AbstractEndpoint.java:120) - started _org.springframework.integration.errorLogger
2017/12/29 18:08:12,912 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:184) - isAws returned false
2017/12/29 18:08:12,913 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:152) - Initialized server context
2017/12/29 18:08:12,920 INFO   Thread-11             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:72) - Started Eureka Server
2017/12/29 18:08:12,938 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Initializing ProtocolHandler ["http-nio-1111"]
2017/12/29 18:08:12,951 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:179) - Starting ProtocolHandler ["http-nio-1111"]
2017/12/29 18:08:12,971 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:179) - Using a shared selector for servlet write/read
2017/12/29 18:08:13,001 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 1111 (http)
2017/12/29 18:08:13,002 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 1111
2017/12/29 18:08:13,007 INFO   main                  com.gxd.GxdEurekaServerApplication.logStarted(StartupInfoLogger.java:57) - Started GxdEurekaServerApplication in 22.618 seconds (JVM running for 26.062)
